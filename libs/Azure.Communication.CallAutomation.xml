<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Azure.Communication.CallAutomation</name>
    </assembly>
    <members>
        <member name="T:Azure.Communication.CallAutomation.CallAutomationClient">
            <summary>
            The Azure Communication Services Call Automation client.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallAutomationClient.Source">
            <summary>
            CommunicationUserIdentifier that makes the outbound call.
            This can be provided by providing CallAutomationClientOption during construction of CallAutomationClient.
            If left blank, service will create one each request.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallAutomationClient" />.</summary>
            <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.#ctor(System.String,Azure.Communication.CallAutomation.CallAutomationClientOptions)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallAutomationClient" />.</summary>
            <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
            <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Communication.CallAutomation.CallAutomationClientOptions)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallAutomationClient" />.</summary>
            <param name="endpoint">The URI of the Azure Communication Services resource.</param>
            <param name="credential">The TokenCredential used to authenticate requests, such as DefaultAzureCredential.</param>
            <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.#ctor(System.Uri,System.String,Azure.Communication.CallAutomation.CallAutomationClientOptions)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallAutomationClient" /> with custom PMA endpoint.</summary>
            <param name="pmaEndpoint">Endpoint for PMA</param>
            <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
            <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.#ctor(System.Uri,System.Uri,Azure.Core.TokenCredential,Azure.Communication.CallAutomation.CallAutomationClientOptions)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallAutomationClient" />.</summary>
            <param name="pmaEndpoint">Endpoint for PMA</param>
            <param name="acsEndpoint">The URI of the Azure Communication Services resource.</param>
            <param name="credential">The TokenCredential used to authenticate requests, such as DefaultAzureCredential.</param>
            <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.#ctor">
            <summary>Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallAutomationClient" /> for mocking.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.AnswerCallAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            Answer an incoming call.
            <param name="incomingCallContext"> The incoming call context </param>
            <param name="callbackUri"> The callback Uri to receive status notifications. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="callbackUri" /> callbackUri is not formatted correctly. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="incomingCallContext" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.AnswerCallAsync(Azure.Communication.CallAutomation.AnswerCallOptions,System.Threading.CancellationToken)">
            <summary>
            Answer an incoming call.
            </summary>
            <param name="options">Options for the Answer Call operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="options" /> CallbackUri is not formatted correctly. </exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.AnswerCall(System.String,System.Uri,System.Threading.CancellationToken)">
            Answer an incoming call.
            <param name="incomingCallContext"> The incoming call context </param>
            <param name="callbackUri"> The callback Uri to receive status notifications. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="callbackUri" /> callbackUri is not formatted correctly. </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="incomingCallContext" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.AnswerCall(Azure.Communication.CallAutomation.AnswerCallOptions,System.Threading.CancellationToken)">
            <summary>
            Answer an incoming call.
            </summary>
            <param name="options">Options for the AnswerCall operations.</param>
            <param name="cancellationToken">The cancellation token</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="options" /> CallbackUri is not formatted correctly. </exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.RedirectCallAsync(System.String,Azure.Communication.CallAutomation.CallInvite,System.Threading.CancellationToken)">
            Redirect an incoming call to the target identity.
            <param name="incomingCallContext"> The incoming call context. </param>
            <param name="callInvite"> The target where the call is redirected to. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="incomingCallContext" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callInvite" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.RedirectCallAsync(Azure.Communication.CallAutomation.RedirectCallOptions,System.Threading.CancellationToken)">
            Redirect an incoming call to the target identity.
            <param name="options">Options for the Redirect operations.</param>
            <param name="cancellationToken">The cancellation token</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.RedirectCall(System.String,Azure.Communication.CallAutomation.CallInvite,System.Threading.CancellationToken)">
            Redirect an incoming call to the target identities.
            <param name="incomingCallContext"> The incoming call context </param>
            <param name="callInvite"> The target where the call is redirected to.</param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="incomingCallContext" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="callInvite" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.RedirectCall(Azure.Communication.CallAutomation.RedirectCallOptions,System.Threading.CancellationToken)">
            Redirect an incoming call to the target identity.
            <param name="options">Options for the Redirect operations.</param>
            <param name="cancellationToken">The cancellation token</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.RejectCallAsync(System.String,System.Threading.CancellationToken)">
            Reject an incoming call.
            <param name="incomingCallContext"> The incoming call context </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="incomingCallContext" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.RejectCallAsync(Azure.Communication.CallAutomation.RejectCallOptions,System.Threading.CancellationToken)">
            Reject an incoming call.
            <param name="options">Options for the Reject operations.</param>
            <param name="cancellationToken">The cancellation token</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.RejectCall(System.String,System.Threading.CancellationToken)">
            Reject an incoming call.
            <param name="incomingCallContext"> The incoming call context </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="incomingCallContext" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.RejectCall(Azure.Communication.CallAutomation.RejectCallOptions,System.Threading.CancellationToken)">
            Reject an incoming call.
            <param name="options">Options for the Reject operations.</param>
            <param name="cancellationToken">The cancellation token</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.CreateCallAsync(Azure.Communication.CallAutomation.CallInvite,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Create an outgoing call to target invitee.
            </summary>
            <param name="callInvite"></param>
            <param name="callbackUri"></param>
            <param name="cancellationToken"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="callInvite" /> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="callbackUri" /> CallbackUri is not formatted correctly or empty. </exception>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.CreateCallAsync(Azure.Communication.CallAutomation.CreateCallOptions,System.Threading.CancellationToken)">
            <summary>
            Create an outgoing call to target invitee.
            </summary>
            <param name="options">Options for the CreateCall request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="options" /> CallbackUri is not formatted correctly. </exception>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.CreateCall(Azure.Communication.CallAutomation.CallInvite,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Create an outgoing call to target invitee.
            </summary>
            <param name="callInvite"></param>
            <param name="callbackUri"></param>
            <param name="cancellationToken"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="callInvite" /> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="callbackUri" /> CallbackUri is not formatted correctly or empty. </exception>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.CreateCall(Azure.Communication.CallAutomation.CreateCallOptions,System.Threading.CancellationToken)">
            <summary>
            Create an outgoing call to target invitee.
            </summary>
            <param name="options">Options for the CreateCall request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="options" /> CallbackUri is not formatted correctly. </exception>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.CreateGroupCallAsync(Azure.Communication.CallAutomation.CreateGroupCallOptions,System.Threading.CancellationToken)">
            <summary>
            Create an outgoing group call to target identities.
            </summary>
            <param name="options">Options for the CreateCall request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="options" /> CallbackUri is not formatted correctly. </exception>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.CreateGroupCall(Azure.Communication.CallAutomation.CreateGroupCallOptions,System.Threading.CancellationToken)">
            <summary>
            Create an outgoing group call to target identities.
            </summary>
            <param name="options">Options for the CreateCall request.</param>
            <param name="cancellationToken"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="options" /> CallbackUri is not formatted correctly. </exception>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.GetCallConnection(System.String)">
            <summary> Initializes a new instance of CallConnection. <see cref="T:Azure.Communication.CallAutomation.CallConnection" />.</summary>
            <param name="callConnectionId"> The call connection id for the GetCallConnection instance. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.GetCallRecording">
            <summary> Initializes a new instance of GetCallRecording. <see cref="T:Azure.Communication.CallAutomation.CallRecording" />.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClient.GetEventProcessor">
            <summary>Get Call Automation's EventProcessor for handling Call Automation's event more easily.</summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallAutomationClientOptions">
            <summary>
            The latest version of the Call Automation.
            </summary>
        </member>
        <member name="F:Azure.Communication.CallAutomation.CallAutomationClientOptions.LatestVersion">
            <summary>
            The latest version of the CallAutomation service.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallAutomationClientOptions.Source">
            <summary>
            The caller source of the call automation client.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationClientOptions.#ctor(Azure.Communication.CallAutomation.CallAutomationClientOptions.ServiceVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Communication.CallAutomation.CallAutomationClientOptions" />.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallAutomationClientOptions.ServiceVersion">
            <summary>
            The CallAutomation service version.
            </summary>
        </member>
        <member name="F:Azure.Communication.CallAutomation.CallAutomationClientOptions.ServiceVersion.V2023_03_06">
            <summary>
            The GA1 (1.0.0) of the CallAutomation service.
            </summary>
        </member>
        <member name="F:Azure.Communication.CallAutomation.CallAutomationClientOptions.ServiceVersion.V2023_06_15_Preview">
            <summary>
            The BETA2 (1.1.0-beta) of the CallAutomation service.
            </summary>
        </member>
        <member name="F:Azure.Communication.CallAutomation.CallAutomationClientOptions.ServiceVersion.V2023_10_15">
            <summary>
            The GA2 (1.1.0) of the CallAutomation service.
            </summary>
        </member>
        <member name="F:Azure.Communication.CallAutomation.CallAutomationClientOptions.ServiceVersion.V2023_10_03_Preview">
            <summary>
            Latest ALPHA3 (1.2.0-alpha) preview of the CallAutomation service.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor">
            <summary>
            Call Automation's EventProcessor for incoming events for ease of use.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventProcessor.ProcessEvents(System.Collections.Generic.IEnumerable{Azure.Messaging.CloudEvent})">
            <summary>
            Process incoming events. Pass incoming events to get it processed to have other method like WaitForEventProcessor to function.
            </summary>
            <param name="events">Incoming CloudEvent object.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventProcessor.ProcessEvents(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.CallAutomationEventBase})">
            <summary>
            Process incoming events. Pass incoming events to get it processed to have other method like WaitForEventProcessor to function.
            </summary>
            <param name="events">Incoming <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventBase" />.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventProcessor.AttachOngoingEventProcessor``1(System.String,System.Action{``0})">
            <summary>
            Attach Ongoing EventProcessor for specific event.
            </summary>
            <typeparam name="TEvent">Call Automation Event Type.</typeparam>
            <param name="callConnectionId">CallConnectionId of the call.</param>
            <param name="eventProcessor">EventProcessor to be fired when the specified event arrives.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventProcessor.DetachOngoingEventProcessor``1(System.String)">
            <summary>
            Detach Ongoing EventProcessor for specific event.
            </summary>
            <typeparam name="TEvent">Call Automation Event Type.</typeparam>
            <param name="callConnectionId">CallConnectionId of the call.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventProcessor.WaitForEventProcessor(System.Func{Azure.Communication.CallAutomation.CallAutomationEventBase,System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Wait for matching incoming event. This is blocking Call. Returns the <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventBase" /> once it arrives in ProcessEvent method.
            </summary>
            <param name="predicate">Predicate for waiting on event.</param>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventBase" /> once matching event arrives.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventProcessor.WaitForEventProcessor``1(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Wait for matching incoming event. This is blocking Call. Returns the <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventBase" /> once it arrives in ProcessEvent method.
            </summary>
            <typeparam name="TEvent">Matching event type.</typeparam>
            <param name="connectionId">CallConnectionId of the call.</param>
            <param name="operationContext">OperationContext of the method.</param>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns the event once matching event arrives.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventProcessor.WaitForEventProcessorAsync(System.Func{Azure.Communication.CallAutomation.CallAutomationEventBase,System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Wait for matching incoming event. Returns the <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventBase" /> once it arrives in ProcessEvent method.
            </summary>
            <param name="predicate">Predicate for waiting on event.</param>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventBase" /> once matching event arrives.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventProcessor.WaitForEventProcessorAsync``1(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Wait for matching incoming event. Returns the <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventBase" /> once it arrives in ProcessEvent method.
            </summary>
            <typeparam name="TEvent">Matching event type.</typeparam>
            <param name="connectionId">CallConnectionId of the call.</param>
            <param name="operationContext">OperationContext of the method.</param>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns the event once matching event arrives.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.EventBacklog">
            <summary>
            Event backlog that saves event for cases where events arrive earlier than the response of the method call.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.EventBacklog.TryAddEvent(System.String,Azure.Communication.CallAutomation.CallAutomationEventBase)">
            <summary>
            Adds event to EventsBacklog to be retrieved.
            </summary>
            <param name="backlogEventId">Internally used id for tracking the saved event.</param>
            <param name="eventsToBeSaved">Incoming Event to be saved.</param>
            <returns>Returns True if adding event is successful. False otherwise.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.EventBacklog.TryRemoveEvent(System.String)">
            <summary>
            Remove the event by Id.
            </summary>
            <param name="internalEventId">Key of the event in events backlog.</param>
            <returns>Returns True if removing event is successful. False otherwise.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AddParticipantEventResult">
            <summary><see cref="T:Azure.Communication.CallAutomation.AddParticipantEventResult" /> is returned from WaitForEvent of <see cref="T:Azure.Communication.CallAutomation.AddParticipantResult" />.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantEventResult.IsSuccess">
            <summary>
            Indicates whether the returned event is considered successful or not.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantEventResult.SuccessResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.AddParticipantSucceeded" /> event will be returned when the participant joined the call successfully.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantEventResult.FailureResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.AddParticipantFailed" /> event will be returned when the participant did not join the call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantEventResult.Participant">
            <summary>
            <see cref="T:Azure.Communication.CommunicationIdentifier" /> Participant that was added or removed from the call.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AnswerCallEventResult">
            <summary><see cref="T:Azure.Communication.CallAutomation.AnswerCallEventResult" /> is returned from WaitForEvent of <see cref="T:Azure.Communication.CallAutomation.AnswerCallResult" />.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallEventResult.IsSuccess">
            <summary>
            Indicates whether the returned event is considered successful or not.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallEventResult.SuccessResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.CallConnected" /> event will be returned once the call is established with AnswerCall.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallEventResult.FailureResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.AnswerFailed" /> evnet will be returned when the call was not answered.
            </summary>
            <value></value>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CancelAddParticipantEventResult">
            <summary><see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantEventResult" /> is returned from WaitForEvent of <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantOperationResult" />.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantEventResult.IsSuccess">
            <summary>
            Indicates whether the returned event is considered successful or not.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantEventResult.SuccessResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantSucceeded" /> event will be returned when the invitation was cancelled successfully.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantEventResult.FailureResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantFailed" /> event will be returned when the invitation could not be cancelled.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantEventResult.Participant">
            <summary>
            <see cref="T:Azure.Communication.CommunicationIdentifier" /> Participant whoose invitation was cancelled. Only applicable for
            <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantSucceeded" /> event
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantEventResult.InvitationId">
            <summary>
            Invitation ID used to cancel the request.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsEventResult">
            <summary><see cref="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsEventResult" /> is returned from WaitForEvent of <see cref="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsResult" />.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAllMediaOperationsEventResult.IsSuccess">
            <summary>
            Indicates whether the returned event is considered successful or not.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAllMediaOperationsEventResult.PlayCanceledSucessEvent">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.PlayCanceled" /> event will be returned when the play is successfully cancelled.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAllMediaOperationsEventResult.RecognizeCanceledSucessEvent">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.RecognizeCanceled" /> event will be returned when the Recognize is successfully cancelled.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CreateCallEventResult">
            <summary><see cref="T:Azure.Communication.CallAutomation.CreateCallEventResult" /> is returned from WaitForEvent of <see cref="T:Azure.Communication.CallAutomation.CreateCallResult" />.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallEventResult.IsSuccess">
            <summary>
            Indicates whether the returned event is considered successful or not.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallEventResult.SuccessResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.CallConnected" /> event will be returned once the call is established with CreateCall.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallEventResult.FailureResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.CreateCallFailed" /> evnet will be returned when the call was not created.
            </summary>
            <value></value>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogEventResult">
            <summary><see cref="T:Azure.Communication.CallAutomation.DialogEventResult" /> is returned from WaitForEvent of <see cref="T:Azure.Communication.CallAutomation.DialogResult" />.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogEventResult.IsSuccess">
            <summary>
            Indicates whether the returned event is considered successful or not.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogEventResult.DialogCompletedSuccessResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.DialogCompleted" /> event will be returned once the dialog is completed successfully.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogEventResult.DialogConsentSuccessEvent">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.DialogConsent" /> event will be returned once the dialog consent is received.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogEventResult.FailureResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.DialogFailed" /> event will be returned once the dialog failed.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogEventResult.DialogHangupSuccessEvent">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.DialogHangup" /> event will be returned once the dialog has hung up.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogEventResult.DialogStartedSuccessEvent">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.DialogStarted" /> event will be returned once the dialog has started.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogEventResult.DialogTransferSuccessEvent">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.DialogTransfer" /> event will be returned once the dialog has been transferred.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogEventResult.DialogSensitivityUpdateEvent">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.DialogSensitivityUpdate" /> event will be returned once the dialog has its sensitivity updated.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogEventResult.DialogLanguageChangeEvent">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.DialogLanguageChange" /> event will be returned once the dialog has its language changed.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogEventResult.DialogUpdatedEvent">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.DialogUpdated" /> event will be returned once the dialog has been updated
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PlayEventResult">
            <summary><see cref="T:Azure.Communication.CallAutomation.PlayEventResult" /> is returned from WaitForEvent of <see cref="T:Azure.Communication.CallAutomation.PlayResult" />.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayEventResult.IsSuccess">
            <summary>
            Indicates whether the returned event is considered successful or not.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayEventResult.SuccessResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.PlayCompleted" /> event will be returned once the play is completed successfully.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayEventResult.FailureResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.PlayFailed" /> event will be returned once the play failed.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RemoveParticipantEventResult">
            <summary><see cref="T:Azure.Communication.CallAutomation.RemoveParticipantEventResult" /> is returned from WaitForEvent of <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantResult" />.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantEventResult.IsSuccess">
            <summary>
            Indicates whether the returned event is considered successful or not.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantEventResult.SuccessResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantSucceeded" /> event will be returned when the participant was removed from the call successfully.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantEventResult.FailureResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantFailed" /> event will be returned when the participant could not be removed from the call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantEventResult.Participant">
            <summary>
            <see cref="T:Azure.Communication.CommunicationIdentifier" /> Participant that was removed from the call.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.SendDtmfTonesEventResult">
            <summary><see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesEventResult" /> is returned from WaitForEvent of <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesResult" />.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesEventResult.IsSuccess">
            <summary>
            Indicates whether the returned event is considered successful or not.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesEventResult.SuccessResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesCompleted" /> event will be returned once the dtmf tones have been sent successfully.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesEventResult.FailureResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesFailed" /> event will be returned if send dtmf tones completed unsuccessfully.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StartRecognizingEventResult">
            <summary><see cref="T:Azure.Communication.CallAutomation.StartRecognizingEventResult" /> is returned from WaitForEvent of <see cref="T:Azure.Communication.CallAutomation.StartRecognizingCallMediaResult" />.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartRecognizingEventResult.IsSuccess">
            <summary>
            Indicates whether the returned event is considered successful or not.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartRecognizingEventResult.SuccessResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.RecognizeCompleted" /> event will be returned once the recognize is completed successfully.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartRecognizingEventResult.FailureResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" /> event will be returned once the recognize is completed unsuccessfully.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TransferCallToParticipantEventResult">
            <summary><see cref="T:Azure.Communication.CallAutomation.TransferCallToParticipantEventResult" /> is returned from WaitForEvent of <see cref="T:Azure.Communication.CallAutomation.TransferCallToParticipantResult" />.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferCallToParticipantEventResult.IsSuccess">
            <summary>
            Indicates whether the returned event is considered successful or not.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferCallToParticipantEventResult.SuccessResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.CallTransferAccepted" /> event will be returned once the call transfer is accepted successfully.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferCallToParticipantEventResult.FailureResult">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.CallTransferFailed" /> event will be returned once the call transfer is accepted unsuccessfully.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallConnection">
            <summary>
            The Azure Communication Services Call Connection Client.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnection.CallConnectionId">
            <summary>
            The call connection id.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.#ctor">
            <summary>Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallConnection" /> for mocking.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.GetCallConnectionPropertiesAsync(System.Threading.CancellationToken)">
            <summary> Get various properties of the call. <see cref="T:Azure.Communication.CallAutomation.CallConnectionProperties" />.</summary>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.GetCallConnectionProperties(System.Threading.CancellationToken)">
            <summary> Get various properties of a ongoing call. <see cref="T:Azure.Communication.CallAutomation.CallConnectionProperties" />.</summary>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.HangUpAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary> Disconnect the current caller in a group-call or end a p2p-call.</summary>
            <param name="forEveryone"> If true, this will terminate the call and hang up on all participants in this call. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.HangUp(System.Boolean,System.Threading.CancellationToken)">
            <summary> Disconnect the current caller in a group-call or end a p2p-call. </summary>
            <param name="forEveryone"> If true, this will terminate the call and hang up on all participants in this call. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.TransferCallToParticipantAsync(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary> Transfer this call to a participant. </summary>
            <param name="targetParticipant"> The target to transfer the call to. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="targetParticipant" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.TransferCallToParticipantAsync(Azure.Communication.CallAutomation.TransferToParticipantOptions,System.Threading.CancellationToken)">
            <summary> Transfer this call to a participant. </summary>
            <param name="options"> Options for the Transfer Call To Participant operation. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException"> SourceCallerId is null in <paramref name="options" /> when transferring the call to a PSTN target.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.TransferCallToParticipant(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary> Transfer this call to a participant. </summary>
            <param name="targetParticipant"> The target to transfer the call to. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="targetParticipant" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.TransferCallToParticipant(Azure.Communication.CallAutomation.TransferToParticipantOptions,System.Threading.CancellationToken)">
            <summary> Transfer the call. </summary>
            <param name="options"> Options for the Transfer Call To Participant operation. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
            <exception cref="T:System.ArgumentNullException"> SourceCallerId is null in <paramref name="options" /> when transferring the call to a PSTN target.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.AddParticipantAsync(Azure.Communication.CallAutomation.CallInvite,System.Threading.CancellationToken)">
            <summary>
            Add participant to the call.
            </summary>
            <param name="participantToAdd">Participant to add.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="participantToAdd" /> is null. </exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.AddParticipantAsync(Azure.Communication.CallAutomation.AddParticipantOptions,System.Threading.CancellationToken)">
            <summary> Add participant to the call. </summary>
            <param name="options"> Options for the Add Participants operation.</param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="options" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.AddParticipant(Azure.Communication.CallAutomation.CallInvite,System.Threading.CancellationToken)">
            <summary>
            Add participant to the call.
            </summary>
            <param name="participantToAdd">Participant to add.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="participantToAdd" /> is null. </exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.AddParticipant(Azure.Communication.CallAutomation.AddParticipantOptions,System.Threading.CancellationToken)">
            <summary> Add participant to the call. </summary>
            <param name="options"> Options for the Add Participants operation.</param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="options" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.GetParticipantAsync(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary> Get participant from a call. </summary>
            <param name="participantIdentifier">The participant's identifier.</param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="participantIdentifier" /> is null. </exception>
            <returns>The <see cref="T:Azure.Communication.CallAutomation.CallParticipant" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.GetParticipant(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary> Get participant from a call. </summary>
            <param name="participantIdentifier">The participant identifier.</param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="participantIdentifier" /> is null. </exception>
            <returns>The <see cref="T:Azure.Communication.CallAutomation.CallParticipant" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.GetParticipantsAsync(System.Threading.CancellationToken)">
            <summary> Get participants from a call. </summary>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>The <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.GetParticipants(System.Threading.CancellationToken)">
            <summary> Get participants from a call. </summary>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns>The <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.RemoveParticipantAsync(Azure.Communication.CommunicationIdentifier,System.String,System.Threading.CancellationToken)">
            <summary> Remove participants from the call. </summary>
            <param name="participantToRemove"> The list of identity of participants to be removed from the call. </param>
            <param name="operationContext"> The Operation Context. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="participantToRemove" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.RemoveParticipantAsync(Azure.Communication.CallAutomation.RemoveParticipantOptions,System.Threading.CancellationToken)">
            <summary> Remove participants from the call. </summary>
            <param name="options">Options for the RemoveParticipants operations.</param>
            <param name="cancellationToken">The cancellation token</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.RemoveParticipant(Azure.Communication.CommunicationIdentifier,System.String,System.Threading.CancellationToken)">
            <summary> Remove participants from the call. </summary>
            <param name="participantToRemove"> The list of identity of participants to be removed from the call. </param>
            <param name="operationContext"> The Operation Context. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="participantToRemove" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.RemoveParticipant(Azure.Communication.CallAutomation.RemoveParticipantOptions,System.Threading.CancellationToken)">
            <summary> Remove participants from the call. </summary>
            <param name="options">Options for the RemoveParticipants operations.</param>
            <param name="cancellationToken">The cancellation token</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="options" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.GetCallMedia">
            <summary> Initializes a new instance of CallContent. <see cref="T:Azure.Communication.CallAutomation.CallMedia" />.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.GetCallDialog">
            <summary> Initializes a new instance of CallDialog. <see cref="T:Azure.Communication.CallAutomation.CallDialog" /></summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.MuteParticipant(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary>
            Mute participant from the call.
            Only Acs Users are currently supported.
            </summary>
            <param name="targetParticipant">Participant to mute.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetParticipant" /> is null. </exception>
            <returns>A Response containing MuteParticipantResult.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.MuteParticipant(Azure.Communication.CallAutomation.MuteParticipantOptions,System.Threading.CancellationToken)">
            <summary>
            Mute participants from the call.
            Only Acs Users are currently supported.
            </summary>
            <param name="options">Options for the MuteParticipant operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="options" /> is null. </exception>
            <returns>A Response containing MuteParticipantResult. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.UnmuteParticipant(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary>
            Unmute participant from the call.
            Only Acs Users are currently supported.
            </summary>
            <param name="targetParticipant">Participant to unmute.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetParticipant" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.UnmuteParticipant(Azure.Communication.CallAutomation.UnmuteParticipantOptions,System.Threading.CancellationToken)">
            <summary>
            Unmute participants from the call.
            Only Acs Users are currently supported.
            </summary>
            <param name="options">Options for the UnmuteParticipant operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="options" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="options" /> OperationContext is too long. </exception>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.MuteParticipantAsync(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary>
            Mute participants on the call.
            Only Acs Users are currently supported.
            </summary>
            <param name="targetParticipant">Participants to mute.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetParticipant" /> is null. </exception>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.MuteParticipantAsync(Azure.Communication.CallAutomation.MuteParticipantOptions,System.Threading.CancellationToken)">
            <summary>
            Mute participants on the call.
            </summary>
            <param name="options">Options for the MuteParticipant operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="options" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="options" /> OperationContext is too long. </exception>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.UnmuteParticipantAsync(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary>
            Unmute participants on the call.
            Only Acs Users are currently supported.
            </summary>
            <param name="targetParticipant">Participant to unmute.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.UnmuteParticipantAsync(Azure.Communication.CallAutomation.UnmuteParticipantOptions,System.Threading.CancellationToken)">
            <summary>
            Unmute participants from the call.
            Only Acs Users are currently supported.
            </summary>
            <param name="options">Options for the UnmuteParticipant operation.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="options" /> is null. </exception>
            <exception cref="T:System.ArgumentException"> <paramref name="options" /> OperationContext is too long. </exception>
            <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.CancelAddParticipantOperationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel add participant operation.
            </summary>
            <param name="invitationId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.CancelAddParticipantOperationAsync(Azure.Communication.CallAutomation.CancelAddParticipantOperationOptions,System.Threading.CancellationToken)">
            <summary>
            Cancel add participant operation.
            </summary>
            <param name="options"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.CancelAddParticipantOperation(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel add participant operation.
            </summary>
            <param name="invitationId"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnection.CancelAddParticipantOperation(Azure.Communication.CallAutomation.CancelAddParticipantOperationOptions,System.Threading.CancellationToken)">
            <summary>
            Cancel add participant operation.
            </summary>
            <param name="options"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallDialog">
            <summary>
            The Azure Communication Services Call Dialog Client.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallDialog.CallConnectionId">
            <summary>
            The call connection id.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialog.#ctor">
            <summary>Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallDialog" /> for mocking.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialog.StartDialogAsync(Azure.Communication.CallAutomation.StartDialogOptions,System.Threading.CancellationToken)">
            <summary>
            Start Dialog.
            </summary>
            <param name="startDialogOptions">Configuration attributes for starting dialog.</param>
            <param name="cancellationToken"></param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.DialogResult" />, which can be used to wait for Dialog's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialog.StartDialog(Azure.Communication.CallAutomation.StartDialogOptions,System.Threading.CancellationToken)">
            <summary>
            Start Dialog.
            </summary>
            <param name="startDialog">Configuration attributes for starting dialog.</param>
            <param name="cancellationToken"></param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.DialogResult" />, which can be used to wait for Dialog's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialog.UpdateDialogAsync(Azure.Communication.CallAutomation.UpdateDialogOptions,System.Threading.CancellationToken)">
            <summary>
            Update Dialog.
            </summary>
            <param name="updateDialogOptions">Configuration attributes for updating dialog.</param>
            <param name="cancellationToken"></param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.DialogResult" />, which can be used to wait for Dialog's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialog.UpdateDialog(Azure.Communication.CallAutomation.UpdateDialogOptions,System.Threading.CancellationToken)">
            <summary>
            Update Dialog.
            </summary>
            <param name="updateDialogOptions">Configuration attributes for updating dialog.</param>
            <param name="cancellationToken"></param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.DialogResult" />, which can be used to wait for Dialog's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialog.StopDialogAsync(System.String,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Stop Dialog.
            </summary>
            <param name="dialogId"></param>
            <param name="operationCallbackUri"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialog.StopDialog(System.String,System.Uri,System.Threading.CancellationToken)">
            <summary>
            Stop Dialog.
            </summary>
            <param name="dialogId"></param>
            <param name="operationCallbackUri"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallMedia">
            <summary>
            The Azure Communication Services Call Media Client.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMedia.CallConnectionId">
            <summary>
            The call connection id.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.#ctor">
            <summary>Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallMedia" /> for mocking.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.PlayAsync(Azure.Communication.CallAutomation.PlayOptions,System.Threading.CancellationToken)">
            <summary>
            Plays audio to specified participant(s) async.
            </summary>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <param name="options">An optional object containing play options and configurations.</param>
            <returns>Returns a <see cref="T:Azure.Communication.CallAutomation.PlayResult" /> object, which can be used to wait for Play's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.PlayAsync(Azure.Communication.CallAutomation.PlaySource,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},System.Threading.CancellationToken)">
            <summary>
            Plays audio to specified participant(s) async.
            </summary>
            <param name="playSource"></param>
            <param name="cancellationToken"></param>
            <param name="playTo"></param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.Play(Azure.Communication.CallAutomation.PlayOptions,System.Threading.CancellationToken)">
            <summary>
            Plays audio to specified participant(s).
            </summary>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <param name="options">An optional object containing play options and configurations.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.Play(Azure.Communication.CallAutomation.PlaySource,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},System.Threading.CancellationToken)">
            <summary>
            Plays a file.
            </summary>
            <param name="playSource"></param>
            <param name="cancellationToken"></param>
            <param name="playTo"></param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.PlayToAllAsync(Azure.Communication.CallAutomation.PlayToAllOptions,System.Threading.CancellationToken)">
            <summary>
            Play audio to all participants async.
            </summary>
            <param name="options">An optional object containing play options and configurations.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.PlayToAllAsync(Azure.Communication.CallAutomation.PlaySource,System.Threading.CancellationToken)">
            <summary>
            Play to all participants async.
            </summary>
            <param name="playSource"></param>
            <param name="cancellationToken"></param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.PlayToAll(Azure.Communication.CallAutomation.PlayToAllOptions,System.Threading.CancellationToken)">
            <summary>
            Play audio to all participants.
            </summary>
            <param name="options">An optional object containing play options and configurations.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.PlayToAll(Azure.Communication.CallAutomation.PlaySource,System.Threading.CancellationToken)">
            <summary>
            Play to all participants.
            </summary>
            <param name="playSource"></param>
            <param name="cancellationToken"></param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayResult" />, which can be used to wait for Play's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.CancelAllMediaOperationsAsync(System.Threading.CancellationToken)">
            <summary>
            Cancel any media operation to all participants.
            </summary>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsResult" />, which can be used to wait for CancelAllMediaOperations' related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.CancelAllMediaOperations(System.Threading.CancellationToken)">
            <summary>
            Cancel any media operation to all participants.
            </summary>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsResult" />, which can be used to wait for CancelAllMediaOperations' related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StartRecognizingAsync(Azure.Communication.CallAutomation.CallMediaRecognizeOptions,System.Threading.CancellationToken)">
            <summary>
            Recognize tones.
            </summary>
            <param name="options">Configuration attributes for recognize.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.StartRecognizingCallMediaResult" />, which can be used to wait for StartRecognizing's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StartRecognizing(Azure.Communication.CallAutomation.CallMediaRecognizeOptions,System.Threading.CancellationToken)">
            <summary>
            Recognize tones.
            </summary>
            <param name="options">Configuration attributes for recognize.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.StartRecognizingCallMediaResult" />, which can be used to wait for StartRecognizing's related events.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StartHoldMusic(Azure.Communication.CallAutomation.StartHoldMusicOptions,System.Threading.CancellationToken)">
            <summary>
            Hold participant from the call.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StartHoldMusicAsync(Azure.Communication.CallAutomation.StartHoldMusicOptions,System.Threading.CancellationToken)">
            <summary>
            Hold participant from the call.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StopHoldMusicAsync(Azure.Communication.CallAutomation.StopHoldMusicOptions,System.Threading.CancellationToken)">
            <summary>
            Remove hold from participant.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StopHoldMusic(Azure.Communication.CallAutomation.StopHoldMusicOptions,System.Threading.CancellationToken)">
            <summary>
            Remove hold from participant.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.HoldAsync(Azure.Communication.CallAutomation.HoldOptions,System.Threading.CancellationToken)">
            <summary>
            Hold participant from the call.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.Hold(Azure.Communication.CallAutomation.HoldOptions,System.Threading.CancellationToken)">
            <summary>
            Hold participant from the call.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.UnholdAsync(Azure.Communication.CallAutomation.UnholdOptions,System.Threading.CancellationToken)">
            <summary>
            Remove hold from participant.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.Unhold(Azure.Communication.CallAutomation.UnholdOptions,System.Threading.CancellationToken)">
            <summary>
            Remove hold from participant.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StartContinuousDtmfRecognition(Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions,System.Threading.CancellationToken)">
            <summary>
            Starts continuous Dtmf recognition with continuousDtmfRecognition options and configurations.
            </summary>
            <param name="options">An optional object containing continuousDtmfRecognition options and configurations.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StartContinuousDtmfRecognition(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary>
            Starts continuous Dtmf recognition.
            </summary>
            <param name="targetParticipant">A target participant identifier for starting continuous Dtmf recognition.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StartContinuousDtmfRecognitionAsync(Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions,System.Threading.CancellationToken)">
            <summary>
            Starts continuous Dtmf recognition in async mode  with continuousDtmfRecognition options and configurations.
            </summary>
            <param name="options">An optional object containing continuousDtmfRecognition options and configurations.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StartContinuousDtmfRecognitionAsync(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary>
            Starts continuous Dtmf recognition in async mode.
            </summary>
            <param name="targetParticipant">A target participant identifier for starting continuous Dtmf recognition.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StopContinuousDtmfRecognition(Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions,System.Threading.CancellationToken)">
            <summary>
            Stops continuous Dtmf recognition with continuousDtmfRecognition options and configurations.
            </summary>
            <param name="options">An optional object containing continuousDtmfRecognition options and configurations.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StopContinuousDtmfRecognition(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary>
            Stops continuous Dtmf recognition.
            </summary>
            <param name="targetParticipant">A target participant identifier for stopping continuous Dtmf recognition.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StopContinuousDtmfRecognitionAsync(Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions,System.Threading.CancellationToken)">
            <summary>
            Stops continuous Dtmf recognition in async mode  with continuousDtmfRecognition options and configurations.
            </summary>
            <param name="options">An optional object containing continuousDtmfRecognition options and configurations.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StopContinuousDtmfRecognitionAsync(Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary>
            Stops continuous Dtmf recognition in async mode.
            </summary>
            <param name="targetParticipant">A target participant identifier for stopping continuous Dtmf recognition.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 200 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.SendDtmfTonesAsync(Azure.Communication.CallAutomation.SendDtmfTonesOptions,System.Threading.CancellationToken)">
            <summary>
            Send Dtmf tones in async mode with sendDtmfTonesOptions and configurations.
            </summary>
            <param name="options">An optional object containing SendDtmfTones options and configurations.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns a Response containing a SendDtmfResult object indicating the result of the send operation.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.SendDtmfTonesAsync(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.DtmfTone},Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary>
            Send Dtmf tones in async mode.
            </summary>
            <param name="tones">A list of Tones to be sent.</param>
            <param name="targetParticipant">A target participant identifier for starting continuous Dtmf recognition.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns a Response containing a SendDtmfResult object indicating the result of the send operation.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.SendDtmfTones(Azure.Communication.CallAutomation.SendDtmfTonesOptions,System.Threading.CancellationToken)">
            <summary>
            Send Dtmf tones with sendDtmfTonesOptions and configurations.
            </summary>
            <param name="options">An optional object containing SendDtmfTones options and configurations.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns a Response containing a SendDtmfResult object indicating the result of the send operation.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.SendDtmfTones(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.DtmfTone},Azure.Communication.CommunicationIdentifier,System.Threading.CancellationToken)">
            <summary>
            Send Dtmf tones.
            </summary>
            <param name="tones">A list of Tones to be sent.</param>
            <param name="targetParticipant">A target participant identifier for starting continuous Dtmf recognition.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns a Response containing a SendDtmfResult object indicating the result of the send operation.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StartTranscription(Azure.Communication.CallAutomation.StartTranscriptionOptions,System.Threading.CancellationToken)">
            <summary>
            Starts transcription in the call.
            </summary>
            <param name="options">An optional object containing start transcription options and configurations.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 202 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StartTranscriptionAsync(Azure.Communication.CallAutomation.StartTranscriptionOptions,System.Threading.CancellationToken)">
            <summary>
            Starts transcription in the call.
            </summary>
            <param name="options">An optional object containing start transcription options and configurations.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 202 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StopTranscription(Azure.Communication.CallAutomation.StopTranscriptionOptions,System.Threading.CancellationToken)">
            <summary>
            Stops transcription in the call.
            </summary>
            <param name="options">An optional object containing stop transcription options and configurations.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 202 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.StopTranscriptionAsync(Azure.Communication.CallAutomation.StopTranscriptionOptions,System.Threading.CancellationToken)">
            <summary>
            Stops transcription in the call.
            </summary>
            <param name="options">An optional object containing stop transcription options and configurations.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 202 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.UpdateTranscription(System.String,System.Threading.CancellationToken)">
            <summary>
            API to change transcription language.
            </summary>
            <param name="locale">Defines new locale for transcription.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 202 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMedia.UpdateTranscriptionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            API to change transcription language.
            </summary>
            <param name="locale">Defines new locale for transcription.</param>
            <param name="cancellationToken">An optional CancellationToken to cancel the request.</param>
            <returns>Returns an HTTP response with a 202 status code for success, or an HTTP failure error code in case of an error.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallRecording">
            <summary>
            The Azure Communication Services Call Recording client.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.#ctor">
            <summary>Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallRecording" /> for mocking.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.Start(Azure.Communication.CallAutomation.StartRecordingOptions,System.Threading.CancellationToken)">
            <summary>
            Start recording of the call.
            </summary>
            <param name="options">Options for start recording</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.StartAsync(Azure.Communication.CallAutomation.StartRecordingOptions,System.Threading.CancellationToken)">
            <summary>
            Start recording of the call.
            </summary>
            <param name="options">Options for start recording</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.GetState(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the current recording state by recording id.
            </summary>
            <param name="recordingId">The recording id to get the state of.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.GetStateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the current recording state by recording id.
            </summary>
            <param name="recordingId">The recording id to get the state of.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.Stop(System.String,System.Threading.CancellationToken)">
            <summary>
            Stop recording of the call.
            </summary>
            <param name="recordingId">The recording id to stop.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.StopAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stop recording of the call.
            </summary>
            <param name="recordingId">The recording id to stop.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.PauseAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Pause recording of the call.
            </summary>
            <param name="recordingId">The recording id to pause.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.Pause(System.String,System.Threading.CancellationToken)">
            <summary>
            Pause recording of the call.
            </summary>
            <param name="recordingId">The recording id to pause.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.ResumeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Resume recording of the call.
            </summary>
            <param name="recordingId">The recording id to pause.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.Resume(System.String,System.Threading.CancellationToken)">
            <summary>
            resume recording of the call.
            </summary>
            <param name="recordingId">The recording id to resume.</param>
            <param name="cancellationToken">The cancellation token.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.DownloadStreamingAsync(System.Uri,Azure.HttpRange,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Communication.CallAutomation.CallRecording.DownloadStreamingAsync(System.Uri,Azure.HttpRange,System.Threading.CancellationToken)" />
             operation downloads the recording's content.
            
             </summary>
             <param name="sourceLocation">
             Recording's content's url location.
             </param>
             <param name="range">
             If provided, only download the bytes of the content in the specified range.
             If not provided, download the entire content.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be canceled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> containing the
             downloaded content.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.DownloadStreaming(System.Uri,Azure.HttpRange,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Communication.CallAutomation.CallRecording.DownloadStreaming(System.Uri,Azure.HttpRange,System.Threading.CancellationToken)" />
             operation downloads the recording's content.
            
             </summary>
             <param name="sourceLocation">
             Recording's content's url location.
             </param>
             <param name="range">
             If provided, only download the bytes of the content in the specified range.
             If not provided, download the entire content.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
             notifications that the operation should be canceled.
             </param>
             <returns>
             A <see cref="T:Azure.Response`1" /> containing the
             downloaded content.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException" /> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.DownloadTo(System.Uri,System.IO.Stream,Azure.Communication.CallAutomation.ContentTransferOptions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Communication.CallAutomation.CallRecording.DownloadTo(System.Uri,System.IO.Stream,Azure.Communication.CallAutomation.ContentTransferOptions,System.Threading.CancellationToken)" />
            operation downloads the specified content using parallel requests,
            and writes the content to <paramref name="destinationStream" />.
            </summary>
            <param name="sourceLocation">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
            <param name="destinationStream">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
            <param name="transferOptions">
            Optional <see cref="T:Azure.Communication.CallAutomation.ContentTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
            <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.DownloadToAsync(System.Uri,System.IO.Stream,Azure.Communication.CallAutomation.ContentTransferOptions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Communication.CallAutomation.CallRecording.DownloadToAsync(System.Uri,System.IO.Stream,Azure.Communication.CallAutomation.ContentTransferOptions,System.Threading.CancellationToken)" />
            operation downloads the specified content using parallel requests,
            and writes the content to <paramref name="destinationStream" />.
            </summary>
            <param name="sourceLocation">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
            <param name="destinationStream">
            A <see cref="T:System.IO.Stream" /> to write the downloaded content to.
            </param>
            <param name="transferOptions">
            Optional <see cref="T:Azure.Communication.CallAutomation.ContentTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
            <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.DownloadTo(System.Uri,System.String,Azure.Communication.CallAutomation.ContentTransferOptions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Communication.CallAutomation.CallRecording.DownloadTo(System.Uri,System.String,Azure.Communication.CallAutomation.ContentTransferOptions,System.Threading.CancellationToken)" />
            operation downloads the specified content using parallel requests,
            and writes the content to <paramref name="destinationPath" />.
            </summary>
            <param name="sourceLocation">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
            <param name="destinationPath">
            A file path to write the downloaded content to.
            </param>
            <param name="transferOptions">
            Optional <see cref="T:Azure.Communication.CallAutomation.ContentTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
            <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.DownloadToAsync(System.Uri,System.String,Azure.Communication.CallAutomation.ContentTransferOptions,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Communication.CallAutomation.CallRecording.DownloadToAsync(System.Uri,System.String,Azure.Communication.CallAutomation.ContentTransferOptions,System.Threading.CancellationToken)" />
            operation downloads the specified content using parallel requests,
            and writes the content to <paramref name="destinationPath" />.
            </summary>
            <param name="sourceLocation">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
            <param name="destinationPath">
            A file path to write the downloaded content to.
            </param>
            <param name="transferOptions">
            Optional <see cref="T:Azure.Communication.CallAutomation.ContentTransferOptions" /> to configure
            parallel transfer behavior.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
            <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.Delete(System.Uri,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Communication.CallAutomation.CallRecording.Delete(System.Uri,System.Threading.CancellationToken)" />
            operation deletes the specified content from storage.
            </summary>
            <param name="recordingLocation">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
            <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecording.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Communication.CallAutomation.CallRecording.DeleteAsync(System.Uri,System.Threading.CancellationToken)" />
            operation deletes the specified content from storage
            using parallel requests.
            </summary>
            <param name="recordingLocation">
            A <see cref="T:System.Uri" /> with the Recording's content's url location.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken" /> to propagate
            notifications that the operation should be canceled.
            </param>
            <returns>
            A <see cref="T:Azure.Response" /> describing the operation.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException" /> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="T:Azure.Communication.CallAutomation.EquatableEnumJsonConverter`1">
            <summary>
            Converts the RecordingState object into json correctly.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.Constants.ContentDownloader">
            <summary>
            ContentDownloader values.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.Constants.HeaderNames">
            <summary>
            Header Name constant values.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AzureCommunicationServicesRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureCommunicationServicesRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String)">
            <summary> Initializes a new instance of AzureCommunicationServicesRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The endpoint of the Azure Communication resource. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="endpoint" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureCommunicationServicesRestClient.CreateCallAsync(Azure.Communication.CallAutomation.CreateCallRequestInternal,System.Threading.CancellationToken)">
            <summary> Create an outbound call. </summary>
            <param name="createCallRequest"> The create call request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="createCallRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureCommunicationServicesRestClient.CreateCall(Azure.Communication.CallAutomation.CreateCallRequestInternal,System.Threading.CancellationToken)">
            <summary> Create an outbound call. </summary>
            <param name="createCallRequest"> The create call request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="createCallRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureCommunicationServicesRestClient.AnswerCallAsync(Azure.Communication.CallAutomation.AnswerCallRequestInternal,System.Threading.CancellationToken)">
            <summary> Answer a Call. </summary>
            <param name="answerCallRequest"> The answer call request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="answerCallRequest" /> is null. </exception>
            <remarks> Answer a call using the IncomingCallContext from Event Grid. </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureCommunicationServicesRestClient.AnswerCall(Azure.Communication.CallAutomation.AnswerCallRequestInternal,System.Threading.CancellationToken)">
            <summary> Answer a Call. </summary>
            <param name="answerCallRequest"> The answer call request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="answerCallRequest" /> is null. </exception>
            <remarks> Answer a call using the IncomingCallContext from Event Grid. </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureCommunicationServicesRestClient.RedirectCallAsync(Azure.Communication.CallAutomation.RedirectCallRequestInternal,System.Threading.CancellationToken)">
            <summary> Redirect a call. </summary>
            <param name="redirectCallRequest"> The redirect call request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="redirectCallRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureCommunicationServicesRestClient.RedirectCall(Azure.Communication.CallAutomation.RedirectCallRequestInternal,System.Threading.CancellationToken)">
            <summary> Redirect a call. </summary>
            <param name="redirectCallRequest"> The redirect call request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="redirectCallRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureCommunicationServicesRestClient.RejectCallAsync(Azure.Communication.CallAutomation.RejectCallRequestInternal,System.Threading.CancellationToken)">
            <summary> Reject the call. </summary>
            <param name="rejectCallRequest"> The reject call request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="rejectCallRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureCommunicationServicesRestClient.RejectCall(Azure.Communication.CallAutomation.RejectCallRequestInternal,System.Threading.CancellationToken)">
            <summary> Reject the call. </summary>
            <param name="rejectCallRequest"> The reject call request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="rejectCallRequest" /> is null. </exception>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallAutomationModelFactory">
            <summary> Model factory for models. </summary>
            <summary> Model factory for read-only models. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.TransferCallToParticipantResult(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TransferCallToParticipantResult" />. </summary>
            <param name="operationContext"> The operation context provided by client. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.TransferCallToParticipantResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.SendDtmfTonesResult(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesResult" />. </summary>
            <param name="operationContext"> The operation context provided by client. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.MuteParticipantResult(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MuteParticipantResult" />. </summary>
            <param name="operationContext"> The operation context provided by client. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.MuteParticipantResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.UnmuteParticipantResult(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UnmuteParticipantResult" />. </summary>
            <param name="operationContext"> The operation context provided by client. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.UnmuteParticipantResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecordingStateResult(System.String,System.Nullable{Azure.Communication.CallAutomation.RecordingState},System.Nullable{Azure.Communication.CallAutomation.RecordingKind})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingStateResult" />. </summary>
            <param name="recordingId"></param>
            <param name="recordingState"></param>
            <param name="recordingKind"></param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecordingStateResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ResultInformation(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ResultInformation" />. </summary>
            <param name="code"> Code of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. </param>
            <param name="subCode"> Subcode of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. </param>
            <param name="message"> Detail message that describes the current result. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.ResultInformation" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayFailed(System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlayFailed" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="failedPlaySourceIndex"> Indicates the index of the failed play source. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.PlayFailed" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CollectTonesResult(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.DtmfTone})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CollectTonesResult" />. </summary>
            <param name="tones"></param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.CollectTonesResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.DtmfResult(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.DtmfTone})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DtmfResult" />. </summary>
            <param name="tones"></param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.DtmfResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.SpeechResult(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SpeechResult" />. </summary>
            <param name="speech"> The recognized speech in string. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.SpeechResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ChoiceResult(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ChoiceResult" />. </summary>
            <param name="label"> Label is the primary identifier for the choice detected. </param>
            <param name="recognizedPhrase">
            Phrases are set to the value if choice is selected via phrase detection.
            If Dtmf input is recognized, then Label will be the identifier for the choice detected and phrases will be set to null
            </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.ChoiceResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeFailed(System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="failedPlaySourceIndex"> Indicates the index of the failed play source. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.UserConsent(System.Nullable{System.Int32})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UserConsent" />. </summary>
            <param name="recording"></param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.UserConsent" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.TranscriptionStarted(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.TranscriptionUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionStarted" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="transcriptionUpdate"> Defines the result for TranscriptionUpdate with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.TranscriptionStarted" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.TranscriptionUpdate(System.Nullable{Azure.Communication.CallAutomation.TranscriptionStatus},System.Nullable{Azure.Communication.CallAutomation.TranscriptionStatusDetails})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionUpdate" />. </summary>
            <param name="transcriptionStatus"></param>
            <param name="transcriptionStatusDetails"></param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.TranscriptionUpdate" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.TranscriptionStopped(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.TranscriptionUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionStopped" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="transcriptionUpdate"> Defines the result for TranscriptionUpdate with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.TranscriptionStopped" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.TranscriptionFailed(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.TranscriptionUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionFailed" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="transcriptionUpdate"> Defines the result for TranscriptionUpdate with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.TranscriptionFailed" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.TranscriptionUpdated(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.TranscriptionUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionUpdated" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="transcriptionUpdate"> Defines the result for TranscriptionUpdate with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.TranscriptionUpdated" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.MediaStreamingFailed(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.MediaStreamingUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingFailed" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="mediaStreamingUpdate"> Defines the result for audio streaming update with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.MediaStreamingFailed" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.MediaStreamingUpdate(System.String,System.Nullable{Azure.Communication.CallAutomation.MediaStreamingStatus},System.Nullable{Azure.Communication.CallAutomation.MediaStreamingStatusDetails})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingUpdate" />. </summary>
            <param name="contentType"></param>
            <param name="mediaStreamingStatus"></param>
            <param name="mediaStreamingStatusDetails"></param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.MediaStreamingUpdate" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.MediaStreamingStarted(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.MediaStreamingUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStarted" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="mediaStreamingUpdate"> Defines the result for audio streaming update with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStarted" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.MediaStreamingStopped(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.MediaStreamingUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStopped" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="mediaStreamingUpdate"> Defines the result for audio streaming update with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStopped" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantsResult(Azure.Communication.CallAutomation.CallParticipant,System.String,System.String)">
            <summary> Initializes a new instance of AddParticipantsResult. </summary>
            <param name="participant"> Participant of the call. </param>
            <param name="operationContext"> The operation context provided by client. </param>
            <param name="invitationId"> The Invitation id of this call </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.AddParticipantResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AnswerCallResult(Azure.Communication.CallAutomation.CallConnection,Azure.Communication.CallAutomation.CallConnectionProperties)">
            <summary> Initializes a new instance of AnswerCallResult. </summary>
            <param name="callConnection"> CallConnection Client. </param>
            <param name="callConnectionProperties"> Properties of the call. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.AnswerCallResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallConnectionProperties(System.String,System.String,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},Azure.Communication.CallAutomation.CallConnectionState,System.Uri,Azure.Communication.CommunicationIdentifier,Azure.Communication.PhoneNumberIdentifier,System.String,Azure.Communication.CommunicationUserIdentifier,System.String,System.String)">
            <summary> Initializes a new instance of CallConnectionProperties. </summary>
            <param name="callConnectionId">The call connection id.</param>
            <param name="serverCallId">The server call id.</param>
            <param name="targets">The targets of the call.</param>
            <param name="callConnectionState">The state of the call connection.</param>
            <param name="callbackUri">The callback URI.</param>
            <param name="sourceIdentity">Source identity.</param>
            <param name="sourceCallerIdNumber">Caller ID phone number to appear on the invitee.</param>
            <param name="sourceDisplayName">Display name to appear on the invitee.</param>
            <param name="mediaSubscriptionId">The subscriptionId for Media Streaming.</param>
            <param name="dataSubscriptionId">The subscriptionId for transcription.</param>
            <param name="answeredBy">Identifier that answered the call.</param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallConnectionProperties" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallParticipant(Azure.Communication.CommunicationIdentifier,System.Boolean,System.Boolean)">
            <summary> Initializes a new instance of CallParticipant. </summary>
            <param name="identifier"> The communication identifier. </param>
            <param name="isMuted"> Is participant muted. </param>
            <param name="isOnHold"> Is participant on hold. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallParticipant" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CreateCallResult(Azure.Communication.CallAutomation.CallConnection,Azure.Communication.CallAutomation.CallConnectionProperties)">
            <summary> Initializes a new instance of CallParticipant. </summary>
            <param name="callConnection">The instance of callConnection.</param>
            <param name="callConnectionProperties">The properties of the call.</param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.CreateCallResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RemoveParticipantResult(System.String)">
            <summary> Initializes a new instance of RemoveParticipantResult. </summary>
            <param name="operationContext"> The operation context provided by client. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CancelAddParticipantResult(System.String,System.String)">
            <summary> Initializes a new instance of CancelAddParticipantResult. </summary>
            <param name="invitationId"> Invitation ID used to cancel the request. </param>
            <param name="operationContext"> The operation context provided by client. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantOperationResult" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifier)">
            <summary>
            Initializes a new instance of add participant failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AddParticipantSucceeded(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifier)">
            <summary>
            Initializes a new instance of add participant success event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ParticipantsUpdated(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.CallParticipant},System.Int32)">
            <summary>
            Initializes a new instance of Participants Updated event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RemoveParticipantFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifier)">
            <summary>
            Initializes a new instance of remove participant failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RemoveParticipantSucceeded(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifier)">
            <summary>
            Initializes a new instance of remove participant success event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeCompleted(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.CallMediaRecognitionType,Azure.Communication.CallAutomation.RecognizeResult)">
            <summary> Initializes a new instance of RecognizeCompletedInternal. </summary>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call corre lation. Also called ChainId for skype chain ID. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="recognitionType">
            Determines the sub-type of the recognize operation.
            In case of cancel operation the this field is not set and is returned empty
            </param>
            <param name="recognizeResult"> Defines the result for RecognitionType = Dtmf,Choice,Speech. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecognizeCompleted" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallTransferAccepted(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifier,Azure.Communication.CommunicationIdentifier)">
            <summary> Initializes a new instance of CallTransferAccepted. </summary>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="transferee"> Transferee is the participant who is transferring the call.  </param>
            <param name="transferTarget"> The identity of the target where call should be transferred to. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallTransferAccepted" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CancelAddParticipantSucceeded(System.String,System.String,System.String,System.String,Azure.Communication.CommunicationIdentifier,System.String,Azure.Communication.CallAutomation.ResultInformation)">
            <summary>
            Initializes a new instance of add participant cancelled event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CancelAddParticipantFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.String)">
            <summary>
            Initializes a new instance of cancel add participant failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CreateCallFailed(System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.String)">
            <summary>
            Initializes a new instance of create call failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.AnswerFailed(System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.String)">
            <summary>
            Initializes a new instance of answer failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallConnected(System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of CallConnected. </summary>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallConnected" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallDisconnected(System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of CallDisconnected. </summary>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallConnected" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.CallTransferFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)">
            <summary> Initializes a new instance of CallTransferFailed. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.CallTransferFailed" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ContinuousDtmfRecognitionStopped(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)">
            <summary> Initializes a new instance of ContinuousDtmfRecognitionStopped. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ContinuousDtmfRecognitionToneFailed(System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.String)">
            <summary> Initializes a new instance of ContinuousDtmfRecognitionToneFailed. </summary>
            <param name="resultInformation"> Result information defines the code, subcode and message. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.ContinuousDtmfRecognitionToneReceived(System.Nullable{System.Int32},System.Nullable{Azure.Communication.CallAutomation.DtmfTone},System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.String)">
            <summary> Initializes a new instance of ContinuousDtmfRecognitionToneReceived. </summary>
            <param name="resultInformation"> Result information defines the code, subcode and message. </param>
            <param name="tone"> Define the information for a tone. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <param name="sequenceId"></param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayCompleted(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)">
            <summary> Initializes a new instance of PlayCompleted. </summary>
            <param name="resultInformation"> Result information defines the code, subcode and message. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.PlayCompleted" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)">
            <summary> Initializes a new instance of PlayFailed. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.PlayFailed" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.PlayCanceled(System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of PlayCanceled. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.PlayCanceled" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeCanceled(System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of RecognizeCanceled. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecognizeCanceled" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecognizeFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)">
            <summary> Initializes a new instance of RecognizeFailed. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.RecordingStateChanged(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.RecordingState,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Communication.CallAutomation.RecordingKind})">
            <summary> Initializes a new instance of RecordingStateChanged. </summary>
            <param name="recordingId"> The call recording id. </param>
            <param name="state"></param>
            <param name="startDateTime"> The time of the recording started. </param>
            <param name="recordingKind"></param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.RecordingStateChanged" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.SendDtmfTonesCompleted(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)">
            <summary> Initializes a new instance of SendDtmfTonesCompleted. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesCompleted" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.SendDtmfTonesFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)">
            <summary> Initializes a new instance of SendDtmfTonesFailed. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesFailed" /> instance for mocking. </returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationModelFactory.HoldFailed(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation)">
            <summary> Initializes a new instance of HoldFailed. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <returns> A new <see cref="T:Azure.Communication.CallAutomation.HoldFailed" /> instance for mocking. </returns>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String)">
            <summary> Initializes a new instance of CallConnectionRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The endpoint of the Azure Communication resource. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="endpoint" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.GetCallAsync(System.String,System.Threading.CancellationToken)">
            <summary> Get the detail properties of an ongoing call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.GetCall(System.String,System.Threading.CancellationToken)">
            <summary> Get the detail properties of an ongoing call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.HangupCallAsync(System.String,System.Threading.CancellationToken)">
            <summary> Hang up call automation service from the call. This will make call automation service leave the call, but does not terminate if there are more than 1 caller in the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.HangupCall(System.String,System.Threading.CancellationToken)">
            <summary> Hang up call automation service from the call. This will make call automation service leave the call, but does not terminate if there are more than 1 caller in the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.TerminateCallAsync(System.String,System.Threading.CancellationToken)">
            <summary> Terminate a call using CallConnectionId. </summary>
            <param name="callConnectionId"> The terminate call request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.TerminateCall(System.String,System.Threading.CancellationToken)">
            <summary> Terminate a call using CallConnectionId. </summary>
            <param name="callConnectionId"> The terminate call request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.TransferToParticipantAsync(System.String,Azure.Communication.CallAutomation.TransferToParticipantRequestInternal,System.Threading.CancellationToken)">
            <summary> Transfer the call to a participant. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="transferToParticipantRequest"> The transfer to participant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="transferToParticipantRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.TransferToParticipant(System.String,Azure.Communication.CallAutomation.TransferToParticipantRequestInternal,System.Threading.CancellationToken)">
            <summary> Transfer the call to a participant. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="transferToParticipantRequest"> The transfer to participant request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="transferToParticipantRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.GetParticipantsAsync(System.String,System.Threading.CancellationToken)">
            <summary> Get participants from a call. Recording and transcription bots are omitted from this list. </summary>
            <param name="callConnectionId"> The call connection Id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.GetParticipants(System.String,System.Threading.CancellationToken)">
            <summary> Get participants from a call. Recording and transcription bots are omitted from this list. </summary>
            <param name="callConnectionId"> The call connection Id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.AddParticipantAsync(System.String,Azure.Communication.CallAutomation.AddParticipantRequestInternal,System.Threading.CancellationToken)">
            <summary> Add a participant to the call. </summary>
            <param name="callConnectionId"> The call connection Id. </param>
            <param name="addParticipantRequest"> The <see cref="T:Azure.Communication.CallAutomation.AddParticipantRequestInternal" /> to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="addParticipantRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.AddParticipant(System.String,Azure.Communication.CallAutomation.AddParticipantRequestInternal,System.Threading.CancellationToken)">
            <summary> Add a participant to the call. </summary>
            <param name="callConnectionId"> The call connection Id. </param>
            <param name="addParticipantRequest"> The <see cref="T:Azure.Communication.CallAutomation.AddParticipantRequestInternal" /> to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="addParticipantRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.RemoveParticipantAsync(System.String,Azure.Communication.CallAutomation.RemoveParticipantRequestInternal,System.Threading.CancellationToken)">
            <summary> Remove a participant from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="removeParticipantRequest"> The participant to be removed from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="removeParticipantRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.RemoveParticipant(System.String,Azure.Communication.CallAutomation.RemoveParticipantRequestInternal,System.Threading.CancellationToken)">
            <summary> Remove a participant from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="removeParticipantRequest"> The participant to be removed from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="removeParticipantRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.MuteAsync(System.String,Azure.Communication.CallAutomation.MuteParticipantsRequestInternal,System.Threading.CancellationToken)">
            <summary> Mute participants from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="muteParticipantsRequest"> The participants to be muted from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="muteParticipantsRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.Mute(System.String,Azure.Communication.CallAutomation.MuteParticipantsRequestInternal,System.Threading.CancellationToken)">
            <summary> Mute participants from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="muteParticipantsRequest"> The participants to be muted from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="muteParticipantsRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.UnmuteAsync(System.String,Azure.Communication.CallAutomation.UnmuteParticipantsRequestInternal,System.Threading.CancellationToken)">
            <summary> Unmute participants from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="unmuteParticipantsRequest"> The participants to be unmuted from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="unmuteParticipantsRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.Unmute(System.String,Azure.Communication.CallAutomation.UnmuteParticipantsRequestInternal,System.Threading.CancellationToken)">
            <summary> Unmute participants from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="unmuteParticipantsRequest"> The participants to be unmuted from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="unmuteParticipantsRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.CancelAddParticipantAsync(System.String,Azure.Communication.CallAutomation.CancelAddParticipantRequestInternal,System.Threading.CancellationToken)">
            <summary> Cancel add participant operation. </summary>
            <param name="callConnectionId"> The call connection Id. </param>
            <param name="cancelAddParticipantRequest"> Cancellation request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="cancelAddParticipantRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.CancelAddParticipant(System.String,Azure.Communication.CallAutomation.CancelAddParticipantRequestInternal,System.Threading.CancellationToken)">
            <summary> Cancel add participant operation. </summary>
            <param name="callConnectionId"> The call connection Id. </param>
            <param name="cancelAddParticipantRequest"> Cancellation request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="cancelAddParticipantRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.GetParticipantAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get participant from a call. </summary>
            <param name="callConnectionId"> The call connection Id. </param>
            <param name="participantRawId"> Raw id of the participant to retrieve. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="participantRawId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.GetParticipant(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get participant from a call. </summary>
            <param name="callConnectionId"> The call connection Id. </param>
            <param name="participantRawId"> Raw id of the participant to retrieve. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="participantRawId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.GetParticipantsNextPageAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get participants from a call. Recording and transcription bots are omitted from this list. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="callConnectionId"> The call connection Id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="callConnectionId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionRestClient.GetParticipantsNextPage(System.String,System.String,System.Threading.CancellationToken)">
            <summary> Get participants from a call. Recording and transcription bots are omitted from this list. </summary>
            <param name="nextLink"> The URL to the next page of results. </param>
            <param name="callConnectionId"> The call connection Id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="nextLink" /> or <paramref name="callConnectionId" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallDialogRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialogRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String)">
            <summary> Initializes a new instance of CallDialogRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The endpoint of the Azure Communication resource. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="endpoint" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialogRestClient.StartDialogAsync(System.String,System.String,Azure.Communication.CallAutomation.StartDialogRequestInternal,System.Threading.CancellationToken)">
            <summary> Start a dialog targeting a particular participant on the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="dialogId"> The dialog id. </param>
            <param name="startDialogRequest"> The start dialog request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" />, <paramref name="dialogId" /> or <paramref name="startDialogRequest" /> is null. </exception>
            <remarks> Start a dialog. </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialogRestClient.StartDialog(System.String,System.String,Azure.Communication.CallAutomation.StartDialogRequestInternal,System.Threading.CancellationToken)">
            <summary> Start a dialog targeting a particular participant on the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="dialogId"> The dialog id. </param>
            <param name="startDialogRequest"> The start dialog request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" />, <paramref name="dialogId" /> or <paramref name="startDialogRequest" /> is null. </exception>
            <remarks> Start a dialog. </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialogRestClient.StopDialogAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Stop a dialog. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="dialogId"> The dialog id. </param>
            <param name="operationCallbackUri"> Operation callback URI. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="dialogId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialogRestClient.StopDialog(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary> Stop a dialog. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="dialogId"> The dialog id. </param>
            <param name="operationCallbackUri"> Operation callback URI. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="dialogId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialogRestClient.UpdateDialogAsync(System.String,System.String,Azure.Communication.CallAutomation.UpdateDialogRequestInternal,System.Threading.CancellationToken)">
            <summary> Update an ongoing dialog in a call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="dialogId"> The dialog id. </param>
            <param name="updateDialogRequest"> The update dialog request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" />, <paramref name="dialogId" /> or <paramref name="updateDialogRequest" /> is null. </exception>
            <remarks> Update a dialog. </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDialogRestClient.UpdateDialog(System.String,System.String,Azure.Communication.CallAutomation.UpdateDialogRequestInternal,System.Threading.CancellationToken)">
            <summary> Update an ongoing dialog in a call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="dialogId"> The dialog id. </param>
            <param name="updateDialogRequest"> The update dialog request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" />, <paramref name="dialogId" /> or <paramref name="updateDialogRequest" /> is null. </exception>
            <remarks> Update a dialog. </remarks>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String)">
            <summary> Initializes a new instance of CallMediaRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The endpoint of the Azure Communication resource. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="endpoint" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.PlayAsync(System.String,Azure.Communication.CallAutomation.PlayRequestInternal,System.Threading.CancellationToken)">
            <summary> Plays audio to participants in the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="playRequest"> play request payload. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="playRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.Play(System.String,Azure.Communication.CallAutomation.PlayRequestInternal,System.Threading.CancellationToken)">
            <summary> Plays audio to participants in the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="playRequest"> play request payload. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="playRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StartTranscriptionAsync(System.String,Azure.Communication.CallAutomation.StartTranscriptionRequestInternal,System.Threading.CancellationToken)">
            <summary> Starts transcription in the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="startTranscriptionRequest"> The <see cref="T:Azure.Communication.CallAutomation.StartTranscriptionRequestInternal" /> to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="startTranscriptionRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StartTranscription(System.String,Azure.Communication.CallAutomation.StartTranscriptionRequestInternal,System.Threading.CancellationToken)">
            <summary> Starts transcription in the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="startTranscriptionRequest"> The <see cref="T:Azure.Communication.CallAutomation.StartTranscriptionRequestInternal" /> to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="startTranscriptionRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StopTranscriptionAsync(System.String,Azure.Communication.CallAutomation.StopTranscriptionRequestInternal,System.Threading.CancellationToken)">
            <summary> Stops transcription in the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="stopTranscriptionRequest"> stop transcription request payload. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="stopTranscriptionRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StopTranscription(System.String,Azure.Communication.CallAutomation.StopTranscriptionRequestInternal,System.Threading.CancellationToken)">
            <summary> Stops transcription in the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="stopTranscriptionRequest"> stop transcription request payload. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="stopTranscriptionRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.CancelAllMediaOperationsAsync(System.String,System.Threading.CancellationToken)">
            <summary> Cancel all media operations in a call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.CancelAllMediaOperations(System.String,System.Threading.CancellationToken)">
            <summary> Cancel all media operations in a call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.RecognizeAsync(System.String,Azure.Communication.CallAutomation.RecognizeRequestInternal,System.Threading.CancellationToken)">
            <summary> Recognize media from call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="recognizeRequest"> The media recognize request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="recognizeRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.Recognize(System.String,Azure.Communication.CallAutomation.RecognizeRequestInternal,System.Threading.CancellationToken)">
            <summary> Recognize media from call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="recognizeRequest"> The media recognize request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="recognizeRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StartContinuousDtmfRecognitionAsync(System.String,Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal,System.Threading.CancellationToken)">
            <summary> Start continuous Dtmf recognition by subscribing to tones. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="continuousDtmfRecognitionRequest"> The continuous recognize request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="continuousDtmfRecognitionRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StartContinuousDtmfRecognition(System.String,Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal,System.Threading.CancellationToken)">
            <summary> Start continuous Dtmf recognition by subscribing to tones. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="continuousDtmfRecognitionRequest"> The continuous recognize request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="continuousDtmfRecognitionRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StopContinuousDtmfRecognitionAsync(System.String,Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal,System.Threading.CancellationToken)">
            <summary> Stop continuous Dtmf recognition by unsubscribing to tones. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="continuousDtmfRecognitionRequest"> The continuous recognize request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="continuousDtmfRecognitionRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StopContinuousDtmfRecognition(System.String,Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal,System.Threading.CancellationToken)">
            <summary> Stop continuous Dtmf recognition by unsubscribing to tones. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="continuousDtmfRecognitionRequest"> The continuous recognize request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="continuousDtmfRecognitionRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.SendDtmfTonesAsync(System.String,Azure.Communication.CallAutomation.SendDtmfTonesRequestInternal,System.Threading.CancellationToken)">
            <summary> Send dtmf tones. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="sendDtmfTonesRequest"> The send dtmf tones request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="sendDtmfTonesRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.SendDtmfTones(System.String,Azure.Communication.CallAutomation.SendDtmfTonesRequestInternal,System.Threading.CancellationToken)">
            <summary> Send dtmf tones. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="sendDtmfTonesRequest"> The send dtmf tones request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="sendDtmfTonesRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.UpdateTranscriptionAsync(System.String,Azure.Communication.CallAutomation.UpdateTranscriptionRequestInternal,System.Threading.CancellationToken)">
            <summary> UpdateTranscription Api. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="updateTranscriptionRequest"> The UpdateTranscription request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="updateTranscriptionRequest" /> is null. </exception>
            <remarks> API to change transcription language. </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.UpdateTranscription(System.String,Azure.Communication.CallAutomation.UpdateTranscriptionRequestInternal,System.Threading.CancellationToken)">
            <summary> UpdateTranscription Api. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="updateTranscriptionRequest"> The UpdateTranscription request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="updateTranscriptionRequest" /> is null. </exception>
            <remarks> API to change transcription language. </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.HoldAsync(System.String,Azure.Communication.CallAutomation.HoldRequestInternal,System.Threading.CancellationToken)">
            <summary> Hold participant from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="holdRequest"> The participants to be hold from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="holdRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.Hold(System.String,Azure.Communication.CallAutomation.HoldRequestInternal,System.Threading.CancellationToken)">
            <summary> Hold participant from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="holdRequest"> The participants to be hold from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="holdRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.UnholdAsync(System.String,Azure.Communication.CallAutomation.UnholdRequestInternal,System.Threading.CancellationToken)">
            <summary> Unhold participants from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="unholdRequest"> The participants to be hold from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="unholdRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.Unhold(System.String,Azure.Communication.CallAutomation.UnholdRequestInternal,System.Threading.CancellationToken)">
            <summary> Unhold participants from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="unholdRequest"> The participants to be hold from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="unholdRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StartHoldMusicAsync(System.String,Azure.Communication.CallAutomation.StartHoldMusicRequestInternal,System.Threading.CancellationToken)">
            <summary> Hold participant from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="startHoldMusicRequest"> The participants to be hold from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="startHoldMusicRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StartHoldMusic(System.String,Azure.Communication.CallAutomation.StartHoldMusicRequestInternal,System.Threading.CancellationToken)">
            <summary> Hold participant from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="startHoldMusicRequest"> The participants to be hold from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="startHoldMusicRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StopHoldMusicAsync(System.String,Azure.Communication.CallAutomation.StopHoldMusicRequestInternal,System.Threading.CancellationToken)">
            <summary> Unhold participants from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="stopHoldMusicRequest"> The participants to be hold from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="stopHoldMusicRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StopHoldMusic(System.String,Azure.Communication.CallAutomation.StopHoldMusicRequestInternal,System.Threading.CancellationToken)">
            <summary> Unhold participants from the call using identifier. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="stopHoldMusicRequest"> The participants to be hold from the call. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="stopHoldMusicRequest" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StartMediaStreamingAsync(System.String,Azure.Communication.CallAutomation.StartMediaStreamingRequestInternal,System.Threading.CancellationToken)">
            <summary> Starts media streaming in the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="startMediaStreamingRequest"> The <see cref="T:Azure.Communication.CallAutomation.StartMediaStreamingRequestInternal" /> to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="startMediaStreamingRequest" /> is null. </exception>
            <remarks> Starts media streaming in the call. </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StartMediaStreaming(System.String,Azure.Communication.CallAutomation.StartMediaStreamingRequestInternal,System.Threading.CancellationToken)">
            <summary> Starts media streaming in the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="startMediaStreamingRequest"> The <see cref="T:Azure.Communication.CallAutomation.StartMediaStreamingRequestInternal" /> to use. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="startMediaStreamingRequest" /> is null. </exception>
            <remarks> Starts media streaming in the call. </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StopMediaStreamingAsync(System.String,Azure.Communication.CallAutomation.StopMediaStreamingRequestInternal,System.Threading.CancellationToken)">
            <summary> Stops media streaming in the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="stopMediaStreamingRequest"> stop media streaming request payload. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="stopMediaStreamingRequest" /> is null. </exception>
            <remarks> Stops media streaming in the call. </remarks>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRestClient.StopMediaStreaming(System.String,Azure.Communication.CallAutomation.StopMediaStreamingRequestInternal,System.Threading.CancellationToken)">
            <summary> Stops media streaming in the call. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="stopMediaStreamingRequest"> stop media streaming request payload. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callConnectionId" /> or <paramref name="stopMediaStreamingRequest" /> is null. </exception>
            <remarks> Stops media streaming in the call. </remarks>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallRecordingRestClient.ClientDiagnostics">
            <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecordingRestClient.#ctor(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String)">
            <summary> Initializes a new instance of CallRecordingRestClient. </summary>
            <param name="clientDiagnostics"> The handler for diagnostic messaging in the client. </param>
            <param name="pipeline"> The HTTP pipeline for sending and receiving REST requests and responses. </param>
            <param name="endpoint"> The endpoint of the Azure Communication resource. </param>
            <param name="apiVersion"> Api Version. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="clientDiagnostics" />, <paramref name="pipeline" />, <paramref name="endpoint" /> or <paramref name="apiVersion" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecordingRestClient.StartRecordingAsync(Azure.Communication.CallAutomation.StartCallRecordingRequestInternal,System.Threading.CancellationToken)">
            <summary> Start recording the call. </summary>
            <param name="startCallRecording"> The request body of start call recording request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="startCallRecording" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecordingRestClient.StartRecording(Azure.Communication.CallAutomation.StartCallRecordingRequestInternal,System.Threading.CancellationToken)">
            <summary> Start recording the call. </summary>
            <param name="startCallRecording"> The request body of start call recording request. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="startCallRecording" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecordingRestClient.GetRecordingPropertiesAsync(System.String,System.Threading.CancellationToken)">
            <summary> Get call recording properties. </summary>
            <param name="recordingId"> The recording id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recordingId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecordingRestClient.GetRecordingProperties(System.String,System.Threading.CancellationToken)">
            <summary> Get call recording properties. </summary>
            <param name="recordingId"> The recording id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recordingId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecordingRestClient.StopRecordingAsync(System.String,System.Threading.CancellationToken)">
            <summary> Stop recording the call. </summary>
            <param name="recordingId"> The recording id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recordingId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecordingRestClient.StopRecording(System.String,System.Threading.CancellationToken)">
            <summary> Stop recording the call. </summary>
            <param name="recordingId"> The recording id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recordingId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecordingRestClient.PauseRecordingAsync(System.String,System.Threading.CancellationToken)">
            <summary> Pause recording the call. </summary>
            <param name="recordingId"> The recording id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recordingId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecordingRestClient.PauseRecording(System.String,System.Threading.CancellationToken)">
            <summary> Pause recording the call. </summary>
            <param name="recordingId"> The recording id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recordingId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecordingRestClient.ResumeRecordingAsync(System.String,System.Threading.CancellationToken)">
            <summary> Resume recording the call. </summary>
            <param name="recordingId"> The recording id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recordingId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRecordingRestClient.ResumeRecording(System.String,System.Threading.CancellationToken)">
            <summary> Resume recording the call. </summary>
            <param name="recordingId"> The recording id. </param>
            <param name="cancellationToken"> The cancellation token to use. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recordingId" /> is null. </exception>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AddParticipantFailedInternal">
            <summary> The failed to add participant event. </summary>
            <summary>
            The add participant failed event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantFailedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AddParticipantFailedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantFailedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifierModel,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AddParticipantFailedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="participant"> Participant. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantFailedInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantFailedInternal.ResultInformation">
            <summary> Contains the resulting SIP code, sub-code and message. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantFailedInternal.Participant">
            <summary> Participant. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantFailedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantFailedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantFailedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantFailedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AddParticipantRequestInternal">
            <summary> The request payload for adding participant to the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AddParticipantRequestInternal" />. </summary>
            <param name="participantToAdd"> The participant to invite. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="participantToAdd" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantRequestInternal.#ctor(Azure.Communication.PhoneNumberIdentifierModel,System.String,Azure.Communication.CommunicationIdentifierModel,System.Nullable{System.Int32},System.String,Azure.Communication.CallAutomation.CustomCallingContextInternal,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AddParticipantRequestInternal" />. </summary>
            <param name="sourceCallerIdNumber">
            The source caller Id, a phone number, that's shown to the PSTN participant being invited.
            Required only when inviting a PSTN participant.
            </param>
            <param name="sourceDisplayName">
            (Optional) The display name of the source that is associated with this invite operation when
            adding a PSTN participant or teams user.  Note: Will not update the display name in the roster.
            </param>
            <param name="participantToAdd"> The participant to invite. </param>
            <param name="invitationTimeoutInSeconds">
            Gets or sets the timeout to wait for the invited participant to pickup.
            The maximum value of this is 180 seconds
            </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="customCallingContext"> Used by customer to send custom calling context to targets. </param>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantRequestInternal.SourceCallerIdNumber">
            <summary>
            The source caller Id, a phone number, that's shown to the PSTN participant being invited.
            Required only when inviting a PSTN participant.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantRequestInternal.SourceDisplayName">
            <summary>
            (Optional) The display name of the source that is associated with this invite operation when
            adding a PSTN participant or teams user.  Note: Will not update the display name in the roster.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantRequestInternal.ParticipantToAdd">
            <summary> The participant to invite. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantRequestInternal.InvitationTimeoutInSeconds">
            <summary>
            Gets or sets the timeout to wait for the invited participant to pickup.
            The maximum value of this is 180 seconds
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantRequestInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantRequestInternal.CustomCallingContext">
            <summary> Used by customer to send custom calling context to targets. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AddParticipantResponseInternal">
            <summary> The response payload for adding participants to the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantResponseInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AddParticipantResponseInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantResponseInternal.#ctor(Azure.Communication.CallAutomation.CallParticipantInternal,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AddParticipantResponseInternal" />. </summary>
            <param name="participant"> List of current participants in the call. </param>
            <param name="operationContext"> The operation context provided by client. </param>
            <param name="invitationId"> Invitation ID used to add a participant. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantResponseInternal.Participant">
            <summary> List of current participants in the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantResponseInternal.OperationContext">
            <summary> The operation context provided by client. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantResponseInternal.InvitationId">
            <summary> Invitation ID used to add a participant. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantResponseInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AddParticipantSucceededInternal">
            <summary> The participant successfully added event. </summary>
            <summary>
            The add participants succeeded event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantSucceededInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AddParticipantSucceededInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantSucceededInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifierModel,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AddParticipantSucceededInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="participant"> Participant. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantSucceededInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantSucceededInternal.ResultInformation">
            <summary> Contains the resulting SIP code, sub-code and message. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantSucceededInternal.Participant">
            <summary> Participant. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantSucceededInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantSucceededInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantSucceededInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantSucceededInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AnswerCallRequestInternal">
            <summary> The request payload for answering the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AnswerCallRequestInternal.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AnswerCallRequestInternal" />. </summary>
            <param name="incomingCallContext"> The context associated with the call. </param>
            <param name="callbackUri"> The callback uri. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="incomingCallContext" /> or <paramref name="callbackUri" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AnswerCallRequestInternal.#ctor(System.String,System.String,System.String,Azure.Communication.CallAutomation.MediaStreamingOptionsInternal,Azure.Communication.CallAutomation.TranscriptionOptionsInternal,Azure.Communication.CallAutomation.CallIntelligenceOptionsInternal,Azure.Communication.CommunicationUserIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AnswerCallRequestInternal" />. </summary>
            <param name="incomingCallContext"> The context associated with the call. </param>
            <param name="callbackUri"> The callback uri. </param>
            <param name="operationContext"> A customer set value used to track the answering of a call. </param>
            <param name="mediaStreamingConfiguration"> Media Streaming Configuration. </param>
            <param name="transcriptionConfiguration"> Live Transcription Configuration. </param>
            <param name="callIntelligenceOptions"> AI options for the call. </param>
            <param name="answeredBy"> The identifier of the call automation entity which answers the call. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallRequestInternal.IncomingCallContext">
            <summary> The context associated with the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallRequestInternal.CallbackUri">
            <summary> The callback uri. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallRequestInternal.OperationContext">
            <summary> A customer set value used to track the answering of a call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallRequestInternal.MediaStreamingConfiguration">
            <summary> Media Streaming Configuration. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallRequestInternal.TranscriptionConfiguration">
            <summary> Live Transcription Configuration. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallRequestInternal.CallIntelligenceOptions">
            <summary> AI options for the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallRequestInternal.AnsweredBy">
            <summary> The identifier of the call automation entity which answers the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AnswerCallRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AnswerFailedInternal">
            <summary> AnswerFailed event. </summary>
            <summary>
            The answer failed event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AnswerFailedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AnswerFailedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AnswerFailedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AnswerFailedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerFailedInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerFailedInternal.ResultInformation">
            <summary> Contains the resulting SIP code, sub-code and message. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerFailedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerFailedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerFailedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AnswerFailedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AzureOpenAIDialog">
            <summary> Azure Open AI Dialog. </summary>
            <summary> The AzureOpenAIDialog. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureOpenAIDialog.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureOpenAIDialog.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureOpenAIDialog.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of AzureOpenAIDialogInternal. </summary>
            <param name="context"> Dialog context. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="context" /> is null. </exception>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AzureOpenAIDialogUpdate">
            <summary> Azure Open AI Dialog for UpdateDialog API Call. </summary>
            <summary> The AzureOpenAIDialog. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureOpenAIDialogUpdate.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureOpenAIDialogUpdate.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of AzureOpenAIDialogInternal. </summary>
            <param name="context"> Dialog context. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="context" /> is null. </exception>
        </member>
        <member name="T:Azure.Communication.CallAutomation.BaseDialog">
            <summary>
            The BaseDialog.
            Please note <see cref="T:Azure.Communication.CallAutomation.BaseDialog" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Communication.CallAutomation.AzureOpenAIDialog" /> and <see cref="T:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog" />.
            </summary>
            <summary> The BaseDialog. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.BaseDialog.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.BaseDialog" />. </summary>
            <param name="context"> Dialog context. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="context" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.BaseDialog.#ctor(Azure.Communication.CallAutomation.DialogInputType,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.BaseDialog" />. </summary>
            <param name="kind"> Determines the type of the dialog. </param>
            <param name="context"> Dialog context. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.BaseDialog.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.BaseDialog.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.BaseDialog.#ctor(Azure.Communication.CallAutomation.DialogInputType)">
            <summary> Initializes a new instance of BaseDialog. </summary>
            <param name="kind"> Determines the type of the dialog. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.BaseDialog.Kind">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.BaseDialog.Context">
            <summary> Dialog context. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallConnected">
            <summary> The call connected event. </summary>
            <summary>
            The call connected event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnected.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallConnected" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnected.#ctor(System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallConnected" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnected.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnected.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.CallConnected" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.CallConnected" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal">
            <summary> Properties of a call connection. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyList{Azure.Communication.CommunicationIdentifierModel},System.Nullable{Azure.Communication.CallAutomation.CallConnectionState},System.String,System.String,System.String,Azure.Communication.PhoneNumberIdentifierModel,System.String,Azure.Communication.CommunicationIdentifierModel,System.String,Azure.Communication.CommunicationUserIdentifierModel,Azure.Communication.PhoneNumberIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal" />. </summary>
            <param name="callConnectionId"> The call connection id. </param>
            <param name="serverCallId"> The server call id. </param>
            <param name="targets"> The targets of the call. </param>
            <param name="callConnectionState"> The state of the call connection. </param>
            <param name="callbackUri"> The callback URI. </param>
            <param name="mediaSubscriptionId"> SubscriptionId for media streaming. </param>
            <param name="dataSubscriptionId"> SubscriptionId for transcription. </param>
            <param name="sourceCallerIdNumber">
            The source caller Id, a phone number, that's shown to the PSTN participant being invited.
            Required only when calling a PSTN callee.
            </param>
            <param name="sourceDisplayName"> Display name of the call if dialing out to a pstn number. </param>
            <param name="source"> Source identity. </param>
            <param name="correlationId"> The correlation ID. </param>
            <param name="answeredBy"> Identity of the answering entity. Only populated when identity is provided in the request. </param>
            <param name="answeredFor"> Identity of the original Pstn target of an incoming Call. Only populated when the original target is a Pstn number. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.CallConnectionId">
            <summary> The call connection id. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.ServerCallId">
            <summary> The server call id. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.Targets">
            <summary> The targets of the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.CallConnectionState">
            <summary> The state of the call connection. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.CallbackUri">
            <summary> The callback URI. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.MediaSubscriptionId">
            <summary> SubscriptionId for media streaming. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.DataSubscriptionId">
            <summary> SubscriptionId for transcription. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.SourceCallerIdNumber">
            <summary>
            The source caller Id, a phone number, that's shown to the PSTN participant being invited.
            Required only when calling a PSTN callee.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.SourceDisplayName">
            <summary> Display name of the call if dialing out to a pstn number. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.Source">
            <summary> Source identity. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.CorrelationId">
            <summary> The correlation ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.AnsweredBy">
            <summary> Identity of the answering entity. Only populated when identity is provided in the request. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.AnsweredFor">
            <summary> Identity of the original Pstn target of an incoming Call. Only populated when the original target is a Pstn number. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionPropertiesInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallConnectionState">
            <summary> The state of the call connection. </summary>
            <summary>
            The states of a call.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallConnectionState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionState.Unknown">
            <summary> unknown. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionState.Connecting">
            <summary> connecting. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionState.Connected">
            <summary> connected. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionState.Transferring">
            <summary> transferring. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionState.TransferAccepted">
            <summary> transferAccepted. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionState.Disconnecting">
            <summary> disconnecting. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionState.Disconnected">
            <summary> disconnected. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionState.op_Equality(Azure.Communication.CallAutomation.CallConnectionState,Azure.Communication.CallAutomation.CallConnectionState)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.CallConnectionState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionState.op_Inequality(Azure.Communication.CallAutomation.CallConnectionState,Azure.Communication.CallAutomation.CallConnectionState)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.CallConnectionState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionState.op_Implicit(System.String)~Azure.Communication.CallAutomation.CallConnectionState">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.CallConnectionState" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionState.Equals(Azure.Communication.CallAutomation.CallConnectionState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallConnectionState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallDisconnected">
            <summary> The call disconnected event. </summary>
            <summary>
            The call disconnected event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDisconnected.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallDisconnected" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDisconnected.#ctor(System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallDisconnected" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDisconnected.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallDisconnected.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.CallDisconnected" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.CallDisconnected" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallIntelligenceOptionsInternal">
            <summary> AI options for the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallIntelligenceOptionsInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallIntelligenceOptionsInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallIntelligenceOptionsInternal.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallIntelligenceOptionsInternal" />. </summary>
            <param name="cognitiveServicesEndpoint"> The identifier of the Cognitive Service resource assigned to this call. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallIntelligenceOptionsInternal.CognitiveServicesEndpoint">
            <summary> The identifier of the Cognitive Service resource assigned to this call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallIntelligenceOptionsInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallLocatorInternal">
            <summary> The locator used for joining or taking action on a call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocatorInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallLocatorInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocatorInternal.#ctor(System.String,System.String,System.Nullable{Azure.Communication.CallAutomation.CallLocatorKindInternal})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallLocatorInternal" />. </summary>
            <param name="groupCallId"> The group call id. </param>
            <param name="serverCallId"> The server call id. </param>
            <param name="kind"> The call locator kind. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallLocatorInternal.GroupCallId">
            <summary> The group call id. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallLocatorInternal.ServerCallId">
            <summary> The server call id. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallLocatorInternal.Kind">
            <summary> The call locator kind. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocatorInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallLocatorKindInternal">
            <summary> The call locator kind. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocatorKindInternal.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallLocatorKindInternal" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallLocatorKindInternal.GroupCallLocator">
            <summary> groupCallLocator. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallLocatorKindInternal.ServerCallLocator">
            <summary> serverCallLocator. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocatorKindInternal.op_Equality(Azure.Communication.CallAutomation.CallLocatorKindInternal,Azure.Communication.CallAutomation.CallLocatorKindInternal)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.CallLocatorKindInternal" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocatorKindInternal.op_Inequality(Azure.Communication.CallAutomation.CallLocatorKindInternal,Azure.Communication.CallAutomation.CallLocatorKindInternal)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.CallLocatorKindInternal" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocatorKindInternal.op_Implicit(System.String)~Azure.Communication.CallAutomation.CallLocatorKindInternal">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.CallLocatorKindInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocatorKindInternal.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocatorKindInternal.Equals(Azure.Communication.CallAutomation.CallLocatorKindInternal)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocatorKindInternal.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocatorKindInternal.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallMediaRecognitionType">
            <summary>
            Determines the sub-type of the recognize operation.
            In case of cancel operation the this field is not set and is returned empty
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognitionType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallMediaRecognitionType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognitionType.Dtmf">
            <summary> dtmf. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognitionType.Speech">
            <summary> speech. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognitionType.Choices">
            <summary> choices. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognitionType.op_Equality(Azure.Communication.CallAutomation.CallMediaRecognitionType,Azure.Communication.CallAutomation.CallMediaRecognitionType)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.CallMediaRecognitionType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognitionType.op_Inequality(Azure.Communication.CallAutomation.CallMediaRecognitionType,Azure.Communication.CallAutomation.CallMediaRecognitionType)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.CallMediaRecognitionType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognitionType.op_Implicit(System.String)~Azure.Communication.CallAutomation.CallMediaRecognitionType">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.CallMediaRecognitionType" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognitionType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognitionType.Equals(Azure.Communication.CallAutomation.CallMediaRecognitionType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognitionType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognitionType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallParticipantInternal">
            <summary> A call participant. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallParticipantInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallParticipantInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallParticipantInternal.#ctor(Azure.Communication.CommunicationIdentifierModel,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallParticipantInternal" />. </summary>
            <param name="identifier"> Communication identifier of the participant. </param>
            <param name="isMuted"> Is participant muted. </param>
            <param name="isOnHold"> Is participant on hold. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallParticipantInternal.Identifier">
            <summary> Communication identifier of the participant. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallParticipantInternal.IsMuted">
            <summary> Is participant muted. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallParticipantInternal.IsOnHold">
            <summary> Is participant on hold. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallParticipantInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallRejectReason">
            <summary> The rejection reason. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRejectReason.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallRejectReason" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallRejectReason.None">
            <summary> none. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallRejectReason.Busy">
            <summary> busy. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallRejectReason.Forbidden">
            <summary> forbidden. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRejectReason.op_Equality(Azure.Communication.CallAutomation.CallRejectReason,Azure.Communication.CallAutomation.CallRejectReason)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.CallRejectReason" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRejectReason.op_Inequality(Azure.Communication.CallAutomation.CallRejectReason,Azure.Communication.CallAutomation.CallRejectReason)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.CallRejectReason" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRejectReason.op_Implicit(System.String)~Azure.Communication.CallAutomation.CallRejectReason">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.CallRejectReason" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRejectReason.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRejectReason.Equals(Azure.Communication.CallAutomation.CallRejectReason)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRejectReason.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallRejectReason.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallTransferAcceptedInternal">
            <summary> The call transfer accepted event. </summary>
            <summary>
            The add participants succeeded event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallTransferAcceptedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallTransferAcceptedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallTransferAcceptedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifierModel,Azure.Communication.CommunicationIdentifierModel,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallTransferAcceptedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="transferTarget"> Target who the call is transferred to. </param>
            <param name="transferee"> the participant who is being transferred away. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallTransferAcceptedInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallTransferAcceptedInternal.ResultInformation">
            <summary> Contains the resulting SIP code, sub-code and message. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallTransferAcceptedInternal.TransferTarget">
            <summary> Target who the call is transferred to. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallTransferAcceptedInternal.Transferee">
            <summary> the participant who is being transferred away. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallTransferAcceptedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallTransferAcceptedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallTransferAcceptedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallTransferAcceptedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallTransferFailed">
            <summary> The call transfer failed event. </summary>
            <summary>
            The call transfer failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallTransferFailed.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallTransferFailed" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallTransferFailed.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CallTransferFailed" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallTransferFailed.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallTransferFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.CallTransferFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.CallTransferFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal">
            <summary> Failed cancel add participant event. </summary>
            <summary>
            The remove participant failed event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="invitationId"> Invitation ID used to cancel the request. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal.ResultInformation">
            <summary> Contains the resulting SIP code, sub-code and message. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal.InvitationId">
            <summary> Invitation ID used to cancel the request. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CancelAddParticipantRequestInternal">
            <summary> Request payload for cancelling add participant request. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantRequestInternal.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantRequestInternal" />. </summary>
            <param name="invitationId"> Invitation ID used to add a participant. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="invitationId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantRequestInternal.#ctor(System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantRequestInternal" />. </summary>
            <param name="invitationId"> Invitation ID used to add a participant. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantRequestInternal.InvitationId">
            <summary> Invitation ID used to add a participant. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantRequestInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CancelAddParticipantResponseInternal">
            <summary> Response payload for cancel add participant request. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantResponseInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantResponseInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantResponseInternal.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantResponseInternal" />. </summary>
            <param name="invitationId"> Invitation ID used to cancel the add participant action. </param>
            <param name="operationContext"> The operation context provided by client. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantResponseInternal.InvitationId">
            <summary> Invitation ID used to cancel the add participant action. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantResponseInternal.OperationContext">
            <summary> The operation context provided by client. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantResponseInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal">
            <summary> Successful cancel add participant event. </summary>
            <summary>
            The remove participant succeeded event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal.#ctor(System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal" />. </summary>
            <param name="invitationId"> Invitation ID used to cancel the request. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"></param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal.InvitationId">
            <summary> Invitation ID used to cancel the request. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal.ResultInformation">
            <summary> Gets the result information. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ChannelAffinityInternal">
            <summary> Channel affinity for a participant. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ChannelAffinityInternal.#ctor(Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ChannelAffinityInternal" />. </summary>
            <param name="participant">
            The identifier for the participant whose bitstream will be written to the channel
            represented by the channel number.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="participant" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ChannelAffinityInternal.#ctor(System.Nullable{System.Int32},Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ChannelAffinityInternal" />. </summary>
            <param name="channel"> Channel number to which bitstream from a particular participant will be written. </param>
            <param name="participant">
            The identifier for the participant whose bitstream will be written to the channel
            represented by the channel number.
            </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ChannelAffinityInternal.Channel">
            <summary> Channel number to which bitstream from a particular participant will be written. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ChannelAffinityInternal.Participant">
            <summary>
            The identifier for the participant whose bitstream will be written to the channel
            represented by the channel number.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ChannelAffinityInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ChoiceResult">
            <summary> The ChoiceResult. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ChoiceResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ChoiceResult" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ChoiceResult.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ChoiceResult" />. </summary>
            <param name="label"> Label is the primary identifier for the choice detected. </param>
            <param name="recognizedPhrase">
            Phrases are set to the value if choice is selected via phrase detection.
            If Dtmf input is recognized, then Label will be the identifier for the choice detected and phrases will be set to null
            </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ChoiceResult.Label">
            <summary> Label is the primary identifier for the choice detected. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ChoiceResult.RecognizedPhrase">
            <summary>
            Phrases are set to the value if choice is selected via phrase detection.
            If Dtmf input is recognized, then Label will be the identifier for the choice detected and phrases will be set to null
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ChoiceResult.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ChoiceResult.ResultType">
            <summary>
            The RecognizeResultType of this RecognizeResult.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CollectTonesResult">
            <summary> The CollectTonesResult. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CollectTonesResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CollectTonesResult" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CollectTonesResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Communication.CallAutomation.DtmfTone})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CollectTonesResult" />. </summary>
            <param name="tones"></param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CollectTonesResult.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CollectTonesResult.Tones">
            <summary>
            The Tones colelcted.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CollectTonesResult.ResultType">
            <summary>
            The RecognizeResultType of this RecognizeResult.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CollectTonesResult.ConvertToString">
            <summary>
            Convert the collection of tones to a string like "12345#".
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CommunicationError">
            <summary> The Communication Services error. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CommunicationError.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CommunicationError" />. </summary>
            <param name="code"> The error code. </param>
            <param name="message"> The error message. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="code" /> or <paramref name="message" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CommunicationError.#ctor(System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList{Azure.Communication.CallAutomation.CommunicationError},Azure.Communication.CallAutomation.CommunicationError)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CommunicationError" />. </summary>
            <param name="code"> The error code. </param>
            <param name="message"> The error message. </param>
            <param name="target"> The error target. </param>
            <param name="details"> Further details about specific errors that led to this error. </param>
            <param name="innerError"> The inner error if any. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CommunicationError.Code">
            <summary> The error code. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CommunicationError.Message">
            <summary> The error message. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CommunicationError.Target">
            <summary> The error target. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CommunicationError.Details">
            <summary> Further details about specific errors that led to this error. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CommunicationError.InnerError">
            <summary> The inner error if any. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CommunicationError.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CommunicationErrorResponse">
            <summary> The Communication Services error. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CommunicationErrorResponse.#ctor(Azure.Communication.CallAutomation.CommunicationError)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CommunicationErrorResponse" />. </summary>
            <param name="error"> The Communication Services error. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="error" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CommunicationErrorResponse.Error">
            <summary> The Communication Services error. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CommunicationErrorResponse.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal">
            <summary> The ContinuousDtmfRecognitionRequest. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal" />. </summary>
            <param name="targetParticipant"> Defines options for recognition. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetParticipant" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal" />. </summary>
            <param name="targetParticipant"> Defines options for recognition. </param>
            <param name="operationContext"> The value to identify context of the operation. </param>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal.TargetParticipant">
            <summary> Defines options for recognition. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped">
            <summary> Call connection ID. </summary>
            <summary>
            The ContinuousDtmfRecognitionStopped event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionStopped" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed">
            <summary> The ContinuousDtmfRecognitionToneFailed. </summary>
            <summary>
            The ContinuousDtmfRecognitionToneFailed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed.#ctor(Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed" />. </summary>
            <param name="resultInformation"> Result information defines the code, subcode and message. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived">
            <summary> The ContinuousDtmfRecognitionToneReceived. </summary>
            <summary>
            The ContinuousDtmfRecognitionToneReceived event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived.#ctor(Azure.Communication.CallAutomation.ResultInformation,System.Nullable{System.Int32},System.Nullable{Azure.Communication.CallAutomation.DtmfTone},System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived" />. </summary>
            <param name="resultInformation"> Result information defines the code, subcode and message. </param>
            <param name="sequenceId"> The sequence id which can be used to determine if the same tone was played multiple times or if any tones were missed. </param>
            <param name="tone"></param>
            <param name="operationContext"></param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived.SequenceId">
            <summary> The sequence id which can be used to determine if the same tone was played multiple times or if any tones were missed. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived.Tone">
            <summary> Gets the tone. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionToneReceived" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CreateCallFailedInternal">
            <summary> The CreateCallFailed event. </summary>
            <summary>
            The create call failed event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CreateCallFailedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CreateCallFailedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CreateCallFailedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CreateCallFailedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallFailedInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallFailedInternal.ResultInformation">
            <summary> Contains the resulting SIP code, sub-code and message. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallFailedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallFailedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallFailedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CreateCallFailedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CreateCallRequestInternal">
            <summary> The request payload for creating the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CreateCallRequestInternal.#ctor(System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifierModel},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CreateCallRequestInternal" />. </summary>
            <param name="targets"> The targets of the call. </param>
            <param name="callbackUri"> The callback URI. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targets" /> or <paramref name="callbackUri" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CreateCallRequestInternal.#ctor(System.Collections.Generic.IList{Azure.Communication.CommunicationIdentifierModel},Azure.Communication.PhoneNumberIdentifierModel,System.String,Azure.Communication.CommunicationUserIdentifierModel,System.String,System.String,Azure.Communication.CallAutomation.MediaStreamingOptionsInternal,Azure.Communication.CallAutomation.TranscriptionOptionsInternal,Azure.Communication.CallAutomation.CallIntelligenceOptionsInternal,Azure.Communication.CallAutomation.CustomCallingContextInternal)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CreateCallRequestInternal" />. </summary>
            <param name="targets"> The targets of the call. </param>
            <param name="sourceCallerIdNumber">
            The source caller Id, a phone number, that's shown to the PSTN participant being invited.
            Required only when calling a PSTN callee.
            </param>
            <param name="sourceDisplayName"> Display name of the call if dialing out to a pstn number. </param>
            <param name="source"> The identifier of the source of the call. </param>
            <param name="operationContext"> A customer set value used to track the answering of a call. </param>
            <param name="callbackUri"> The callback URI. </param>
            <param name="mediaStreamingConfiguration"> Media Streaming Configuration. </param>
            <param name="transcriptionConfiguration"> Live Transcription Configuration. </param>
            <param name="callIntelligenceOptions"> AI options for the call. </param>
            <param name="customCallingContext"> Used by customer to send custom calling context to targets. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallRequestInternal.Targets">
            <summary> The targets of the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallRequestInternal.SourceCallerIdNumber">
            <summary>
            The source caller Id, a phone number, that's shown to the PSTN participant being invited.
            Required only when calling a PSTN callee.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallRequestInternal.SourceDisplayName">
            <summary> Display name of the call if dialing out to a pstn number. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallRequestInternal.Source">
            <summary> The identifier of the source of the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallRequestInternal.OperationContext">
            <summary> A customer set value used to track the answering of a call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallRequestInternal.CallbackUri">
            <summary> The callback URI. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallRequestInternal.MediaStreamingConfiguration">
            <summary> Media Streaming Configuration. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallRequestInternal.TranscriptionConfiguration">
            <summary> Live Transcription Configuration. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallRequestInternal.CallIntelligenceOptions">
            <summary> AI options for the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallRequestInternal.CustomCallingContext">
            <summary> Used by customer to send custom calling context to targets. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CreateCallRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CustomCallingContextInternal">
            <summary> The CustomCallingContext. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CustomCallingContextInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.CustomCallingContextInternal" />. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CustomCallingContextInternal.VoipHeaders">
            <summary> Dictionary of &lt;string&gt;. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CustomCallingContextInternal.SipHeaders">
            <summary> Dictionary of &lt;string&gt;. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CustomCallingContextInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogCompletedInternal">
            <summary> The DialogCompleted. </summary>
            <summary>
            The dialog completed event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogCompletedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogCompletedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogCompletedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{Azure.Communication.CallAutomation.DialogInputType},System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogCompletedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling answerCall action to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="dialogInputType"> Determines the type of the dialog. </param>
            <param name="dialogId"> Dialog ID. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogCompletedInternal.OperationContext">
            <summary> Used by customers when calling answerCall action to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogCompletedInternal.ResultInformation">
            <summary> Contains the resulting SIP code/sub-code and message from NGC services. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogCompletedInternal.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogCompletedInternal.DialogId">
            <summary> Dialog ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogCompletedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogCompletedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogCompletedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogCompletedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogConsentInternal">
            <summary> The DialogConsent. </summary>
            <summary>
            The dialog consent event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogConsentInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogConsentInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogConsentInternal.#ctor(Azure.Communication.CallAutomation.UserConsent,System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{Azure.Communication.CallAutomation.DialogInputType},System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogConsentInternal" />. </summary>
            <param name="userConsent"> UserConsent data from the Conversation Conductor. </param>
            <param name="operationContext"> Used by customers when calling answerCall action to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="dialogInputType"> Determines the type of the dialog. </param>
            <param name="dialogId"> Dialog ID. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogConsentInternal.UserConsent">
            <summary> UserConsent data from the Conversation Conductor. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogConsentInternal.OperationContext">
            <summary> Used by customers when calling answerCall action to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogConsentInternal.ResultInformation">
            <summary> Contains the resulting SIP code/sub-code and message from NGC services. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogConsentInternal.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogConsentInternal.DialogId">
            <summary> Dialog ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogConsentInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogConsentInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogConsentInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogConsentInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogFailedInternal">
            <summary> The DialogFailed. </summary>
            <summary>
            The dialog failed event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogFailedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogFailedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogFailedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{Azure.Communication.CallAutomation.DialogInputType},System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogFailedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling answerCall action to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="dialogInputType"> Determines the type of the dialog. </param>
            <param name="dialogId"> Dialog ID. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogFailedInternal.OperationContext">
            <summary> Used by customers when calling answerCall action to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogFailedInternal.ResultInformation">
            <summary> Contains the resulting SIP code/sub-code and message from NGC services. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogFailedInternal.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogFailedInternal.DialogId">
            <summary> Dialog ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogFailedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogFailedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogFailedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogFailedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogHangupInternal">
            <summary> The DialogHangup. </summary>
            <summary>
            The dialog hangup event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogHangupInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogHangupInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogHangupInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{Azure.Communication.CallAutomation.DialogInputType},System.String,System.Object,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogHangupInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling answerCall action to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="dialogInputType"> Determines the type of the dialog. </param>
            <param name="dialogId"> Dialog ID. </param>
            <param name="ivrContext"> Ivr Context. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogHangupInternal.OperationContext">
            <summary> Used by customers when calling answerCall action to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogHangupInternal.ResultInformation">
            <summary> Contains the resulting SIP code/sub-code and message from NGC services. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogHangupInternal.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogHangupInternal.DialogId">
            <summary> Dialog ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogHangupInternal.IvrContext">
            <summary> Ivr Context. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogHangupInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogHangupInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogHangupInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogHangupInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogInputType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogInputType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogInputType.PowerVirtualAgents">
            <summary> powerVirtualAgents. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogInputType.AzureOpenAI">
            <summary> azureOpenAI. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogInputType.op_Equality(Azure.Communication.CallAutomation.DialogInputType,Azure.Communication.CallAutomation.DialogInputType)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.DialogInputType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogInputType.op_Inequality(Azure.Communication.CallAutomation.DialogInputType,Azure.Communication.CallAutomation.DialogInputType)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.DialogInputType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogInputType.op_Implicit(System.String)~Azure.Communication.CallAutomation.DialogInputType">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.DialogInputType" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogInputType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogInputType.Equals(Azure.Communication.CallAutomation.DialogInputType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogInputType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogInputType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogLanguageChangeInternal">
            <summary> The DialogLanguageChange. </summary>
            <summary>
            The dialog language change event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogLanguageChangeInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogLanguageChangeInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogLanguageChangeInternal.#ctor(System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{Azure.Communication.CallAutomation.DialogInputType},System.String,System.Object,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogLanguageChangeInternal" />. </summary>
            <param name="selectedLanguage"> Selected Language. </param>
            <param name="operationContext"> Used by customers when calling answerCall action to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="dialogInputType"> Determines the type of the dialog. </param>
            <param name="dialogId"> Dialog ID. </param>
            <param name="ivrContext"> Ivr Context. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChangeInternal.SelectedLanguage">
            <summary> Selected Language. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChangeInternal.OperationContext">
            <summary> Used by customers when calling answerCall action to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChangeInternal.ResultInformation">
            <summary> Contains the resulting SIP code/sub-code and message from NGC services. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChangeInternal.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChangeInternal.DialogId">
            <summary> Dialog ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChangeInternal.IvrContext">
            <summary> Ivr Context. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChangeInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChangeInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChangeInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogLanguageChangeInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal">
            <summary> The DialogSensitivityUpdate. </summary>
            <summary>
            The dialog sensitivity update event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal.#ctor(System.Nullable{System.Boolean},System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{Azure.Communication.CallAutomation.DialogInputType},System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal" />. </summary>
            <param name="sensitiveMask"> SensitiveMask. </param>
            <param name="operationContext"> Used by customers when calling answerCall action to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="dialogInputType"> Determines the type of the dialog. </param>
            <param name="dialogId"> Dialog ID. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal.SensitiveMask">
            <summary> SensitiveMask. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal.OperationContext">
            <summary> Used by customers when calling answerCall action to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal.ResultInformation">
            <summary> Contains the resulting SIP code/sub-code and message from NGC services. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal.DialogId">
            <summary> Dialog ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogStartedInternal">
            <summary> The DialogStarted. </summary>
            <summary>
            The dialog started event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogStartedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogStartedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogStartedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{Azure.Communication.CallAutomation.DialogInputType},System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogStartedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling answerCall action to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="dialogInputType"> Determines the type of the dialog. </param>
            <param name="dialogId"> Dialog ID. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogStartedInternal.OperationContext">
            <summary> Used by customers when calling answerCall action to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogStartedInternal.ResultInformation">
            <summary> Contains the resulting SIP code/sub-code and message from NGC services. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogStartedInternal.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogStartedInternal.DialogId">
            <summary> Dialog ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogStartedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogStartedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogStartedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogStartedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogStateResponseInternal">
            <summary> The DialogStateResponse. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogStateResponseInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogStateResponseInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogStateResponseInternal.#ctor(System.String,Azure.Communication.CallAutomation.BaseDialog,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogStateResponseInternal" />. </summary>
            <param name="dialogId"> The dialog ID. </param>
            <param name="dialog">
            Defines dialog.
            Please note <see cref="T:Azure.Communication.CallAutomation.BaseDialog" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Communication.CallAutomation.AzureOpenAIDialog" /> and <see cref="T:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog" />.
            </param>
            <param name="operationContext"> The value to identify context of the operation. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogStateResponseInternal.DialogId">
            <summary> The dialog ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogStateResponseInternal.Dialog">
            <summary>
            Defines dialog.
            Please note <see cref="T:Azure.Communication.CallAutomation.BaseDialog" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Communication.CallAutomation.AzureOpenAIDialog" /> and <see cref="T:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog" />.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogStateResponseInternal.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogStateResponseInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogTransferInternal">
            <summary> The DialogTransfer. </summary>
            <summary>
            The dialog transfer event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogTransferInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogTransferInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogTransferInternal.#ctor(System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{Azure.Communication.CallAutomation.DialogInputType},System.String,System.Object,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogTransferInternal" />. </summary>
            <param name="transferType"> Transfer type. </param>
            <param name="transferDestination"> Transfer destination. </param>
            <param name="operationContext"> Used by customers when calling answerCall action to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="dialogInputType"> Determines the type of the dialog. </param>
            <param name="dialogId"> Dialog ID. </param>
            <param name="ivrContext"> Ivr Context. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransferInternal.TransferType">
            <summary> Transfer type. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransferInternal.TransferDestination">
            <summary> Transfer destination. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransferInternal.OperationContext">
            <summary> Used by customers when calling answerCall action to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransferInternal.ResultInformation">
            <summary> Contains the resulting SIP code/sub-code and message from NGC services. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransferInternal.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransferInternal.DialogId">
            <summary> Dialog ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransferInternal.IvrContext">
            <summary> Ivr Context. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransferInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransferInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransferInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogTransferInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogUpdateBase">
            <summary>
            The DialogUpdateBase.
            Please note <see cref="T:Azure.Communication.CallAutomation.DialogUpdateBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Communication.CallAutomation.AzureOpenAIDialogUpdate" />.
            </summary>
            <summary> The base object for DialogUpdate. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogUpdateBase.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogUpdateBase" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogUpdateBase.#ctor(Azure.Communication.CallAutomation.DialogInputType,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogUpdateBase" />. </summary>
            <param name="kind"> Determines the type of the dialog. </param>
            <param name="context"> Dialog context. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogUpdateBase.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogUpdateBase.#ctor(Azure.Communication.CallAutomation.DialogInputType)">
            <summary> Initializes a new instance of DialogUpdateBase. </summary>
            <param name="kind"> Determines the type of the dialog. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdateBase.Kind">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdateBase.Context">
            <summary> Dialog context. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogUpdatedInternal">
            <summary> The DialogUpdated. </summary>
            <summary>
            The dialog updated event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogUpdatedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogUpdatedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogUpdatedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{Azure.Communication.CallAutomation.DialogInputType},System.String,System.Object,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DialogUpdatedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling answerCall action to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="dialogInputType"> Determines the type of the dialog. </param>
            <param name="dialogId"> Dialog ID. </param>
            <param name="ivrContext"> Ivr Context. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdatedInternal.OperationContext">
            <summary> Used by customers when calling answerCall action to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdatedInternal.ResultInformation">
            <summary> Contains the resulting SIP code/sub-code and message from NGC services. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdatedInternal.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdatedInternal.DialogId">
            <summary> Dialog ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdatedInternal.IvrContext">
            <summary> Ivr Context. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdatedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdatedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdatedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogUpdatedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DtmfOptionsInternal">
            <summary> Options for DTMF recognition. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfOptionsInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DtmfOptionsInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfOptionsInternal.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.IReadOnlyList{Azure.Communication.CallAutomation.DtmfTone})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DtmfOptionsInternal" />. </summary>
            <param name="interToneTimeoutInSeconds"> Time to wait between DTMF inputs to stop recognizing. </param>
            <param name="maxTonesToCollect"> Maximum number of DTMF tones to be collected. </param>
            <param name="stopTones"> List of tones that will stop recognizing. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfOptionsInternal.InterToneTimeoutInSeconds">
            <summary> Time to wait between DTMF inputs to stop recognizing. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfOptionsInternal.MaxTonesToCollect">
            <summary> Maximum number of DTMF tones to be collected. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfOptionsInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfOptionsInternal.StopTones">
            <summary>
            List of tones that will stop the recognition once detected.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DtmfResult">
            <summary> The DtmfResult. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DtmfResult" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfResult.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Communication.CallAutomation.DtmfTone})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DtmfResult" />. </summary>
            <param name="tones"></param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfResult.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfResult.Tones">
            <summary>
            The Tones colelcted.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfResult.ResultType">
            <summary>
            The RecognizeResultType of this RecognizeResult.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfResult.ConvertToString">
            <summary>
            Convert the collection of tones to a string like "12345#".
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DtmfTone">
            <summary> The Tone. </summary>
            <summary>
            The possible Dtmf Tones.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfTone.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.DtmfTone" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.Zero">
            <summary> zero. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.One">
            <summary> one. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.Two">
            <summary> two. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.Three">
            <summary> three. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.Four">
            <summary> four. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.Five">
            <summary> five. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.Six">
            <summary> six. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.Seven">
            <summary> seven. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.Eight">
            <summary> eight. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.Nine">
            <summary> nine. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.A">
            <summary> a. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.B">
            <summary> b. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.C">
            <summary> c. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.D">
            <summary> d. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.Pound">
            <summary> pound. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DtmfTone.Asterisk">
            <summary> asterisk. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfTone.op_Equality(Azure.Communication.CallAutomation.DtmfTone,Azure.Communication.CallAutomation.DtmfTone)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.DtmfTone" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfTone.op_Inequality(Azure.Communication.CallAutomation.DtmfTone,Azure.Communication.CallAutomation.DtmfTone)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.DtmfTone" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfTone.op_Implicit(System.String)~Azure.Communication.CallAutomation.DtmfTone">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.DtmfTone" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfTone.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfTone.Equals(Azure.Communication.CallAutomation.DtmfTone)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfTone.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfTone.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DtmfTone.ToChar">
            <summary>
            The Dtmf Tone in character format.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.FileSourceInternal">
            <summary> The FileSource. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.FileSourceInternal.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.FileSourceInternal" />. </summary>
            <param name="uri"> Uri for the audio file to be played. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="uri" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.FileSourceInternal.Uri">
            <summary> Uri for the audio file to be played. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.FileSourceInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.GetParticipantsResponseInternal">
            <summary> The response payload for getting participants of the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.GetParticipantsResponseInternal.#ctor(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.CallParticipantInternal})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.GetParticipantsResponseInternal" />. </summary>
            <param name="value"> List of the current participants in the call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.GetParticipantsResponseInternal.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Communication.CallAutomation.CallParticipantInternal},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.GetParticipantsResponseInternal" />. </summary>
            <param name="value"> List of the current participants in the call. </param>
            <param name="nextLink"> Continue of the list of participants. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.GetParticipantsResponseInternal.Value">
            <summary> List of the current participants in the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.GetParticipantsResponseInternal.NextLink">
            <summary> Continue of the list of participants. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.GetParticipantsResponseInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.HoldFailed">
            <summary> The HoldFailed. </summary>
            <summary>
            The Hold Failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.HoldFailed.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.HoldFailed" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.HoldFailed.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.HoldFailed.ReasonCode">
            <summary>
            Reason code.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.HoldFailed.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String)">
            <summary> Initializes a new instance of HoldFailed. </summary>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.HoldFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.HoldFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.HoldFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.HoldRequestInternal">
            <summary> The request payload for holding participant from the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.HoldRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.HoldRequestInternal" />. </summary>
            <param name="targetParticipant"> Participant to be held from the call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetParticipant" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.HoldRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel,Azure.Communication.CallAutomation.PlaySourceInternal,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.HoldRequestInternal" />. </summary>
            <param name="targetParticipant"> Participant to be held from the call. </param>
            <param name="playSourceInfo"> Prompt to play while in hold. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.HoldRequestInternal.TargetParticipant">
            <summary> Participant to be held from the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.HoldRequestInternal.PlaySourceInfo">
            <summary> Prompt to play while in hold. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.HoldRequestInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.HoldRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.HoldRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaStreamingAudioChannel">
            <summary> Audio channel type to stream, eg. unmixed audio, mixed audio. </summary>
            <summary>
            The states of a call.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingAudioChannel.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingAudioChannel" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingAudioChannel.Mixed">
            <summary> mixed. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingAudioChannel.Unmixed">
            <summary> unmixed. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingAudioChannel.op_Equality(Azure.Communication.CallAutomation.MediaStreamingAudioChannel,Azure.Communication.CallAutomation.MediaStreamingAudioChannel)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.MediaStreamingAudioChannel" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingAudioChannel.op_Inequality(Azure.Communication.CallAutomation.MediaStreamingAudioChannel,Azure.Communication.CallAutomation.MediaStreamingAudioChannel)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.MediaStreamingAudioChannel" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingAudioChannel.op_Implicit(System.String)~Azure.Communication.CallAutomation.MediaStreamingAudioChannel">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.MediaStreamingAudioChannel" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingAudioChannel.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingAudioChannel.Equals(Azure.Communication.CallAutomation.MediaStreamingAudioChannel)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingAudioChannel.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingAudioChannel.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaStreamingContent">
            <summary> Content type to stream, eg. audio. </summary>
            <summary>
            The states of a call.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingContent.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingContent" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingContent.Audio">
            <summary> audio. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingContent.op_Equality(Azure.Communication.CallAutomation.MediaStreamingContent,Azure.Communication.CallAutomation.MediaStreamingContent)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.MediaStreamingContent" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingContent.op_Inequality(Azure.Communication.CallAutomation.MediaStreamingContent,Azure.Communication.CallAutomation.MediaStreamingContent)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.MediaStreamingContent" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingContent.op_Implicit(System.String)~Azure.Communication.CallAutomation.MediaStreamingContent">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.MediaStreamingContent" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingContent.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingContent.Equals(Azure.Communication.CallAutomation.MediaStreamingContent)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingContent.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingContent.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaStreamingFailed">
            <summary> The MediaStreamingFailed. </summary>
            <summary>
            The MediaStreamingFailed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingFailed.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingFailed" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingFailed.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.MediaStreamingUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingFailed" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="mediaStreamingUpdate"> Defines the result for audio streaming update with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingFailed.MediaStreamingUpdate">
            <summary> Defines the result for audio streaming update with the current status and the details about the status. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingFailed.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.MediaStreamingFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.MediaStreamingFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaStreamingOptionsInternal">
            <summary> Configuration of Media streaming. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingOptionsInternal.#ctor(System.String,Azure.Communication.CallAutomation.MediaStreamingTransport,Azure.Communication.CallAutomation.MediaStreamingContent,Azure.Communication.CallAutomation.MediaStreamingAudioChannel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingOptionsInternal" />. </summary>
            <param name="transportUrl"> Transport URL for media streaming. </param>
            <param name="transportType"> The type of transport to be used for media streaming, eg. Websocket. </param>
            <param name="contentType"> Content type to stream, eg. audio. </param>
            <param name="audioChannelType"> Audio channel type to stream, eg. unmixed audio, mixed audio. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="transportUrl" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingOptionsInternal.#ctor(System.String,Azure.Communication.CallAutomation.MediaStreamingTransport,Azure.Communication.CallAutomation.MediaStreamingContent,Azure.Communication.CallAutomation.MediaStreamingAudioChannel,System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingOptionsInternal" />. </summary>
            <param name="transportUrl"> Transport URL for media streaming. </param>
            <param name="transportType"> The type of transport to be used for media streaming, eg. Websocket. </param>
            <param name="contentType"> Content type to stream, eg. audio. </param>
            <param name="audioChannelType"> Audio channel type to stream, eg. unmixed audio, mixed audio. </param>
            <param name="startMediaStreaming"> Determines if the media streaming should be started immediately after call is answered or not. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingOptionsInternal.TransportUrl">
            <summary> Transport URL for media streaming. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingOptionsInternal.TransportType">
            <summary> The type of transport to be used for media streaming, eg. Websocket. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingOptionsInternal.ContentType">
            <summary> Content type to stream, eg. audio. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingOptionsInternal.AudioChannelType">
            <summary> Audio channel type to stream, eg. unmixed audio, mixed audio. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingOptionsInternal.StartMediaStreaming">
            <summary> Determines if the media streaming should be started immediately after call is answered or not. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingOptionsInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaStreamingStarted">
            <summary> The MediaStreamingStarted. </summary>
            <summary>
            The MediaStreamingStarted event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStarted.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStarted" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStarted.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.MediaStreamingUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStarted" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="mediaStreamingUpdate"> Defines the result for audio streaming update with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStarted.MediaStreamingUpdate">
            <summary> Defines the result for audio streaming update with the current status and the details about the status. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStarted.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStarted.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStarted" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStarted" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaStreamingStatus">
            <summary> The MediaStreamingStatus. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatus.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStatus" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatus.MediaStreamingStarted">
            <summary> mediaStreamingStarted. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatus.MediaStreamingFailed">
            <summary> mediaStreamingFailed. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatus.MediaStreamingStopped">
            <summary> mediaStreamingStopped. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatus.UnspecifiedError">
            <summary> unspecifiedError. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatus.op_Equality(Azure.Communication.CallAutomation.MediaStreamingStatus,Azure.Communication.CallAutomation.MediaStreamingStatus)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStatus" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatus.op_Inequality(Azure.Communication.CallAutomation.MediaStreamingStatus,Azure.Communication.CallAutomation.MediaStreamingStatus)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStatus" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatus.op_Implicit(System.String)~Azure.Communication.CallAutomation.MediaStreamingStatus">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStatus" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatus.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatus.Equals(Azure.Communication.CallAutomation.MediaStreamingStatus)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatus.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatus.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaStreamingStatusDetails">
            <summary> The MediaStreamingStatusDetails. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStatusDetails" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.SubscriptionStarted">
            <summary> subscriptionStarted. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.StreamConnectionReestablished">
            <summary> streamConnectionReestablished. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.StreamConnectionUnsuccessful">
            <summary> streamConnectionUnsuccessful. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.StreamUrlMissing">
            <summary> streamUrlMissing. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.ServiceShutdown">
            <summary> serviceShutdown. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.StreamConnectionInterrupted">
            <summary> streamConnectionInterrupted. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.SpeechServicesConnectionError">
            <summary> speechServicesConnectionError. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.SubscriptionStopped">
            <summary> subscriptionStopped. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.UnspecifiedError">
            <summary> unspecifiedError. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.AuthenticationFailure">
            <summary> authenticationFailure. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.BadRequest">
            <summary> badRequest. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.TooManyRequests">
            <summary> tooManyRequests. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.Forbidden">
            <summary> forbidden. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.ServiceTimeout">
            <summary> serviceTimeout. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.InitialWebSocketConnectionFailed">
            <summary> initialWebSocketConnectionFailed. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.op_Equality(Azure.Communication.CallAutomation.MediaStreamingStatusDetails,Azure.Communication.CallAutomation.MediaStreamingStatusDetails)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStatusDetails" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.op_Inequality(Azure.Communication.CallAutomation.MediaStreamingStatusDetails,Azure.Communication.CallAutomation.MediaStreamingStatusDetails)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStatusDetails" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.op_Implicit(System.String)~Azure.Communication.CallAutomation.MediaStreamingStatusDetails">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStatusDetails" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.Equals(Azure.Communication.CallAutomation.MediaStreamingStatusDetails)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStatusDetails.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaStreamingStopped">
            <summary> The MediaStreamingStopped. </summary>
            <summary>
            The MediaStreamingStopped event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStopped.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStopped" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStopped.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.MediaStreamingUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStopped" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="mediaStreamingUpdate"> Defines the result for audio streaming update with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingStopped.MediaStreamingUpdate">
            <summary> Defines the result for audio streaming update with the current status and the details about the status. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStopped.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingStopped.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStopped" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.MediaStreamingStopped" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaStreamingTransport">
            <summary> The type of transport to be used for media streaming, eg. Websocket. </summary>
            <summary>
            The states of a call.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingTransport.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingTransport" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingTransport.Websocket">
            <summary> websocket. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingTransport.op_Equality(Azure.Communication.CallAutomation.MediaStreamingTransport,Azure.Communication.CallAutomation.MediaStreamingTransport)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.MediaStreamingTransport" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingTransport.op_Inequality(Azure.Communication.CallAutomation.MediaStreamingTransport,Azure.Communication.CallAutomation.MediaStreamingTransport)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.MediaStreamingTransport" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingTransport.op_Implicit(System.String)~Azure.Communication.CallAutomation.MediaStreamingTransport">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.MediaStreamingTransport" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingTransport.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingTransport.Equals(Azure.Communication.CallAutomation.MediaStreamingTransport)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingTransport.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingTransport.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaStreamingUpdate">
            <summary> The MediaStreamingUpdate. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingUpdate.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingUpdate" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingUpdate.#ctor(System.String,System.Nullable{Azure.Communication.CallAutomation.MediaStreamingStatus},System.Nullable{Azure.Communication.CallAutomation.MediaStreamingStatusDetails})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaStreamingUpdate" />. </summary>
            <param name="contentType"></param>
            <param name="mediaStreamingStatus"></param>
            <param name="mediaStreamingStatusDetails"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingUpdate.ContentType">
            <summary> Gets the content type. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingUpdate.MediaStreamingStatus">
            <summary> Gets the media streaming status. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingUpdate.MediaStreamingStatusDetails">
            <summary> Gets the media streaming status details. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingUpdate.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MuteParticipantResult">
            <summary> The result payload for muting participants from the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MuteParticipantResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MuteParticipantResult" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MuteParticipantResult.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MuteParticipantResult" />. </summary>
            <param name="operationContext"> The operation context provided by client. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MuteParticipantResult.OperationContext">
            <summary> The operation context provided by client. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MuteParticipantResult.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MuteParticipantsRequestInternal">
            <summary> The request payload for muting participants from the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MuteParticipantsRequestInternal.#ctor(System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifierModel})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MuteParticipantsRequestInternal" />. </summary>
            <param name="targetParticipants">
            Participants to be muted from the call.
            Only ACS Users are supported.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetParticipants" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MuteParticipantsRequestInternal.#ctor(System.Collections.Generic.IList{Azure.Communication.CommunicationIdentifierModel},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MuteParticipantsRequestInternal" />. </summary>
            <param name="targetParticipants">
            Participants to be muted from the call.
            Only ACS Users are supported.
            </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MuteParticipantsRequestInternal.TargetParticipants">
            <summary>
            Participants to be muted from the call.
            Only ACS Users are supported.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MuteParticipantsRequestInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MuteParticipantsRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ParticipantsUpdatedInternal">
            <summary> The participants updated in a call event. </summary>
            <summary>
            The participants updated event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ParticipantsUpdatedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ParticipantsUpdatedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ParticipantsUpdatedInternal.#ctor(System.Collections.Generic.IReadOnlyList{Azure.Communication.CallAutomation.CallParticipantInternal},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ParticipantsUpdatedInternal" />. </summary>
            <param name="participants"> The list of participants in the call. </param>
            <param name="sequenceNumber"></param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ParticipantsUpdatedInternal.Participants">
            <summary> The list of participants in the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ParticipantsUpdatedInternal.SequenceNumber">
            <summary> Gets the sequence number. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ParticipantsUpdatedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ParticipantsUpdatedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ParticipantsUpdatedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ParticipantsUpdatedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PlayCanceled">
            <summary> The PlayCanceled. </summary>
            <summary>
            The Play Canceled event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayCanceled.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlayCanceled" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayCanceled.#ctor(System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlayCanceled" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayCanceled.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayCanceled.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.PlayCanceled" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.PlayCanceled" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PlayCompleted">
            <summary> The PlayCompleted. </summary>
            <summary>
            The play completed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayCompleted.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlayCompleted" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayCompleted.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayCompleted.ReasonCode">
            <summary>
            Reason code.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayCompleted.#ctor(Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of PlayCompleted. </summary>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayCompleted.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.PlayCompleted" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.PlayCompleted" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PlayFailed">
            <summary> The PlayFailed. </summary>
            <summary>
            The Play Failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayFailed.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlayFailed" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayFailed.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlayFailed" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="failedPlaySourceIndex"> Indicates the index of the failed play source. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayFailed.FailedPlaySourceIndex">
            <summary> Indicates the index of the failed play source. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayFailed.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayFailed.ReasonCode">
            <summary>
            Reason code.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayFailed.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String)">
            <summary> Initializes a new instance of PlayFailed. </summary>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.PlayFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.PlayFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PlayOptionsInternal">
            <summary> The PlayOptions. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayOptionsInternal.#ctor(System.Boolean)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlayOptionsInternal" />. </summary>
            <param name="loop"> The option to play the provided audio source in loop when set to true. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayOptionsInternal.#ctor(System.Boolean,System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlayOptionsInternal" />. </summary>
            <param name="loop"> The option to play the provided audio source in loop when set to true. </param>
            <param name="interruptCallMediaOperation"> If set play can barge into other existing queued-up/currently-processing requests. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayOptionsInternal.Loop">
            <summary> The option to play the provided audio source in loop when set to true. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayOptionsInternal.InterruptCallMediaOperation">
            <summary> If set play can barge into other existing queued-up/currently-processing requests. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayOptionsInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PlayRequestInternal">
            <summary> The PlayRequest. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayRequestInternal.#ctor(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.PlaySourceInternal})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlayRequestInternal" />. </summary>
            <param name="playSources"> The source of the audio to be played. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="playSources" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayRequestInternal.#ctor(System.Collections.Generic.IList{Azure.Communication.CallAutomation.PlaySourceInternal},System.Collections.Generic.IList{Azure.Communication.CommunicationIdentifierModel},Azure.Communication.CallAutomation.PlayOptionsInternal,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlayRequestInternal" />. </summary>
            <param name="playSources"> The source of the audio to be played. </param>
            <param name="playTo">
            The list of call participants play provided audio to.
            Plays to everyone in the call when not provided.
            </param>
            <param name="playOptions"> Defines options for playing the audio. </param>
            <param name="operationContext"> The value to identify context of the operation. </param>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayRequestInternal.PlaySources">
            <summary> The source of the audio to be played. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayRequestInternal.PlayOptions">
            <summary> Defines options for playing the audio. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayRequestInternal.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PlaySourceInternal">
            <summary> The PlaySource. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlaySourceInternal.#ctor(Azure.Communication.CallAutomation.PlaySourceTypeInternal)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlaySourceInternal" />. </summary>
            <param name="kind"> Defines the type of the play source. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlaySourceInternal.#ctor(Azure.Communication.CallAutomation.PlaySourceTypeInternal,System.String,Azure.Communication.CallAutomation.FileSourceInternal,Azure.Communication.CallAutomation.TextSourceInternal,Azure.Communication.CallAutomation.SsmlSourceInternal)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlaySourceInternal" />. </summary>
            <param name="kind"> Defines the type of the play source. </param>
            <param name="playSourceCacheId"> Defines the identifier to be used for caching related media. </param>
            <param name="file"> Defines the file source info to be used for play. </param>
            <param name="text"> Defines the text source info to be used for play. </param>
            <param name="ssml"> Defines the ssml(Speech Synthesis Markup Language) source info to be used for play. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlaySourceInternal.Kind">
            <summary> Defines the type of the play source. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlaySourceInternal.PlaySourceCacheId">
            <summary> Defines the identifier to be used for caching related media. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlaySourceInternal.File">
            <summary> Defines the file source info to be used for play. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlaySourceInternal.Text">
            <summary> Defines the text source info to be used for play. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlaySourceInternal.Ssml">
            <summary> Defines the ssml(Speech Synthesis Markup Language) source info to be used for play. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlaySourceInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PlaySourceTypeInternal">
            <summary> Defines the type of the play source. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlaySourceTypeInternal.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.PlaySourceTypeInternal" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlaySourceTypeInternal.File">
            <summary> file. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlaySourceTypeInternal.Text">
            <summary> text. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlaySourceTypeInternal.Ssml">
            <summary> ssml. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlaySourceTypeInternal.op_Equality(Azure.Communication.CallAutomation.PlaySourceTypeInternal,Azure.Communication.CallAutomation.PlaySourceTypeInternal)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.PlaySourceTypeInternal" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlaySourceTypeInternal.op_Inequality(Azure.Communication.CallAutomation.PlaySourceTypeInternal,Azure.Communication.CallAutomation.PlaySourceTypeInternal)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.PlaySourceTypeInternal" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlaySourceTypeInternal.op_Implicit(System.String)~Azure.Communication.CallAutomation.PlaySourceTypeInternal">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.PlaySourceTypeInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlaySourceTypeInternal.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlaySourceTypeInternal.Equals(Azure.Communication.CallAutomation.PlaySourceTypeInternal)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlaySourceTypeInternal.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlaySourceTypeInternal.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog">
            <summary> Power Virtual Agents Dialog. </summary>
            <summary> The PowerVirtualAgentsDialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog.BotAppId">
            <summary> Bot identifier. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog.Language">
            <summary> Language. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary> Initializes a new instance of PowerVirtualAgentsDialogInternal. </summary>
            <param name="botAppId"> Bot identifier. </param>
            <param name="context"> Dialog context. </param>
            <param name="language"> Language. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="botAppId" /> is null. </exception>
            <exception cref="T:System.ArgumentNullException"> <paramref name="context" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog.#ctor(Azure.Communication.CallAutomation.DialogInputType,System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String)">
            <summary> Initializes a new instance of PowerVirtualAgentsDialog. </summary>
            <param name="kind"> Determines the type of the dialog. </param>
            <param name="context"> Dialog context. </param>
            <param name="botAppId"> Bot identifier. </param>
            <param name="language"> Language. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecognitionChoice">
            <summary> The Choice. </summary>
            <summary>
            The possible Dtmf Tones.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognitionChoice.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognitionChoice" />. </summary>
            <param name="label"> Identifier for a given choice. </param>
            <param name="phrases"> List of phrases to recognize. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="label" /> or <paramref name="phrases" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognitionChoice.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Nullable{Azure.Communication.CallAutomation.DtmfTone})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognitionChoice" />. </summary>
            <param name="label"> Identifier for a given choice. </param>
            <param name="phrases"> List of phrases to recognize. </param>
            <param name="tone"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognitionChoice.Label">
            <summary> Identifier for a given choice. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognitionChoice.Phrases">
            <summary> List of phrases to recognize. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognitionChoice.Tone">
            <summary> Gets or sets the tone. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognitionChoice.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognitionChoice.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecognizeCanceled">
            <summary> The RecognizeCanceled. </summary>
            <summary>
            The Recognize Canceled event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeCanceled.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeCanceled" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeCanceled.#ctor(System.String,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeCanceled" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeCanceled.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeCanceled.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.RecognizeCanceled" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.RecognizeCanceled" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecognizeCompletedInternal">
            <summary> The RecognizeCompleted. </summary>
            <summary>
            The recognize completed event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeCompletedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeCompletedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeCompletedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.CallMediaRecognitionType,Azure.Communication.CallAutomation.CollectTonesResult,Azure.Communication.CallAutomation.DtmfResult,Azure.Communication.CallAutomation.SpeechResult,Azure.Communication.CallAutomation.ChoiceResult,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeCompletedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Result information defines the code, subcode and message. </param>
            <param name="recognitionType">
            Determines the sub-type of the recognize operation.
            In case of cancel operation the this field is not set and is returned empty
            </param>
            <param name="collectTonesResult">
            Defines the result for RecognitionType = Dtmf
            Would be replaced by DtmfResult after server sdk renewed
            </param>
            <param name="dtmfResult"> Defines the result for RecognitionType = Dtmf. </param>
            <param name="speechResult"> Defines the result for RecognitionType = Speech and SpeechOrDtmf. </param>
            <param name="choiceResult"> Defines the result for RecognitionType = Choices. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeCompletedInternal.CollectTonesResult">
            <summary>
            Defines the result for RecognitionType = Dtmf
            Would be replaced by DtmfResult after server sdk renewed
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeCompletedInternal.DtmfResult">
            <summary> Defines the result for RecognitionType = Dtmf. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeCompletedInternal.SpeechResult">
            <summary> Defines the result for RecognitionType = Speech and SpeechOrDtmf. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeCompletedInternal.ChoiceResult">
            <summary> Defines the result for RecognitionType = Choices. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeCompletedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeCompletedInternal.ReasonCode">
            <summary>
            Reason code.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeCompletedInternal.RecognitionType">
            <summary>
            The recognition type.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecognizeFailed">
            <summary> The RecognizeFailed. </summary>
            <summary>
            The Recognize failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeFailed.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeFailed.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="failedPlaySourceIndex"> Indicates the index of the failed play source. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeFailed.FailedPlaySourceIndex">
            <summary> Indicates the index of the failed play source. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeFailed.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeFailed.ReasonCode">
            <summary>
            Reason code.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeFailed.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String)">
            <summary> Initializes a new instance of RecognizeFailed. </summary>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecognizeInputType">
            <summary> Determines the type of the recognition. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeInputType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeInputType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeInputType.Dtmf">
            <summary> dtmf. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeInputType.Speech">
            <summary> speech. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeInputType.SpeechOrDtmf">
            <summary> speechOrDtmf. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeInputType.Choices">
            <summary> choices. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeInputType.op_Equality(Azure.Communication.CallAutomation.RecognizeInputType,Azure.Communication.CallAutomation.RecognizeInputType)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecognizeInputType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeInputType.op_Inequality(Azure.Communication.CallAutomation.RecognizeInputType,Azure.Communication.CallAutomation.RecognizeInputType)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecognizeInputType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeInputType.op_Implicit(System.String)~Azure.Communication.CallAutomation.RecognizeInputType">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.RecognizeInputType" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeInputType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeInputType.Equals(Azure.Communication.CallAutomation.RecognizeInputType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeInputType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeInputType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecognizeOptionsInternal">
            <summary> The RecognizeOptions. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeOptionsInternal.#ctor(Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeOptionsInternal" />. </summary>
            <param name="targetParticipant"> Target participant of DTMF tone recognition. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetParticipant" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeOptionsInternal.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int32},Azure.Communication.CommunicationIdentifierModel,System.String,System.String,Azure.Communication.CallAutomation.DtmfOptionsInternal,System.Collections.Generic.IList{Azure.Communication.CallAutomation.RecognitionChoice},Azure.Communication.CallAutomation.SpeechOptionsInternal)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeOptionsInternal" />. </summary>
            <param name="interruptPrompt"> Determines if we interrupt the prompt and start recognizing. </param>
            <param name="initialSilenceTimeoutInSeconds"> Time to wait for first input after prompt (if any). </param>
            <param name="targetParticipant"> Target participant of DTMF tone recognition. </param>
            <param name="speechLanguage"> Speech language to be recognized, If not set default is en-US. </param>
            <param name="speechRecognitionModelEndpointId"> Endpoint where the custom model was deployed. </param>
            <param name="dtmfOptions"> Defines configurations for DTMF. </param>
            <param name="choices"> Defines Ivr choices for recognize. </param>
            <param name="speechOptions"> Defines continuous speech recognition option. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeOptionsInternal.InterruptPrompt">
            <summary> Determines if we interrupt the prompt and start recognizing. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeOptionsInternal.InitialSilenceTimeoutInSeconds">
            <summary> Time to wait for first input after prompt (if any). </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeOptionsInternal.TargetParticipant">
            <summary> Target participant of DTMF tone recognition. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeOptionsInternal.SpeechLanguage">
            <summary> Speech language to be recognized, If not set default is en-US. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeOptionsInternal.SpeechRecognitionModelEndpointId">
            <summary> Endpoint where the custom model was deployed. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeOptionsInternal.DtmfOptions">
            <summary> Defines configurations for DTMF. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeOptionsInternal.Choices">
            <summary> Defines Ivr choices for recognize. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeOptionsInternal.SpeechOptions">
            <summary> Defines continuous speech recognition option. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeOptionsInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecognizeRequestInternal">
            <summary> The RecognizeRequest. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeRequestInternal.#ctor(Azure.Communication.CallAutomation.RecognizeInputType,Azure.Communication.CallAutomation.RecognizeOptionsInternal)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeRequestInternal" />. </summary>
            <param name="recognizeInputType"> Determines the type of the recognition. </param>
            <param name="recognizeOptions"> Defines options for recognition. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="recognizeOptions" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeRequestInternal.#ctor(Azure.Communication.CallAutomation.RecognizeInputType,Azure.Communication.CallAutomation.PlaySourceInternal,System.Collections.Generic.IList{Azure.Communication.CallAutomation.PlaySourceInternal},System.Nullable{System.Boolean},Azure.Communication.CallAutomation.RecognizeOptionsInternal,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeRequestInternal" />. </summary>
            <param name="recognizeInputType"> Determines the type of the recognition. </param>
            <param name="playPrompt"> The source of the audio to be played for recognition. </param>
            <param name="playPrompts"> The source of the audio to be played for recognition. </param>
            <param name="interruptCallMediaOperation"> If set recognize can barge into other existing queued-up/currently-processing requests. </param>
            <param name="recognizeOptions"> Defines options for recognition. </param>
            <param name="operationContext"> The value to identify context of the operation. </param>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeRequestInternal.RecognizeInputType">
            <summary> Determines the type of the recognition. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeRequestInternal.PlayPrompt">
            <summary> The source of the audio to be played for recognition. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeRequestInternal.PlayPrompts">
            <summary> The source of the audio to be played for recognition. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeRequestInternal.InterruptCallMediaOperation">
            <summary> If set recognize can barge into other existing queued-up/currently-processing requests. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeRequestInternal.RecognizeOptions">
            <summary> Defines options for recognition. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeRequestInternal.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecordingChannel">
            <summary> The channel type of call recording. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingChannel.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingChannel" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingChannel.Mixed">
            <summary> mixed. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingChannel.Unmixed">
            <summary> unmixed. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingChannel.op_Equality(Azure.Communication.CallAutomation.RecordingChannel,Azure.Communication.CallAutomation.RecordingChannel)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecordingChannel" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingChannel.op_Inequality(Azure.Communication.CallAutomation.RecordingChannel,Azure.Communication.CallAutomation.RecordingChannel)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecordingChannel" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingChannel.op_Implicit(System.String)~Azure.Communication.CallAutomation.RecordingChannel">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.RecordingChannel" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingChannel.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingChannel.Equals(Azure.Communication.CallAutomation.RecordingChannel)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingChannel.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingChannel.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecordingContent">
            <summary> The content type of call recording. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingContent.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingContent" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingContent.Audio">
            <summary> audio. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingContent.AudioVideo">
            <summary> audioVideo. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingContent.op_Equality(Azure.Communication.CallAutomation.RecordingContent,Azure.Communication.CallAutomation.RecordingContent)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecordingContent" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingContent.op_Inequality(Azure.Communication.CallAutomation.RecordingContent,Azure.Communication.CallAutomation.RecordingContent)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecordingContent" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingContent.op_Implicit(System.String)~Azure.Communication.CallAutomation.RecordingContent">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.RecordingContent" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingContent.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingContent.Equals(Azure.Communication.CallAutomation.RecordingContent)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingContent.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingContent.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecordingFormat">
            <summary> The format type of call recording. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingFormat.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingFormat" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingFormat.Wav">
            <summary> wav. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingFormat.Mp3">
            <summary> mp3. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingFormat.Mp4">
            <summary> mp4. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingFormat.op_Equality(Azure.Communication.CallAutomation.RecordingFormat,Azure.Communication.CallAutomation.RecordingFormat)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecordingFormat" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingFormat.op_Inequality(Azure.Communication.CallAutomation.RecordingFormat,Azure.Communication.CallAutomation.RecordingFormat)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecordingFormat" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingFormat.op_Implicit(System.String)~Azure.Communication.CallAutomation.RecordingFormat">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.RecordingFormat" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingFormat.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingFormat.Equals(Azure.Communication.CallAutomation.RecordingFormat)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingFormat.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingFormat.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecordingKind">
            <summary> The RecordingKind. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingKind.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingKind" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingKind.AzureCommunicationServices">
            <summary> azureCommunicationServices. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingKind.Teams">
            <summary> teams. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingKind.TeamsCompliance">
            <summary> teamsCompliance. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingKind.op_Equality(Azure.Communication.CallAutomation.RecordingKind,Azure.Communication.CallAutomation.RecordingKind)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecordingKind" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingKind.op_Inequality(Azure.Communication.CallAutomation.RecordingKind,Azure.Communication.CallAutomation.RecordingKind)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecordingKind" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingKind.op_Implicit(System.String)~Azure.Communication.CallAutomation.RecordingKind">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.RecordingKind" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingKind.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingKind.Equals(Azure.Communication.CallAutomation.RecordingKind)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingKind.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingKind.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecordingState">
            <summary> The RecordingState. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingState.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingState" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingState.Active">
            <summary> active. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingState.Inactive">
            <summary> inactive. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingState.op_Equality(Azure.Communication.CallAutomation.RecordingState,Azure.Communication.CallAutomation.RecordingState)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecordingState" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingState.op_Inequality(Azure.Communication.CallAutomation.RecordingState,Azure.Communication.CallAutomation.RecordingState)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecordingState" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingState.op_Implicit(System.String)~Azure.Communication.CallAutomation.RecordingState">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.RecordingState" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingState.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingState.Equals(Azure.Communication.CallAutomation.RecordingState)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingState.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingState.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecordingStateChanged">
            <summary> The RecordingStateChanged. </summary>
            <summary>
            The Call Recording state changed event
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStateChanged.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingStateChanged" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStateChanged.#ctor(System.String,Azure.Communication.CallAutomation.RecordingState,System.Nullable{System.DateTimeOffset},System.Nullable{Azure.Communication.CallAutomation.RecordingKind},System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingStateChanged" />. </summary>
            <param name="recordingId"> The call recording id. </param>
            <param name="state"></param>
            <param name="startDateTime"> The time of the recording started. </param>
            <param name="recordingKind"></param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingStateChanged.RecordingId">
            <summary> The call recording id. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingStateChanged.StartDateTime">
            <summary> The time of the recording started. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingStateChanged.RecordingKind">
            <summary> Gets the recording kind. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStateChanged.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingStateChanged.State">
            <summary>
            THe recording state
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStateChanged.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.RecordingStateChanged" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.RecordingStateChanged" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecordingStateResult">
            <summary> The RecordingStateResponse. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStateResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingStateResult" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStateResult.#ctor(System.String,System.Nullable{Azure.Communication.CallAutomation.RecordingState},System.Nullable{Azure.Communication.CallAutomation.RecordingKind})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingStateResult" />. </summary>
            <param name="recordingId"></param>
            <param name="recordingState"></param>
            <param name="recordingKind"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingStateResult.RecordingId">
            <summary> Gets the recording id. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingStateResult.RecordingState">
            <summary> Gets the recording state. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingStateResult.RecordingKind">
            <summary> Gets the recording kind. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStateResult.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecordingStorageInternal">
            <summary> The ExternalStorage. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorageInternal.#ctor(Azure.Communication.CallAutomation.RecordingStorageKind)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingStorageInternal" />. </summary>
            <param name="recordingStorageKind"> Defines the kind of external storage. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorageInternal.#ctor(Azure.Communication.CallAutomation.RecordingStorageKind,System.Uri)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingStorageInternal" />. </summary>
            <param name="recordingStorageKind"> Defines the kind of external storage. </param>
            <param name="recordingDestinationContainerUrl"> Uri of a container or a location within a container. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingStorageInternal.RecordingStorageKind">
            <summary> Defines the kind of external storage. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingStorageInternal.RecordingDestinationContainerUrl">
            <summary> Uri of a container or a location within a container. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorageInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecordingStorageKind">
            <summary> Defines the kind of external storage. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorageKind.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecordingStorageKind" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingStorageKind.AzureCommunicationServices">
            <summary> azureCommunicationServices. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingStorageKind.AzureBlobStorage">
            <summary> azureBlobStorage. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorageKind.op_Equality(Azure.Communication.CallAutomation.RecordingStorageKind,Azure.Communication.CallAutomation.RecordingStorageKind)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecordingStorageKind" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorageKind.op_Inequality(Azure.Communication.CallAutomation.RecordingStorageKind,Azure.Communication.CallAutomation.RecordingStorageKind)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecordingStorageKind" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorageKind.op_Implicit(System.String)~Azure.Communication.CallAutomation.RecordingStorageKind">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.RecordingStorageKind" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorageKind.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorageKind.Equals(Azure.Communication.CallAutomation.RecordingStorageKind)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorageKind.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorageKind.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RedirectCallRequestInternal">
            <summary> The request payload for redirecting the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RedirectCallRequestInternal.#ctor(System.String,Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RedirectCallRequestInternal" />. </summary>
            <param name="incomingCallContext"> The context associated with the call. </param>
            <param name="target"> The target identity to redirect the call to. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="incomingCallContext" /> or <paramref name="target" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RedirectCallRequestInternal.#ctor(System.String,Azure.Communication.CommunicationIdentifierModel,Azure.Communication.CallAutomation.CustomCallingContextInternal)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RedirectCallRequestInternal" />. </summary>
            <param name="incomingCallContext"> The context associated with the call. </param>
            <param name="target"> The target identity to redirect the call to. </param>
            <param name="customCallingContext"> Used by customer to send custom calling context to targets. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RedirectCallRequestInternal.IncomingCallContext">
            <summary> The context associated with the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RedirectCallRequestInternal.Target">
            <summary> The target identity to redirect the call to. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RedirectCallRequestInternal.CustomCallingContext">
            <summary> Used by customer to send custom calling context to targets. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RedirectCallRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RejectCallRequestInternal">
            <summary> The request payload for rejecting the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RejectCallRequestInternal.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RejectCallRequestInternal" />. </summary>
            <param name="incomingCallContext"> The context associated with the call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="incomingCallContext" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RejectCallRequestInternal.#ctor(System.String,System.Nullable{Azure.Communication.CallAutomation.CallRejectReason})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RejectCallRequestInternal" />. </summary>
            <param name="incomingCallContext"> The context associated with the call. </param>
            <param name="callRejectReason"> The rejection reason. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RejectCallRequestInternal.IncomingCallContext">
            <summary> The context associated with the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RejectCallRequestInternal.CallRejectReason">
            <summary> The rejection reason. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RejectCallRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RemoveParticipantFailedInternal">
            <summary> The failed to remove participant event. </summary>
            <summary>
            The remove participant failed event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantFailedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantFailedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantFailedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifierModel,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantFailedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="participant"> Participant. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantFailedInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantFailedInternal.ResultInformation">
            <summary> Contains the resulting SIP code, sub-code and message. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantFailedInternal.Participant">
            <summary> Participant. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantFailedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantFailedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantFailedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantFailedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RemoveParticipantRequestInternal">
            <summary> The remove participant by identifier request. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantRequestInternal" />. </summary>
            <param name="participantToRemove"> The participants to be removed from the call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="participantToRemove" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantRequestInternal" />. </summary>
            <param name="participantToRemove"> The participants to be removed from the call. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantRequestInternal.ParticipantToRemove">
            <summary> The participants to be removed from the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantRequestInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RemoveParticipantResponseInternal">
            <summary> The response payload for removing participants of the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantResponseInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantResponseInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantResponseInternal.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantResponseInternal" />. </summary>
            <param name="operationContext"> The operation context provided by client. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantResponseInternal.OperationContext">
            <summary> The operation context provided by client. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantResponseInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal">
            <summary> The participant removed event. </summary>
            <summary>
            The remove participant succeeded event internal.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CommunicationIdentifierModel,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="participant"> Participant. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal.ResultInformation">
            <summary> Contains the resulting SIP code, sub-code and message. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal.Participant">
            <summary> Participant. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ResultInformation">
            <summary> The ResultInformation. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ResultInformation.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ResultInformation" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ResultInformation.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ResultInformation" />. </summary>
            <param name="code"> Code of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. </param>
            <param name="subCode"> Subcode of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. </param>
            <param name="message"> Detail message that describes the current result. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ResultInformation.Code">
            <summary> Code of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ResultInformation.SubCode">
            <summary> Subcode of the current result. This can be helpful to Call Automation team to troubleshoot the issue if this result was unexpected. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ResultInformation.Message">
            <summary> Detail message that describes the current result. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ResultInformation.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.SendDtmfTonesCompletedInternal">
            <summary> The SendDtmfTonesCompleted. </summary>
            <summary>
            The internal SendDtmfTonesCompleted event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesCompletedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesCompletedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesCompletedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesCompletedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesCompletedInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesCompletedInternal.ResultInformation">
            <summary> Contains the resulting SIP code, sub-code and message. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesCompletedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesCompletedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesCompletedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesCompletedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.SendDtmfTonesFailedInternal">
            <summary> The SendDtmfTonesFailed. </summary>
            <summary>
            The internal SendDtmfTonesFailed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesFailedInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesFailedInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesFailedInternal.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesFailedInternal" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesFailedInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesFailedInternal.ResultInformation">
            <summary> Contains the resulting SIP code, sub-code and message. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesFailedInternal.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesFailedInternal.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesFailedInternal.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesFailedInternal.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.SendDtmfTonesRequestInternal">
            <summary> The SendDtmfTonesRequest. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesRequestInternal.#ctor(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.DtmfTone},Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesRequestInternal" />. </summary>
            <param name="tones"> List of tones to be sent to target participant. </param>
            <param name="targetParticipant"> Target participant of send Dtmf tones. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="tones" /> or <paramref name="targetParticipant" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesRequestInternal.#ctor(System.Collections.Generic.IList{Azure.Communication.CallAutomation.DtmfTone},Azure.Communication.CommunicationIdentifierModel,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesRequestInternal" />. </summary>
            <param name="tones"> List of tones to be sent to target participant. </param>
            <param name="targetParticipant"> Target participant of send Dtmf tones. </param>
            <param name="operationContext"> The value to identify context of the operation. </param>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesRequestInternal.Tones">
            <summary> List of tones to be sent to target participant. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesRequestInternal.TargetParticipant">
            <summary> Target participant of send Dtmf tones. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesRequestInternal.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.SendDtmfTonesResult">
            <summary> The SendDtmfTonesResult. </summary>
            <summary>The result from send dtmf request.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesResult.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesResult" />. </summary>
            <param name="operationContext"> The operation context provided by client. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesResult.OperationContext">
            <summary> The operation context provided by client. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesResult.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesResult.WaitForEventProcessor(System.Threading.CancellationToken)">
            <summary>
            This is blocking call. Wait for <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesCompleted" /> event or <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesFailed" /> event.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesResult.WaitForEventProcessorAsync(System.Threading.CancellationToken)">
            <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesCompleted" /> event or <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesCompleted" /> event.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.SpeechOptionsInternal">
            <summary> Options for continuous speech recognition. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SpeechOptionsInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SpeechOptionsInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SpeechOptionsInternal.#ctor(System.Nullable{System.Int64})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SpeechOptionsInternal" />. </summary>
            <param name="endSilenceTimeoutInMs"> The length of end silence when user stops speaking and cogservice send response. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SpeechOptionsInternal.EndSilenceTimeoutInMs">
            <summary> The length of end silence when user stops speaking and cogservice send response. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SpeechOptionsInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.SpeechResult">
            <summary> The speech recognition status as a result. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SpeechResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SpeechResult" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SpeechResult.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SpeechResult" />. </summary>
            <param name="speech"> The recognized speech in string. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SpeechResult.Speech">
            <summary> The recognized speech in string. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SpeechResult.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SpeechResult.ResultType">
            <summary>
            The RecognizeResultType of this RecognizeResult.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.SsmlSourceInternal">
            <summary> The SsmlSource. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SsmlSourceInternal.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SsmlSourceInternal" />. </summary>
            <param name="ssmlText"> Ssml string for the cognitive service to be played. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="ssmlText" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SsmlSourceInternal.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.SsmlSourceInternal" />. </summary>
            <param name="ssmlText"> Ssml string for the cognitive service to be played. </param>
            <param name="customVoiceEndpointId"> Endpoint where the custom voice was deployed. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SsmlSourceInternal.SsmlText">
            <summary> Ssml string for the cognitive service to be played. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SsmlSourceInternal.CustomVoiceEndpointId">
            <summary> Endpoint where the custom voice was deployed. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SsmlSourceInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal">
            <summary> The request payload start for call recording operation with call locator. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal.#ctor(Azure.Communication.CallAutomation.CallLocatorInternal)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal" />. </summary>
            <param name="callLocator"> The call locator. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="callLocator" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal.#ctor(Azure.Communication.CallAutomation.CallLocatorInternal,System.String,System.Nullable{Azure.Communication.CallAutomation.RecordingContent},System.Nullable{Azure.Communication.CallAutomation.RecordingChannel},System.Nullable{Azure.Communication.CallAutomation.RecordingFormat},System.Collections.Generic.IList{Azure.Communication.CommunicationIdentifierModel},System.Collections.Generic.IList{Azure.Communication.CallAutomation.ChannelAffinityInternal},Azure.Communication.CallAutomation.RecordingStorageInternal,System.Nullable{System.Boolean})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal" />. </summary>
            <param name="callLocator"> The call locator. </param>
            <param name="recordingStateCallbackUri"> The uri to send notifications to. </param>
            <param name="recordingContentType"> The content type of call recording. </param>
            <param name="recordingChannelType"> The channel type of call recording. </param>
            <param name="recordingFormatType"> The format type of call recording. </param>
            <param name="audioChannelParticipantOrdering">
            The sequential order in which audio channels are assigned to participants in the unmixed recording.
            When 'recordingChannelType' is set to 'unmixed' and `audioChannelParticipantOrdering is not specified,
            the audio channel to participant mapping will be automatically assigned based on the order in which participant
            first audio was detected.  Channel to participant mapping details can be found in the metadata of the recording.
            </param>
            <param name="channelAffinity">
            The channel affinity of call recording
            When 'recordingChannelType' is set to 'unmixed', if channelAffinity is not specified, 'channel' will be automatically assigned.
            Channel-Participant mapping details can be found in the metadata of the recording.
            ///
            </param>
            <param name="externalStorage"> Optional property to specify location where recording will be stored. </param>
            <param name="pauseOnStart"> When set to true will start recording in Pause mode, which can be resumed. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal.CallLocator">
            <summary> The call locator. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal.RecordingStateCallbackUri">
            <summary> The uri to send notifications to. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal.RecordingContentType">
            <summary> The content type of call recording. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal.RecordingChannelType">
            <summary> The channel type of call recording. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal.RecordingFormatType">
            <summary> The format type of call recording. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal.AudioChannelParticipantOrdering">
            <summary>
            The sequential order in which audio channels are assigned to participants in the unmixed recording.
            When 'recordingChannelType' is set to 'unmixed' and `audioChannelParticipantOrdering is not specified,
            the audio channel to participant mapping will be automatically assigned based on the order in which participant
            first audio was detected.  Channel to participant mapping details can be found in the metadata of the recording.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal.ChannelAffinity">
            <summary>
            The channel affinity of call recording
            When 'recordingChannelType' is set to 'unmixed', if channelAffinity is not specified, 'channel' will be automatically assigned.
            Channel-Participant mapping details can be found in the metadata of the recording.
            ///
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal.ExternalStorage">
            <summary> Optional property to specify location where recording will be stored. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal.PauseOnStart">
            <summary> When set to true will start recording in Pause mode, which can be resumed. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartCallRecordingRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StartDialogRequestInternal">
            <summary> The StartDialogRequest. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartDialogRequestInternal.#ctor(Azure.Communication.CallAutomation.BaseDialog)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StartDialogRequestInternal" />. </summary>
            <param name="dialog">
            Defines the dialog.
            Please note <see cref="T:Azure.Communication.CallAutomation.BaseDialog" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Communication.CallAutomation.AzureOpenAIDialog" /> and <see cref="T:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog" />.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dialog" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartDialogRequestInternal.#ctor(Azure.Communication.CallAutomation.BaseDialog,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StartDialogRequestInternal" />. </summary>
            <param name="dialog">
            Defines the dialog.
            Please note <see cref="T:Azure.Communication.CallAutomation.BaseDialog" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Communication.CallAutomation.AzureOpenAIDialog" /> and <see cref="T:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog" />.
            </param>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
            <param name="operationContext"> The value to identify context of the operation. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartDialogRequestInternal.Dialog">
            <summary>
            Defines the dialog.
            Please note <see cref="T:Azure.Communication.CallAutomation.BaseDialog" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Communication.CallAutomation.AzureOpenAIDialog" /> and <see cref="T:Azure.Communication.CallAutomation.PowerVirtualAgentsDialog" />.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartDialogRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartDialogRequestInternal.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartDialogRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StartHoldMusicRequestInternal">
            <summary> The request payload for holding participant from the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartHoldMusicRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StartHoldMusicRequestInternal" />. </summary>
            <param name="targetParticipant"> Participant to be held from the call. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetParticipant" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartHoldMusicRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel,Azure.Communication.CallAutomation.PlaySourceInternal,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StartHoldMusicRequestInternal" />. </summary>
            <param name="targetParticipant"> Participant to be held from the call. </param>
            <param name="playSourceInfo"> Prompt to play while in hold. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartHoldMusicRequestInternal.TargetParticipant">
            <summary> Participant to be held from the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartHoldMusicRequestInternal.PlaySourceInfo">
            <summary> Prompt to play while in hold. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartHoldMusicRequestInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartHoldMusicRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartHoldMusicRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StartMediaStreamingRequestInternal">
            <summary> The StartMediaStreamingRequest. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartMediaStreamingRequestInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StartMediaStreamingRequestInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartMediaStreamingRequestInternal.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StartMediaStreamingRequestInternal" />. </summary>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
            <param name="operationContext"> The value to identify context of the operation. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartMediaStreamingRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartMediaStreamingRequestInternal.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartMediaStreamingRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StartTranscriptionRequestInternal">
            <summary> The StartTranscriptionRequest. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartTranscriptionRequestInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StartTranscriptionRequestInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartTranscriptionRequestInternal.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StartTranscriptionRequestInternal" />. </summary>
            <param name="locale"> Defines Locale for the transcription e,g en-US. </param>
            <param name="operationContext"> The value to identify context of the operation. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartTranscriptionRequestInternal.Locale">
            <summary> Defines Locale for the transcription e,g en-US. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartTranscriptionRequestInternal.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartTranscriptionRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StopHoldMusicRequestInternal">
            <summary> The request payload for holding participant from the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StopHoldMusicRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StopHoldMusicRequestInternal" />. </summary>
            <param name="targetParticipant">
            Participants to be hold from the call.
            Only ACS Users are supported.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetParticipant" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StopHoldMusicRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StopHoldMusicRequestInternal" />. </summary>
            <param name="targetParticipant">
            Participants to be hold from the call.
            Only ACS Users are supported.
            </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StopHoldMusicRequestInternal.TargetParticipant">
            <summary>
            Participants to be hold from the call.
            Only ACS Users are supported.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StopHoldMusicRequestInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StopHoldMusicRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StopMediaStreamingRequestInternal">
            <summary> The StopMediaStreamingRequest. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StopMediaStreamingRequestInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StopMediaStreamingRequestInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StopMediaStreamingRequestInternal.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StopMediaStreamingRequestInternal" />. </summary>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StopMediaStreamingRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StopMediaStreamingRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StopTranscriptionRequestInternal">
            <summary> The StopTranscriptionRequest. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StopTranscriptionRequestInternal.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StopTranscriptionRequestInternal" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StopTranscriptionRequestInternal.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.StopTranscriptionRequestInternal" />. </summary>
            <param name="operationContext"> The value to identify context of the operation. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StopTranscriptionRequestInternal.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StopTranscriptionRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TextSourceInternal">
            <summary> The TextSource. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TextSourceInternal.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TextSourceInternal" />. </summary>
            <param name="text"> Text for the cognitive service to be played. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TextSourceInternal.#ctor(System.String,System.String,System.Nullable{Azure.Communication.CallAutomation.VoiceKind},System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TextSourceInternal" />. </summary>
            <param name="text"> Text for the cognitive service to be played. </param>
            <param name="sourceLocale">
            Source language locale to be played
            Refer to available locales here: &lt;seealso href="https://learn.microsoft.com/en-us/azure/cognitive-services/speech-service/language-support?tabs=stt-tts" /&gt;
            </param>
            <param name="voiceKind"> Voice kind type. </param>
            <param name="voiceName">
            Voice name to be played
            Refer to available Text-to-speech voices here: &lt;seealso href="https://learn.microsoft.com/en-us/azure/cognitive-services/speech-service/language-support?tabs=stt-tts" /&gt;
            </param>
            <param name="customVoiceEndpointId"> Endpoint where the custom voice was deployed. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TextSourceInternal.Text">
            <summary> Text for the cognitive service to be played. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TextSourceInternal.SourceLocale">
            <summary>
            Source language locale to be played
            Refer to available locales here: &lt;seealso href="https://learn.microsoft.com/en-us/azure/cognitive-services/speech-service/language-support?tabs=stt-tts" /&gt;
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TextSourceInternal.VoiceKind">
            <summary> Voice kind type. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TextSourceInternal.VoiceName">
            <summary>
            Voice name to be played
            Refer to available Text-to-speech voices here: &lt;seealso href="https://learn.microsoft.com/en-us/azure/cognitive-services/speech-service/language-support?tabs=stt-tts" /&gt;
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TextSourceInternal.CustomVoiceEndpointId">
            <summary> Endpoint where the custom voice was deployed. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TextSourceInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionFailed">
            <summary> The TranscriptionFailed. </summary>
            <summary>
            The TranscriptionFailed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionFailed.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionFailed" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionFailed.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.TranscriptionUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionFailed" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="transcriptionUpdate"> Defines the result for TranscriptionUpdate with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionFailed.TranscriptionUpdate">
            <summary> Defines the result for TranscriptionUpdate with the current status and the details about the status. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionFailed.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.TranscriptionFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.TranscriptionFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionOptionsInternal">
            <summary> Configuration of live transcription. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionOptionsInternal.#ctor(System.String,Azure.Communication.CallAutomation.TranscriptionTransport,System.String,System.Boolean)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionOptionsInternal" />. </summary>
            <param name="transportUrl"> Transport URL for live transcription. </param>
            <param name="transportType"> The type of transport to be used for live transcription, eg. Websocket. </param>
            <param name="locale"> Defines the locale for the data e.g en-CA, en-AU. </param>
            <param name="startTranscription"> Determines if the transcription should be started immediately after call is answered or not. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="transportUrl" /> or <paramref name="locale" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionOptionsInternal.TransportUrl">
            <summary> Transport URL for live transcription. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionOptionsInternal.TransportType">
            <summary> The type of transport to be used for live transcription, eg. Websocket. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionOptionsInternal.Locale">
            <summary> Defines the locale for the data e.g en-CA, en-AU. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionOptionsInternal.StartTranscription">
            <summary> Determines if the transcription should be started immediately after call is answered or not. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionOptionsInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionStarted">
            <summary> The TranscriptionStarted. </summary>
            <summary>
            The TranscriptionStarted event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStarted.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionStarted" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStarted.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.TranscriptionUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionStarted" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="transcriptionUpdate"> Defines the result for TranscriptionUpdate with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStarted.TranscriptionUpdate">
            <summary> Defines the result for TranscriptionUpdate with the current status and the details about the status. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStarted.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStarted.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.TranscriptionStarted" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.TranscriptionStarted" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionStatus">
            <summary> The TranscriptionStatus. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatus.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionStatus" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatus.TranscriptionStarted">
            <summary> transcriptionStarted. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatus.TranscriptionFailed">
            <summary> transcriptionFailed. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatus.TranscriptionResumed">
            <summary> transcriptionResumed. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatus.TranscriptionUpdated">
            <summary> transcriptionUpdated. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatus.TranscriptionStopped">
            <summary> transcriptionStopped. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatus.UnspecifiedError">
            <summary> unspecifiedError. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatus.op_Equality(Azure.Communication.CallAutomation.TranscriptionStatus,Azure.Communication.CallAutomation.TranscriptionStatus)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.TranscriptionStatus" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatus.op_Inequality(Azure.Communication.CallAutomation.TranscriptionStatus,Azure.Communication.CallAutomation.TranscriptionStatus)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.TranscriptionStatus" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatus.op_Implicit(System.String)~Azure.Communication.CallAutomation.TranscriptionStatus">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.TranscriptionStatus" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatus.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatus.Equals(Azure.Communication.CallAutomation.TranscriptionStatus)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatus.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatus.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionStatusDetails">
            <summary> The TranscriptionStatusDetails. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatusDetails.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionStatusDetails" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.SubscriptionStarted">
            <summary> subscriptionStarted. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.StreamConnectionReestablished">
            <summary> streamConnectionReestablished. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.StreamConnectionUnsuccessful">
            <summary> streamConnectionUnsuccessful. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.StreamUrlMissing">
            <summary> streamUrlMissing. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.ServiceShutdown">
            <summary> serviceShutdown. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.StreamConnectionInterrupted">
            <summary> streamConnectionInterrupted. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.SpeechServicesConnectionError">
            <summary> speechServicesConnectionError. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.SubscriptionStopped">
            <summary> subscriptionStopped. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.UnspecifiedError">
            <summary> unspecifiedError. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.AuthenticationFailure">
            <summary> authenticationFailure. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.BadRequest">
            <summary> badRequest. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.TooManyRequests">
            <summary> tooManyRequests. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.Forbidden">
            <summary> forbidden. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.ServiceTimeout">
            <summary> serviceTimeout. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStatusDetails.TranscriptionLocaleUpdated">
            <summary> transcriptionLocaleUpdated. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatusDetails.op_Equality(Azure.Communication.CallAutomation.TranscriptionStatusDetails,Azure.Communication.CallAutomation.TranscriptionStatusDetails)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.TranscriptionStatusDetails" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatusDetails.op_Inequality(Azure.Communication.CallAutomation.TranscriptionStatusDetails,Azure.Communication.CallAutomation.TranscriptionStatusDetails)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.TranscriptionStatusDetails" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatusDetails.op_Implicit(System.String)~Azure.Communication.CallAutomation.TranscriptionStatusDetails">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.TranscriptionStatusDetails" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatusDetails.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatusDetails.Equals(Azure.Communication.CallAutomation.TranscriptionStatusDetails)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatusDetails.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStatusDetails.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionStopped">
            <summary> The TranscriptionStopped. </summary>
            <summary>
            The TranscriptionStopped event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStopped.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionStopped" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStopped.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.TranscriptionUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionStopped" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="transcriptionUpdate"> Defines the result for TranscriptionUpdate with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionStopped.TranscriptionUpdate">
            <summary> Defines the result for TranscriptionUpdate with the current status and the details about the status. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStopped.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionStopped.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.TranscriptionStopped" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.TranscriptionStopped" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionTransport">
            <summary> The type of transport to be used for live transcription, eg. Websocket. </summary>
            <summary>
            The states of a call.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionTransport.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionTransport" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionTransport.Websocket">
            <summary> websocket. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionTransport.op_Equality(Azure.Communication.CallAutomation.TranscriptionTransport,Azure.Communication.CallAutomation.TranscriptionTransport)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.TranscriptionTransport" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionTransport.op_Inequality(Azure.Communication.CallAutomation.TranscriptionTransport,Azure.Communication.CallAutomation.TranscriptionTransport)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.TranscriptionTransport" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionTransport.op_Implicit(System.String)~Azure.Communication.CallAutomation.TranscriptionTransport">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.TranscriptionTransport" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionTransport.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionTransport.Equals(Azure.Communication.CallAutomation.TranscriptionTransport)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionTransport.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionTransport.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionUpdate">
            <summary> The TranscriptionUpdate. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionUpdate.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionUpdate" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionUpdate.#ctor(System.Nullable{Azure.Communication.CallAutomation.TranscriptionStatus},System.Nullable{Azure.Communication.CallAutomation.TranscriptionStatusDetails})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionUpdate" />. </summary>
            <param name="transcriptionStatus"></param>
            <param name="transcriptionStatusDetails"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionUpdate.TranscriptionStatus">
            <summary> Gets the transcription status. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionUpdate.TranscriptionStatusDetails">
            <summary> Gets the transcription status details. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionUpdate.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionUpdated">
            <summary> The TranscriptionUpdated. </summary>
            <summary>
            The TranscriptionUpdated event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionUpdated.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionUpdated" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionUpdated.#ctor(System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.TranscriptionUpdate,System.String,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TranscriptionUpdated" />. </summary>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code, sub-code and message. </param>
            <param name="transcriptionUpdate"> Defines the result for TranscriptionUpdate with the current status and the details about the status. </param>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionUpdated.TranscriptionUpdate">
            <summary> Defines the result for TranscriptionUpdate with the current status and the details about the status. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionUpdated.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionUpdated.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.TranscriptionUpdated" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.TranscriptionUpdated" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TransferCallToParticipantResult">
            <summary> The response payload for transferring the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TransferCallToParticipantResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TransferCallToParticipantResult" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TransferCallToParticipantResult.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TransferCallToParticipantResult" />. </summary>
            <param name="operationContext"> The operation context provided by client. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferCallToParticipantResult.OperationContext">
            <summary> The operation context provided by client. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TransferCallToParticipantResult.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TransferCallToParticipantResult.WaitForEventProcessor(System.Threading.CancellationToken)">
            <summary>
            This is blocking call. Wait for <see cref="T:Azure.Communication.CallAutomation.TransferCallToParticipantEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.TransferCallToParticipantEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.CallTransferAccepted" /> event or <see cref="T:Azure.Communication.CallAutomation.CallTransferFailed" /> event.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TransferCallToParticipantResult.WaitForEventProcessorAsync(System.Threading.CancellationToken)">
            <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.TransferCallToParticipantEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.TransferCallToParticipantEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.CallTransferAccepted" /> event or <see cref="T:Azure.Communication.CallAutomation.CallTransferFailed" /> event.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TransferToParticipantRequestInternal">
            <summary> The request payload for transferring call to a participant. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TransferToParticipantRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TransferToParticipantRequestInternal" />. </summary>
            <param name="targetParticipant"> The identity of the target where call should be transferred to. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetParticipant" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TransferToParticipantRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel,Azure.Communication.CallAutomation.CustomCallingContextInternal,System.String,Azure.Communication.CommunicationIdentifierModel,System.String,Azure.Communication.PhoneNumberIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.TransferToParticipantRequestInternal" />. </summary>
            <param name="targetParticipant"> The identity of the target where call should be transferred to. </param>
            <param name="customCallingContext"> Used by customer to send custom calling context to targets. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="transferee"> Transferee is the participant who is transferred away. </param>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
            <param name="sourceCallerIdNumber"> The source caller Id, a phone number, that will be used as the transferor's caller Id when transferring a call to a Pstn target. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferToParticipantRequestInternal.TargetParticipant">
            <summary> The identity of the target where call should be transferred to. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferToParticipantRequestInternal.CustomCallingContext">
            <summary> Used by customer to send custom calling context to targets. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferToParticipantRequestInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferToParticipantRequestInternal.Transferee">
            <summary> Transferee is the participant who is transferred away. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferToParticipantRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferToParticipantRequestInternal.SourceCallerIdNumber">
            <summary> The source caller Id, a phone number, that will be used as the transferor's caller Id when transferring a call to a Pstn target. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TransferToParticipantRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.UnholdRequestInternal">
            <summary> The request payload for holding participant from the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnholdRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UnholdRequestInternal" />. </summary>
            <param name="targetParticipant">
            Participants to be hold from the call.
            Only ACS Users are supported.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetParticipant" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnholdRequestInternal.#ctor(Azure.Communication.CommunicationIdentifierModel,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UnholdRequestInternal" />. </summary>
            <param name="targetParticipant">
            Participants to be hold from the call.
            Only ACS Users are supported.
            </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UnholdRequestInternal.TargetParticipant">
            <summary>
            Participants to be hold from the call.
            Only ACS Users are supported.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UnholdRequestInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnholdRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.UnknownDialog">
            <summary> Unknown version of BaseDialog. </summary>
            <summary> The UnknownBaseDialog. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnknownDialog.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnknownDialog.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnknownDialog.#ctor(Azure.Communication.CallAutomation.DialogInputType,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary> Initializes a new instance of UnknownBaseDialog. </summary>
            <param name="kind"> Determines the type of the dialog. </param>
            <param name="context"> Dialog context. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.UnmuteParticipantResult">
            <summary> The response payload for unmuting participants from the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnmuteParticipantResult.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UnmuteParticipantResult" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnmuteParticipantResult.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UnmuteParticipantResult" />. </summary>
            <param name="operationContext"> The operation context provided by client. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UnmuteParticipantResult.OperationContext">
            <summary> The operation context provided by client. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnmuteParticipantResult.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.UnmuteParticipantsRequestInternal">
            <summary> The request payload for unmuting participant from the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnmuteParticipantsRequestInternal.#ctor(System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifierModel})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UnmuteParticipantsRequestInternal" />. </summary>
            <param name="targetParticipants">
            Participants to be unmuted from the call.
            Only ACS Users are supported.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="targetParticipants" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnmuteParticipantsRequestInternal.#ctor(System.Collections.Generic.IList{Azure.Communication.CommunicationIdentifierModel},System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UnmuteParticipantsRequestInternal" />. </summary>
            <param name="targetParticipants">
            Participants to be unmuted from the call.
            Only ACS Users are supported.
            </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UnmuteParticipantsRequestInternal.TargetParticipants">
            <summary>
            Participants to be unmuted from the call.
            Only ACS Users are supported.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UnmuteParticipantsRequestInternal.OperationContext">
            <summary> Used by customers when calling mid-call actions to correlate the request to the response event. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnmuteParticipantsRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.UpdateDialogRequestInternal">
            <summary> The UpdateDialogRequest. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UpdateDialogRequestInternal.#ctor(Azure.Communication.CallAutomation.DialogUpdateBase)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UpdateDialogRequestInternal" />. </summary>
            <param name="dialog">
            Dialog context.
            Please note <see cref="T:Azure.Communication.CallAutomation.DialogUpdateBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Communication.CallAutomation.AzureOpenAIDialogUpdate" />.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="dialog" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UpdateDialogRequestInternal.#ctor(Azure.Communication.CallAutomation.DialogUpdateBase,System.String,System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UpdateDialogRequestInternal" />. </summary>
            <param name="dialog">
            Dialog context.
            Please note <see cref="T:Azure.Communication.CallAutomation.DialogUpdateBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Communication.CallAutomation.AzureOpenAIDialogUpdate" />.
            </param>
            <param name="operationCallbackUri">
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </param>
            <param name="operationContext"> The value to identify context of the operation. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UpdateDialogRequestInternal.Dialog">
            <summary>
            Dialog context.
            Please note <see cref="T:Azure.Communication.CallAutomation.DialogUpdateBase" /> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
            The available derived classes include <see cref="T:Azure.Communication.CallAutomation.AzureOpenAIDialogUpdate" />.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UpdateDialogRequestInternal.OperationCallbackUri">
            <summary>
            Set a callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UpdateDialogRequestInternal.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UpdateDialogRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.UpdateTranscriptionRequestInternal">
            <summary> The UpdateTranscriptionRequest. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UpdateTranscriptionRequestInternal.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UpdateTranscriptionRequestInternal" />. </summary>
            <param name="locale"> Defines new locale for transcription. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="locale" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UpdateTranscriptionRequestInternal.Locale">
            <summary> Defines new locale for transcription. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UpdateTranscriptionRequestInternal.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.UserConsent">
            <summary> The UserConsent. </summary>
            <summary>
            UserConsent
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UserConsent.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UserConsent" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UserConsent.#ctor(System.Nullable{System.Int32})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.UserConsent" />. </summary>
            <param name="recording"></param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UserConsent.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UserConsent.Recording">
            <summary>
            Recording
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.VoiceKind">
            <summary> Voice kind type. </summary>
            <summary>
            The possible Dtmf Tones.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.VoiceKind.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.VoiceKind" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.VoiceKind.Male">
            <summary> male. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.VoiceKind.Female">
            <summary> female. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.VoiceKind.op_Equality(Azure.Communication.CallAutomation.VoiceKind,Azure.Communication.CallAutomation.VoiceKind)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.VoiceKind" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.VoiceKind.op_Inequality(Azure.Communication.CallAutomation.VoiceKind,Azure.Communication.CallAutomation.VoiceKind)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.VoiceKind" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.VoiceKind.op_Implicit(System.String)~Azure.Communication.CallAutomation.VoiceKind">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.VoiceKind" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.VoiceKind.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.VoiceKind.Equals(Azure.Communication.CallAutomation.VoiceKind)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.VoiceKind.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.VoiceKind.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AddParticipantOptions">
            <summary>
            The add participants operation options.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantOptions.#ctor(Azure.Communication.CallAutomation.CallInvite)">
            <summary>
            Creates a new AddParticipantOptions object.
            </summary>
            <param name="participantToAdd"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantOptions.ParticipantToAdd">
            <summary>
            Participant to add to the call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantOptions.OperationContext">
            <summary>
            The operationContext for this add participants call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantOptions.InvitationTimeoutInSeconds">
            <summary>
            Timeout before invitation times out.
            The minimum value is 1 second.
            The maximum value is 180 seconds.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantOptions.OperationCallbackUri">
            <summary>
            The callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AddParticipantResult">
            <summary>AddParticipantsResult Result.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantResult.Participant">
            <summary>Gets the participant.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantResult.OperationContext">
            <summary>The operation context provided by client.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantResult.InvitationId">
            <summary>
            The invitation ID used to add the participant.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantResult.WaitForEventProcessor(System.Threading.CancellationToken)">
            <summary>
            This is blocking call. Wait for <see cref="T:Azure.Communication.CallAutomation.AddParticipantEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.AddParticipantEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.AddParticipantSucceeded" /> event or <see cref="T:Azure.Communication.CallAutomation.AddParticipantFailed" /> event.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantResult.WaitForEventProcessorAsync(System.Threading.CancellationToken)">
            <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.AddParticipantEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.AddParticipantEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.AddParticipantSucceeded" /> event or <see cref="T:Azure.Communication.CallAutomation.AddParticipantFailed" /> event.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AnswerCallOptions">
            <summary>
            The answer call operation options.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AnswerCallOptions.#ctor(System.String,System.Uri)">
            <summary>
            Creates a new AnswerCallOptions object.
            </summary>
            <param name="incomingCallContext"></param>
            <param name="callbackUri"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallOptions.IncomingCallContext">
            <summary>
            The context associated with the call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallOptions.CallbackUri">
            <summary>
            The callback uri.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallOptions.MediaStreamingOptions">
            <summary>
            Media Streaming Configuration.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallOptions.TranscriptionOptions">
            <summary>
            Live Transcription Configuration.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallOptions.CallIntelligenceOptions">
            <summary>
            AI options for the call such as endpoint URI of the Azure Cognitive Services resource
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallOptions.AnsweredBy">
            <summary>
            The identifier of the call automation entity which answers the call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallOptions.OperationContext">
            <summary>
            The operation context.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AnswerCallResult">
            <summary>The result from creating a call.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallResult.CallConnection">
            <summary>CallConnection instance.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AnswerCallResult.CallConnectionProperties">
            <summary> Properties of the call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AnswerCallResult.WaitForEventProcessor(System.Threading.CancellationToken)">
            <summary>
            This is blocking call. Wait for <see cref="T:Azure.Communication.CallAutomation.AnswerCallEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.AnswerCallEventResult" /> which contains <see cref="T:Azure.Communication.CallAutomation.CallConnected" /> event.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AnswerCallResult.WaitForEventProcessorAsync(System.Threading.CancellationToken)">
            <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.AnswerCallEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.AnswerCallEventResult" /> which contains <see cref="T:Azure.Communication.CallAutomation.CallConnected" /> event.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AzureBlobContainerRecordingStorage">
            <summary> The AzureBlobContainerRecordingStorage. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureBlobContainerRecordingStorage.#ctor(System.Uri)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AzureBlobContainerRecordingStorage" />. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AzureBlobContainerRecordingStorage.RecordingDestinationContainerUri">
            <summary> The Azure blob storage container uri. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AzureCommunicationsRecordingStorage">
            <summary> The AzureCommunicationsRecordingStorage. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AzureCommunicationsRecordingStorage.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.AzureCommunicationsRecordingStorage" />. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallConnectionProperties">
            <summary> The call connection properties. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionProperties.CallConnectionId">
            <summary> The call connection id. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionProperties.ServerCallId">
            <summary> The server call id. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionProperties.Targets">
            <summary> The targets of the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionProperties.CallConnectionState">
            <summary> The state of the call connection. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionProperties.CallbackUri">
            <summary> The callback URI. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionProperties.MediaSubscriptionId">
            <summary> SubscriptionId for media streaming. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionProperties.DataSubscriptionId">
            <summary> SubscriptionId for transcription. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionProperties.SourceCallerIdNumber">
            <summary>
            Caller ID phone number to appear on the invitee.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionProperties.SourceDisplayName">
            <summary>
            Display name to appear on the invitee.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionProperties.Source">
            <summary>
            Source identity.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionProperties.CorrelationId">
            <summary>
            The correlation ID.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallConnectionProperties.AnsweredBy">
            <summary>
            Identity of the answering entity. Only populated when identity is provided in the request.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallIntelligenceOptions">
            <summary>
            AI options for the call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallIntelligenceOptions.CognitiveServicesEndpoint">
            <summary>
            The endpoint URL of the Azure Cognitive Services resource attached
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallInvite">
            <summary>
            Call invitee details.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallInvite.#ctor(Azure.Communication.PhoneNumberIdentifier,Azure.Communication.PhoneNumberIdentifier)">
            <summary>
            Creates a new CallInvite object.
            </summary>
            <param name="targetPhoneNumberIdentity"></param>
            <param name="callerIdNumber"></param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallInvite.#ctor(Azure.Communication.CommunicationUserIdentifier)">
            <summary>
            Creates a new CallInvite object.
            </summary>
            <param name="targetIdentity"></param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallInvite.#ctor(Azure.Communication.MicrosoftTeamsUserIdentifier)">
            <summary>
            Creates a new CallInvite object.
            </summary>
            <param name="targetIdentity"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallInvite.Target">
            <summary>
            The target callee.
            </summary>
            <value></value>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallInvite.SourceCallerIdNumber">
            <summary>
            The caller ID number to appear on target PSTN callee.
            </summary>
            <value></value>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallInvite.SourceDisplayName">
            <summary>
            The display name to appear on target callee.
            </summary>
            <value></value>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallInvite.CustomCallingContext">
            <summary>
            The Custom Context which contains SIP and voip headers
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallLocator">
            <summary>Represents a locator for a call in Azure Communication Services, that can be handled by the Call Automation APIs</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallLocator.Id">
            <summary> The call id. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocator.Equals(Azure.Communication.CallAutomation.CallLocator)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallLocator.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary><param name="obj">The object to compare with the current object.</param><returns><see langword="true" /> if the specified object  is equal to the current object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallMediaRecognizeChoiceOptions">
            <summary>
            The Recognize configurations specific for IVR Choices.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognizeChoiceOptions.#ctor(Azure.Communication.CommunicationIdentifier,System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.RecognitionChoice})">
            <summary> Initializes a new instance of CallMediaRecognizeChoiceOptions. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeChoiceOptions.Choices">
            <summary>
            The IvR choices for recognize
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallMediaRecognizeDtmfOptions">
            <summary>
            The Recognize configurations specific for Dtmf.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognizeDtmfOptions.#ctor(Azure.Communication.CommunicationIdentifier,System.Int32)">
            <summary> Initializes a new instance of CallMediaRecognizeDtmfOptions. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeDtmfOptions.InterToneTimeout">
            <summary>
            Time to wait between DTMF inputs to stop recognizing.
            If not provided, a default of 2 seconds is set.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeDtmfOptions.MaxTonesToCollect">
            <summary>
            Maximum number of DTMF tones to be collected.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeDtmfOptions.StopTones">
            <summary>
            List of tones that will stop recognizing.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallMediaRecognizeOptions">
            <summary>
            The Call Media Recognize Options.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognizeOptions.#ctor(Azure.Communication.CallAutomation.RecognizeInputType,Azure.Communication.CommunicationIdentifier)">
            <summary>
            Creates a new instance of the CallMediaRecognizeOptions.
            </summary>
            <param name="inputType"></param>
            <param name="targetParticipant"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeOptions.InputType">
            <summary>
            Recognize Input Type.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeOptions.InterruptCallMediaOperation">
            <summary>
            Interrupt current call media operation.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeOptions.OperationContext">
            <summary>
            Operation Context.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeOptions.Prompt">
            <summary>
            PlaySource information.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeOptions.InterruptPrompt">
            <summary>
            Determines if we interrupt the prompt and start recognizing.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeOptions.InitialSilenceTimeout">
            <summary>
            Time to wait for first input after prompt (if any).
            If not provided, a default of 5 seconds is set.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeOptions.TargetParticipant">
            <summary>
            Target participant of DTFM tone recognition.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeOptions.SpeechLanguage">
            <summary> Speech language to be recognized, If not set default is en-US. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeOptions.SpeechModelEndpointId">
            <summary> Endpoint where the speech custom model was deployed. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeOptions.OperationCallbackUri">
            <summary>
            The callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallMediaRecognizeSpeechOptions">
            <summary>
            The Recognize configurations specific for IVR Continuouse Speech Recognition.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognizeSpeechOptions.#ctor(Azure.Communication.CommunicationIdentifier)">
            <summary> Initializes a new instance of CallMediaRecognizeSpeechOptions. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeSpeechOptions.EndSilenceTimeout">
            <summary> The length of end silence when user stops speaking and cogservice send response. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallMediaRecognizeSpeechOrDtmfOptions">
            <summary>
            The Recognize configurations specific for IVR Continuouse Speech Recognition.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallMediaRecognizeSpeechOrDtmfOptions.#ctor(Azure.Communication.CommunicationIdentifier,System.Int32)">
            <summary> Initializes a new instance of CallMediaRecognizeSpeechOrDtmfOptions. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeSpeechOrDtmfOptions.EndSilenceTimeout">
            <summary> The length of end silence when user stops speaking and cogservice send response. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeSpeechOrDtmfOptions.InterToneTimeout">
            <summary>
            Time to wait between DTMF inputs to stop recognizing.
            If not provided, a default of 2 seconds is set.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeSpeechOrDtmfOptions.MaxTonesToCollect">
            <summary>
            Maximum number of DTMF tones to be collected.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallMediaRecognizeSpeechOrDtmfOptions.StopTones">
            <summary>
            List of tones that will stop recognizing.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallParticipant">
            <summary> The participant in a call. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallParticipant.#ctor(Azure.Communication.CommunicationIdentifier,System.Boolean,System.Boolean)">
            <summary> Initializes a new instance of CallParticipant. </summary>
            <param name="identifier"> The communication identifier. </param>
            <param name="isMuted"> Is participant muted. </param>
            <param name="isOnHold"> Is participant on hold. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallParticipant.#ctor(Azure.Communication.CallAutomation.CallParticipantInternal)">
            <summary> Initializes a new instance of CallParticipant. </summary>
            <param name="callParticipantInternal"> The internal call participant. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallParticipant.Identifier">
            <summary> The communication identifier. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallParticipant.IsMuted">
            <summary> Is participant muted. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallParticipant.IsOnHold">
            <summary> Is participant on hold. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CancelAddParticipantOperationOptions">
            <summary>
            The cancel add participant operation options.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantOperationOptions.#ctor(System.String)">
            <summary>
            Creates new CancelAddParticipantOptions object.
            </summary>
            <param name="invitationId"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantOperationOptions.InvitationId">
            <summary>
            Invitation ID used to add a participant.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantOperationOptions.OperationContext">
            <summary>
            The operationContext for this add participants call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantOperationOptions.OperationCallbackUri">
            <summary>
            The callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CancelAddParticipantOperationResult">
            <summary>AddParticipantsResult Result.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantOperationResult.OperationContext">
            <summary>The operation context provided by client.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantOperationResult.InvitationId">
            <summary>
            Invitation ID used to cancel the add participant action.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantOperationResult.WaitForEventProcessor(System.Threading.CancellationToken)">
            <summary>
            This is blocking call. Wait for <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantSucceeded" /> event or <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantFailed" /> event.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantOperationResult.WaitForEventProcessorAsync(System.Threading.CancellationToken)">
            <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantSucceeded" /> event or <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantFailed" /> event.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsResult">
            <summary>The result from Canceling all media operation.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAllMediaOperationsResult.WaitForEventProcessor(System.Threading.CancellationToken)">
            <summary>
            This is blocking call. Wait for <see cref="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.PlayCanceled" /> or <see cref="T:Azure.Communication.CallAutomation.RecognizeCanceled" /> event.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAllMediaOperationsResult.WaitForEventProcessorAsync(System.Threading.CancellationToken)">
            <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CancelAllMediaOperationsEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.PlayCanceled" /> or <see cref="T:Azure.Communication.CallAutomation.RecognizeCanceled" /> event.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ChannelAffinity">
            <summary> Channel affinity for a participant. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ChannelAffinity.#ctor(Azure.Communication.CommunicationIdentifier)">
            <summary> Initializes a new instance of ChannelAffinityInternal. </summary>
            <param name="participant">
            The identifier for the participant whose bitstream will be written to the channel.
            represented by the channel number.
            </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="participant" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ChannelAffinity.Participant">
            <summary>
            The identifier for the participant whose bitstream will be written to the channel.
            represented by the channel number.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ChannelAffinity.Channel">
            <summary> Channel number to which bitstream from a particular participant will be written. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ContentTransferOptions">
            <summary>
            <see cref="T:Azure.Communication.CallAutomation.ContentTransferOptions" /> is used to provide options for parallel transfers.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ContentTransferOptions.MaximumTransferSize">
            <summary>
            The maximum length of a transfer in bytes.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ContentTransferOptions.MaximumConcurrency">
            <summary>
            The maximum number of workers that may be used in a parallel transfer.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ContentTransferOptions.InitialTransferSize">
            <summary>
            The size of the first range request in bytes. Blobs smaller than this limit will
            be downloaded in a single request. Blobs larger than this limit will continue being
            downloaded in chunks of size <see cref="P:Azure.Communication.CallAutomation.ContentTransferOptions.MaximumTransferSize" />.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContentTransferOptions.Equals(System.Object)">
            <summary>
            Check if two ContentTransferOptions instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContentTransferOptions.GetHashCode">
            <summary>
            Get a hash code for the ParallelTransferOptions.
            </summary>
            <returns>Hash code for the ParallelTransferOptions.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContentTransferOptions.op_Equality(Azure.Communication.CallAutomation.ContentTransferOptions,Azure.Communication.CallAutomation.ContentTransferOptions)">
            <summary>
            Check if two ParallelTransferOptions instances are equal.
            </summary>
            <param name="left">The first instance to compare.</param>
            <param name="right">The second instance to compare.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContentTransferOptions.op_Inequality(Azure.Communication.CallAutomation.ContentTransferOptions,Azure.Communication.CallAutomation.ContentTransferOptions)">
            <summary>
            Check if two ParallelTransferOptions instances are equal.
            </summary>
            <param name="left">The first instance to compare.</param>
            <param name="right">The second instance to compare.</param>
            <returns>True if they're not equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContentTransferOptions.Equals(Azure.Communication.CallAutomation.ContentTransferOptions)">
            <summary>
            Check if two ParallelTransferOptions instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions">
            <summary>
            The ContinuousDtmfRecognitionOptions operation options.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions.#ctor(Azure.Communication.CommunicationIdentifier)">
            <summary>
            Creates a new SendDtmfOptions object.
            </summary>
            <param name="targetParticipant"> The target communication identifier. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions.TargetParticipant">
            <summary> The target communication identifier. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions.OperationContext">
            <summary>
            The operationContext for this add participants call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ContinuousDtmfRecognitionOptions.OperationCallbackUri">
            <summary>
            The callback URI to override the main callback URI.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CreateCallOptions">
            <summary>
            Options for the Create Call Request.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CreateCallOptions.#ctor(Azure.Communication.CallAutomation.CallInvite,System.Uri)">
            <summary>
            Creates a new CreateCallOptions object.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallOptions.CallInvite">
            <summary>
            Call invitee information.
            </summary>
            <value></value>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallOptions.CallbackUri">
            <summary>
            The callback Uri.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallOptions.OperationContext">
            <summary>
            The Operation context.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallOptions.MediaStreamingOptions">
            <summary>
            Media Streaming Configuration.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallOptions.TranscriptionOptions">
            <summary>
            Live Transcription Configuration.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallOptions.CallIntelligenceOptions">
            <summary>
            AI options for the call such as endpoint URI of the Azure Cognitive Services resource
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CreateCallResult">
            <summary>The result from creating a call.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallResult.CallConnection">
            <summary>CallConnection instance.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateCallResult.CallConnectionProperties">
            <summary>Properties of the call.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CreateCallResult.WaitForEventProcessor(System.Threading.CancellationToken)">
            <summary>
            This is blocking call. Wait for <see cref="T:Azure.Communication.CallAutomation.CreateCallEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CreateCallEventResult" /> which contains <see cref="T:Azure.Communication.CallAutomation.CallConnected" /> event.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CreateCallResult.WaitForEventProcessorAsync(System.Threading.CancellationToken)">
            <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.CreateCallEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.CreateCallEventResult" /> which contains <see cref="T:Azure.Communication.CallAutomation.CallConnected" /> event.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CreateGroupCallOptions">
            <summary>
            Options for the Create Call Request.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CreateGroupCallOptions.#ctor(System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier},System.Uri)">
            <summary>
            Creates a new CreateCallOptions object.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateGroupCallOptions.Targets">
            <summary>
            Call invitee information.
            </summary>
            <value></value>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateGroupCallOptions.CallbackUri">
            <summary>
            The callback Uri.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateGroupCallOptions.SourceCallerIdNumber">
            <summary>
            The display caller ID number to appear for target PSTN callee.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateGroupCallOptions.SourceDisplayName">
            <summary>
            The display name to appear for target callee.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateGroupCallOptions.OperationContext">
            <summary>
            The Operation context.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateGroupCallOptions.MediaStreamingOptions">
            <summary>
            Media Streaming Configuration.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateGroupCallOptions.TranscriptionOptions">
            <summary>
            Live Transcription Configuration.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateGroupCallOptions.CallIntelligenceOptions">
            <summary>
            AI options for the call such as endpoint URI of the Azure Cognitive Services resource
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CreateGroupCallOptions.CustomCallingContext">
            <summary>
            The Custom Context which contains SIP and voip headers.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CustomCallingContext">
            <summary>
            CustomCallingContext details.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CustomCallingContext.VoipHeaders">
            <summary> Dictionary of VOIP headers. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CustomCallingContext.SipHeaders">
            <summary> Dictionary of SIP headers. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CustomCallingContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new CustomCallingContext.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CustomCallingContext.AddSipUui(System.String)">
            <summary>
            Add a custom calling context sip UUI header. The Key always remains 'User-To-User'
            </summary>
            <param name="value">custom calling context sip UUI header's value.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CustomCallingContext.AddSipX(System.String,System.String)">
            <summary>
            Add a custom calling context sip X header. The provided key is appended to such as 'X-MS-Custom-{key}'
            </summary>
            <param name="key">custom calling context sip X header's key.</param>
            <param name="value">custom calling context sip X header's value.</param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CustomCallingContext.AddVoip(System.String,System.String)">
            <summary>
            Add a custom calling context voip header.
            </summary>
            <param name="key">custom calling context voip header's key.</param>
            <param name="value">custom calling context voip header's value.</param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogResult">
            <summary>DialogResult</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogResult.DialogId">
            <summary> Dialog ID </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogResult.WaitForEventProcessor(System.Threading.CancellationToken)">
            <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.DialogEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.DialogEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.DialogCompleted" /> event, <see cref="T:Azure.Communication.CallAutomation.DialogConsent" /> event, <see cref="T:Azure.Communication.CallAutomation.DialogFailed" /> event, <see cref="T:Azure.Communication.CallAutomation.DialogHangup" /> event, <see cref="T:Azure.Communication.CallAutomation.DialogStarted" /> event, <see cref="T:Azure.Communication.CallAutomation.DialogTransfer" />, <see cref="T:Azure.Communication.CallAutomation.DialogSensitivityUpdate" />, <see cref="T:Azure.Communication.CallAutomation.DialogLanguageChange" />, <see cref="T:Azure.Communication.CallAutomation.DialogUpdated" /> event.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogResult.WaitForEventProcessorAsync(System.Threading.CancellationToken)">
            <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.DialogEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.DialogEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.DialogCompleted" /> event, <see cref="T:Azure.Communication.CallAutomation.DialogConsent" /> event, <see cref="T:Azure.Communication.CallAutomation.DialogFailed" /> event, <see cref="T:Azure.Communication.CallAutomation.DialogHangup" /> event, <see cref="T:Azure.Communication.CallAutomation.DialogStarted" /> event, <see cref="T:Azure.Communication.CallAutomation.DialogTransfer" />, <see cref="T:Azure.Communication.CallAutomation.DialogSensitivityUpdate" />, <see cref="T:Azure.Communication.CallAutomation.DialogLanguageChange" />, <see cref="T:Azure.Communication.CallAutomation.DialogUpdated" /> event.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AddParticipantFailed">
            <summary>
            The add participant failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantFailed.#ctor">
            <summary> Initializes a new instance of AddParticipantsFailedEvent. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantFailed.#ctor(Azure.Communication.CallAutomation.AddParticipantFailedInternal)">
            <summary> Initializes a new instance of AddParticipantFailedEvent. </summary>
            <param name="internalEvent">Internal Representation of the AddParticipantFailedEvent. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantFailed.Participant">
            <summary> Participant failed to be added. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.AddParticipantFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.AddParticipantFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AddParticipantSucceeded">
            <summary>
            The add participants succeeded event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantSucceeded.#ctor">
            <summary> Initializes a new instance of AddParticipantSucceededEventInternal. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantSucceeded.#ctor(Azure.Communication.CallAutomation.AddParticipantSucceededInternal)">
            <summary> Initializes a new instance of AddParticipantSucceededEventInternal. </summary>
            <param name="internalEvent"> Internal Representation of the AddParticipantSucceededEvent. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AddParticipantSucceeded.Participant">
            <summary> Participant added. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AddParticipantSucceeded.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.AddParticipantSucceeded" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.AddParticipantSucceeded" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AnswerFailed">
            <summary>
            The answer failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AnswerFailed.#ctor">
            <summary> Initializes a new instance of AnswerFailed. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.AnswerFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.AnswerFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.AnswerFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallAutomationEventBase">
            <summary>
            The CallAutomation Event Data.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallAutomationEventBase.CallConnectionId">
            <summary> Call connection ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallAutomationEventBase.ServerCallId">
            <summary> Server call ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallAutomationEventBase.CorrelationId">
            <summary> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallAutomationEventBase.OperationContext">
            <summary> Operation context. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallAutomationEventBase.ResultInformation">
            <summary> Gets the result info. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallAutomationEventParser">
            <summary>
            Helper class for parsing Acs call back events.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventParser.Parse(Azure.Messaging.CloudEvent)">
            <summary>
            Parsing a CallAutomation event from a CloudEvent.
            </summary>
            <param name="cloudEvent"><see cref="T:Azure.Messaging.CloudEvent" />.</param>
            <returns>A <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventBase" /> object.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventParser.Parse(System.BinaryData)">
            <summary>
            Parsing a CallAutomation event from BinaryData.
            </summary>
            <param name="json">event json in BinaryData format.</param>
            <returns>A <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventBase" /> object.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventParser.Parse(System.String,System.String)">
            <summary>
            Parsing a CallAutomation event given the data and event type of the payload.
            </summary>
            <param name="eventData">the event data of a <see cref="T:Azure.Messaging.CloudEvent" /> in string.</param>
            <param name="eventType">the event type of a <see cref="T:Azure.Messaging.CloudEvent" /> in string.</param>
            <returns>An array of <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventBase" /> object.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventParser.ParseMany(Azure.Messaging.CloudEvent[])">
            <summary>
            Parsing CallAutomation events from an array of CloudEvent.
            </summary>
            <param name="cloudEvents"><see cref="T:Azure.Messaging.CloudEvent" />.</param>
            <returns>An array of <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventBase" /> object.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallAutomationEventParser.ParseMany(System.BinaryData)">
            <summary>
            Parsing CallAutomation events from BinaryData.
            </summary>
            <param name="json"> events json in BinaryData format.</param>
            <returns>An array of <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventBase" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CallTransferAccepted">
            <summary>
            The call transfer accepted event.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallTransferAccepted.Transferee">
            <summary>
            Transferee is the participant who is transferring the call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CallTransferAccepted.TransferTarget">
            <summary>
            The identity of the target where call should be transferred to.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallTransferAccepted.#ctor">
            <summary> Initializes a new instance of CallTransferAccepted. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CallTransferAccepted.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.CallTransferAccepted" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.CallTransferAccepted" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CancelAddParticipantFailed">
            <summary>
            The cancel add participant failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantFailed.#ctor">
            <summary> Initializes a new instance of CancelAddParticipantFailedEvent. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantFailed.#ctor(Azure.Communication.CallAutomation.CancelAddParticipantFailedInternal)">
            <summary> Initializes a new instance of CancelAddParticipantFailedEvent. </summary>
            <param name="internalEvent">Internal Representation of the CancelAddParticipantFailedEvent. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantFailed.InvitationId">
            <summary>
            Invitation ID used to cancel the invitation.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CancelAddParticipantSucceeded">
            <summary>
            The add participant cancelled event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantSucceeded.#ctor">
            <summary> Initializes a new instance of CancelAddParticipantSucceeded event. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantSucceeded.#ctor(Azure.Communication.CallAutomation.CancelAddParticipantSucceededInternal)">
            <summary> Initializes a new instance of CancelAddParticipantSucceeded event. </summary>
            <param name="internalEvent">Internal Representation of the CancelAddParticipantSucceeded event. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.CancelAddParticipantSucceeded.InvitationId">
            <summary>
            Invitation ID used to cancel the invitation.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CancelAddParticipantSucceeded.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantSucceeded" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.CancelAddParticipantSucceeded" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.CreateCallFailed">
            <summary>
            The create call failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CreateCallFailed.#ctor">
            <summary> Initializes a new instance of CreateCallFailed. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.CreateCallFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.CreateCallFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.CreateCallFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogCompleted">
            <summary>
            The dialog completed event
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogCompleted.#ctor">
            <summary> Initializes a new instance of DialogCompletedEvent </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogCompleted.#ctor(Azure.Communication.CallAutomation.DialogCompletedInternal)">
            <summary> Initializes a new instance of DialogCompletedEvent. </summary>
            <param name="internalEvent">Internal Representation of the DialogCompletedEvent. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogCompleted.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogCompleted.DialogId">
            <summary> Dialog Id</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogCompleted.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.DialogCompleted" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.DialogCompleted" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogConsent">
            <summary>
            The dialog consent event
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogConsent.#ctor">
            <summary> Initializes a new instance of DialogConsentEvent </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogConsent.#ctor(Azure.Communication.CallAutomation.DialogConsentInternal)">
            <summary> Initializes a new instance of DialogConsentEvent. </summary>
            <param name="internalEvent">Internal Representation of the DialogConsentEvent. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogConsent.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogConsent.DialogId">
            <summary> Dialog Id </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogConsent.UserConsent">
            <summary> UserConsent </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogConsent.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.DialogConsent" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.DialogConsent" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogFailed">
            <summary>
            The dialog failed event
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogFailed.#ctor">
            <summary> Initializes a new instance of DialogFailedEvent </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogFailed.#ctor(Azure.Communication.CallAutomation.DialogFailedInternal)">
            <summary> Initializes a new instance of DialogFailedEvent. </summary>
            <param name="internalEvent">Internal Representation of the DialogFailedEvent. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogFailed.#ctor(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,Azure.Communication.CallAutomation.DialogInputType)">
            <summary>
            Initializes a new instance of DialogFailedEvent
            </summary>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="dialogId"> Dialog Id. </param>
            <param name="dialogInputType"> Type of Dialog. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogFailed.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogFailed.DialogId">
            <summary> Dialog Id</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.DialogFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.DialogFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogHangup">
            <summary>
            The dialog hangup event
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogHangup.#ctor">
            <summary> Initializes a new instance of DialogHangupEvent </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogHangup.#ctor(Azure.Communication.CallAutomation.DialogHangupInternal)">
            <summary> Initializes a new instance of DialogHangupEvent. </summary>
            <param name="internalEvent">Internal Representation of the DialogHangupEvent. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogHangup.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogHangup.DialogId">
            <summary> Dialog Id</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogHangup.IvrContext">
            <summary>
            Hangup struct
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogHangup.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.DialogHangup" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.DialogHangup" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogLanguageChange">
            <summary>
            The dialog language change event
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogLanguageChange.#ctor">
            <summary> Initializes a new instance of DialogLanguageChange </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogLanguageChange.#ctor(Azure.Communication.CallAutomation.DialogLanguageChangeInternal)">
            <summary> Initializes a new instance of DialogLanguageChange. </summary>
            <param name="internalEvent">Internal Representation of the DialogLanguageChange. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChange.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChange.DialogId">
            <summary> Dialog Id</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChange.SelectedLanguage">
            <summary> LanguageChange data </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogLanguageChange.IvrContext">
            <summary> IvrContext </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogLanguageChange.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.DialogLanguageChange" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.DialogLanguageChange" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogSensitivityUpdate">
            <summary>
            The dialog sensitivity update event
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogSensitivityUpdate.#ctor">
            <summary> Initializes a new instance of DialogSensitivityUpdate </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogSensitivityUpdate.#ctor(Azure.Communication.CallAutomation.DialogSensitivityUpdateInternal)">
            <summary> Initializes a new instance of DialogSensitivityUpdate. </summary>
            <param name="internalEvent">Internal Representation of the DialogSensitivityUpdate. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogSensitivityUpdate.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogSensitivityUpdate.DialogId">
            <summary> Dialog Id</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogSensitivityUpdate.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.DialogSensitivityUpdate" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.DialogSensitivityUpdate" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogStarted">
            <summary>
            The dialog started event
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogStarted.#ctor">
            <summary> Initializes a new instance of DialogStartedEvent </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogStarted.#ctor(Azure.Communication.CallAutomation.DialogStartedInternal)">
            <summary> Initializes a new instance of DialogStartedEvent. </summary>
            <param name="internalEvent">Internal Representation of the DialogStartedEvent. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogStarted.#ctor(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,System.String,Azure.Communication.CallAutomation.DialogInputType)">
            <summary>
            Initializes a new instance of DialogStartedEvent
            </summary>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="dialogId"> Dialog Id. </param>
            <param name="dialogInputType"> Type of Dialog. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogStarted.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogStarted.DialogId">
            <summary> Dialog Id</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogStarted.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.DialogStarted" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.DialogStarted" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogTransfer">
            <summary>
            The dialog transfer event
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogTransfer.#ctor">
            <summary> Initializes a new instance of DialogTransferEvent </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogTransfer.#ctor(Azure.Communication.CallAutomation.DialogTransferInternal)">
            <summary> Initializes a new instance of DialogTransferEvent. </summary>
            <param name="internalEvent">Internal Representation of the DialogTransferEvent. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransfer.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransfer.DialogId">
            <summary> Dialog Id</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransfer.TransferType">
            <summary> Transfer Type </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransfer.TransferDestination">
            <summary> Transfer Destination </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogTransfer.IvrContext">
            <summary> IVR Context </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogTransfer.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.DialogTransfer" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.DialogTransfer" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.DialogUpdated">
            <summary>
            The dialog updated event
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogUpdated.#ctor">
            <summary> Initializes a new instance of DialogUpdatedEvent </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogUpdated.#ctor(Azure.Communication.CallAutomation.DialogUpdatedInternal)">
            <summary> Initializes a new instance of DialogUpdatedEvent. </summary>
            <param name="internalEvent">Internal Representation of the DialogUpdatedEvent. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdated.DialogInputType">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdated.DialogId">
            <summary> Dialog Id</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdated.UpdatedType">
            <summary> Updated Type </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdated.UpdatedDestination">
            <summary> Updated Destination </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.DialogUpdated.IvrContext">
            <summary> IVR Context </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.DialogUpdated.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.DialogUpdated" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.DialogUpdated" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaEventReasonCode">
            <summary>
            Reason Codes for incoming webhook events.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaEventReasonCode.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.MediaEventReasonCode" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.RecognizeInitialSilenceTimedOut">
            <summary> Action failed, initial silence timeout reached. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.RecognizeInterDigitTimedOut">
            <summary> Action failed, inter-digit silence timeout reached. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.RecognizePlayPromptFailed">
            <summary> Action failed, encountered failure while trying to play the prompt. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.RecognizeMaxDigitsReceived">
            <summary> Action completed, max digits received. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.RecognizeStopToneDetected">
            <summary> Action completed as stop tone was detected. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.RecognizeDtmfOptionMatched">
            <summary> Action failed, play source not working. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.RecognizeSpeechOptionMatched">
            <summary> Speech option matched. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.RecognizeSpeechOptionNotMatched">
            <summary> Speech option  not matched. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.RecognizeIncorrectToneDetected">
            <summary> Recognize with Choice that incorrect tone detected. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.RecognizeSpeechNotRecognized">
            <summary> Speech not recognized. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.RecognizeSpeechServiceConnectionError">
            <summary> Speech service connection error. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.PlayDownloadFailed">
            <summary> Action failed, file could not be downloaded. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.PlayInvalidFileFormat">
            <summary> Action failed, invalid file format. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.PlaySourceTextOrSsmlEmpty">
            <summary> Action failed, play source text or ssml empty. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.CognitiveServicesError">
            <summary> Action failed, cognitive service error. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.CompletedSuccessfully">
            <summary> Action completed successfully. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaEventReasonCode.UnspecifiedError">
            <summary> Unknown internal server error. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaEventReasonCode.op_Equality(Azure.Communication.CallAutomation.MediaEventReasonCode,Azure.Communication.CallAutomation.MediaEventReasonCode)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.MediaEventReasonCode" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaEventReasonCode.op_Inequality(Azure.Communication.CallAutomation.MediaEventReasonCode,Azure.Communication.CallAutomation.MediaEventReasonCode)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.MediaEventReasonCode" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaEventReasonCode.op_Implicit(System.String)~Azure.Communication.CallAutomation.MediaEventReasonCode">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.MediaEventReasonCode" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaEventReasonCode.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaEventReasonCode.Equals(Azure.Communication.CallAutomation.MediaEventReasonCode)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaEventReasonCode.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaEventReasonCode.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaEventReasonCode.GetReasonCodeValue">
            <summary>
            Retrieves the integer value associated with the specified ReasonCode.
            </summary>
            <returns>The integer value corresponding to the provided ReasonCode.</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ParticipantsUpdated">
            <summary>
            The participants updated event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ParticipantsUpdated.#ctor">
            <summary> Initializes a new instance of ParticipantsUpdatedEvent. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ParticipantsUpdated.#ctor(Azure.Communication.CallAutomation.ParticipantsUpdatedInternal)">
            <summary> Initializes a new instance of ParticipantsUpdatedEvent. </summary>
            <param name="internalEvent"> Internal Representation of the ParticipantsUpdatedEvent. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ParticipantsUpdated.Participants">
            <summary> List of current participants in the call. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ParticipantsUpdated.SequenceNumber">
            <summary> Sequence number to indicate order of ParticipantsUpdated events. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ParticipantsUpdated.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.ParticipantsUpdated" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.ParticipantsUpdated" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecognizeCompleted">
            <summary>
            Recognize completed event.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeCompleted.RecognizeResult">
            <summary> The abstract recognize result. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeCompleted.RecognitionType">
            <summary>
            The recognition type.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeCompleted.#ctor">
            <summary> Initializes a new instance of RecognizeCompleted. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeCompleted.#ctor(System.String,System.String,System.String,System.String,Azure.Communication.CallAutomation.ResultInformation,Azure.Communication.CallAutomation.CallMediaRecognitionType,Azure.Communication.CallAutomation.RecognizeResult)">
            <summary> Initializes a new instance of RecognizeCompleted. </summary>
            <param name="callConnectionId"> Call connection ID. </param>
            <param name="serverCallId"> Server call ID. </param>
            <param name="correlationId"> Correlation ID for event to call correlation. Also called ChainId for skype chain ID. </param>
            <param name="operationContext"> Used by customers when calling mid-call actions to correlate the request to the response event. </param>
            <param name="resultInformation"> Contains the resulting SIP code/sub-code and message from NGC services. </param>
            <param name="recognitionType">
            Determines the sub-type of the recognize operation.
            In case of cancel operation the this field is not set and is returned empty
            </param>
            <param name="recognizeResult"> Defines the result for general recognizeResult. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeCompleted.#ctor(Azure.Communication.CallAutomation.RecognizeCompletedInternal)">
            <summary> Initializes a new instance of RecognizeCompletedEvent. </summary>
            <param name="internalEvent"> Internal Representation of the RecognizeCompletedEvent. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeCompleted.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.RecognizeCompleted" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.RecognizeCompleted" /> object.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeCompleted.Serialize">
            <summary>
            Serialize <see cref="T:Azure.Communication.CallAutomation.RecognizeCompleted" /> event.
            </summary>
            <returns>The serialized json string.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecognizeResult">
            <summary>
            The Recognize result which could be tone or choice result.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeResult.ResultType">
            <summary> The type of recognize result. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RemoveParticipantFailed">
            <summary>
            The remove participant failed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantFailed.#ctor">
            <summary> Initializes a new instance of RemoveParticipantFailedEvent. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantFailed.#ctor(Azure.Communication.CallAutomation.RemoveParticipantFailedInternal)">
            <summary> Initializes a new instance of RemoveParticipantFailedEvent. </summary>
            <param name="internalEvent">Internal Representation of the RemoveParticipantFailedEvent. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantFailed.Participant">
            <summary> Participant failed to be removed. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RemoveParticipantSucceeded">
            <summary>
            The remove participant succeeded event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantSucceeded.#ctor">
            <summary> Initializes a new instance of RemoveParticipantSucceededInternal. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantSucceeded.#ctor(Azure.Communication.CallAutomation.RemoveParticipantSucceededInternal)">
            <summary> Initializes a new instance of RemoveParticipantSucceededInternal. </summary>
            <param name="internalEvent"> Internal Representation of the RemoveParticipantSucceededEvent. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantSucceeded.Participant">
            <summary> Participant removed. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantSucceeded.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantSucceeded" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantSucceeded" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.SendDtmfTonesCompleted">
            <summary>
            The SendDtmfTonesCompleted event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesCompleted.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesCompleted" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesCompleted" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.SendDtmfTonesFailed">
            <summary>
            The SendDtmfFailed event.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesFailed.Deserialize(System.String)">
            <summary>
            Deserialize <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesFailed" /> event.
            </summary>
            <param name="content">The json content.</param>
            <returns>The new <see cref="T:Azure.Communication.CallAutomation.SendDtmfTonesFailed" /> object.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.FileSource">
            <summary> The File Source. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.FileSource.FileUri">
            <summary> The Uri of the file. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.FileSource.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.FileSource" />.
            </summary>
            <param name="fileUri">File Uri.</param>
        </member>
        <member name="T:Azure.Communication.CallAutomation.GroupCallLocator">
            <summary> The group call locator. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.GroupCallLocator.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.GroupCallLocator" />.
            </summary>
            <param name="id">The group call id.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="id" /> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown when the <paramref name="id" /> is empty.
            </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.GroupCallLocator.ToString">
            <summary>Returns a string that represents the current object.</summary><returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.GroupCallLocator.GetHashCode">
            <summary>Serves as the default hash function.</summary><returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.GroupCallLocator.Equals(Azure.Communication.CallAutomation.CallLocator)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.HoldOptions">
            <summary>
            Options for the Hold Request.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.HoldOptions.#ctor(Azure.Communication.CommunicationIdentifier)">
            <summary>
            Creates a new HoldOptions object.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.HoldOptions.TargetParticipant">
            <summary>
            The participant that is going to be put on hold.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.HoldOptions.PlaySourceInfo">
            <summary>
            Prompt to play while on hold.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.HoldOptions.OperationContext">
            <summary>
            The operation context to correlate the request to the response event.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.HoldOptions.OperationCallbackUri">
            <summary>
            The callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaStreamingConfiguration">
            <summary> The MediaStreamingConfiguration. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingConfiguration.#ctor(System.Uri,Azure.Communication.CallAutomation.MediaStreamingTransport,Azure.Communication.CallAutomation.MediaStreamingContent,Azure.Communication.CallAutomation.MediaStreamingAudioChannel)">
            <summary> Initializes a new instance of MediaStreamingConfiguration. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingConfiguration.TransportUrl">
            <summary> Transport URL for media streaming. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingConfiguration.TransportType">
            <summary> The type of tranport to be used for media streaming, eg. Websocket. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingConfiguration.ContentType">
            <summary> Content type to stream, eg. audio, audio/video. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingConfiguration.AudioChannelType">
            <summary> Audio channel type to stream, eg. unmixed audio, mixed audio. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MediaStreamingOptions">
            <summary> The MediaStreamingOptions. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MediaStreamingOptions.#ctor(System.Uri,Azure.Communication.CallAutomation.MediaStreamingTransport,Azure.Communication.CallAutomation.MediaStreamingContent,Azure.Communication.CallAutomation.MediaStreamingAudioChannel)">
            <summary> Initializes a new instance of MediaStreamingOptions. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingOptions.TransportUri">
            <summary> Transport URL for media streaming. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingOptions.MediaStreamingTransport">
            <summary> The type of tranport to be used for media streaming, eg. Websocket. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingOptions.MediaStreamingContent">
            <summary> Content type to stream, eg. audio, audio/video. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MediaStreamingOptions.MediaStreamingAudioChannel">
            <summary> Audio channel type to stream, eg. unmixed audio, mixed audio. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.MuteParticipantOptions">
            <summary>
            Options for the Mute Participant Request.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.MuteParticipantOptions.#ctor(Azure.Communication.CommunicationIdentifier)">
            <summary>
            Creates a new MuteParticipantOptions object.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MuteParticipantOptions.TargetParticipant">
            <summary>
            The identity of participants to be muted from the call.
            Only ACS Users are currently supported.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.MuteParticipantOptions.OperationContext">
            <summary>
            The operation context.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PlayOptions">
            <summary>
            Options to be used in the Play operation.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayOptions.PlaySources">
            <summary>
            PlaySource objects representing the sources to play.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayOptions.PlayTo">
            <summary>
            A list of target identifiers to play the file to.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayOptions.Loop">
            <summary>
            The option to play the provided audio source in loop when set to true.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayOptions.OperationContext">
            <summary>
            The Operation Context.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayOptions.OperationCallbackUri">
            <summary>
            The callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayOptions.InterruptCallMediaOperation">
            <summary>
            If set play can barge into other existing queued-up/currently-processing requests.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayOptions.#ctor(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.PlaySource},System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier})">
            <summary>
            Creates a new PlayOptions object.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayOptions.#ctor(Azure.Communication.CallAutomation.PlaySource,System.Collections.Generic.IEnumerable{Azure.Communication.CommunicationIdentifier})">
            <summary>
            Creates a new PlayOptions object.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PlayResult">
            <summary>The result from playing audio.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayResult.WaitForEventProcessor(System.Threading.CancellationToken)">
            <summary>
            This is blocking call. Wait for <see cref="T:Azure.Communication.CallAutomation.PlayEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.PlayCompleted" /> event or <see cref="T:Azure.Communication.CallAutomation.PlayFailed" /> event.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayResult.WaitForEventProcessorAsync(System.Threading.CancellationToken)">
            <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.PlayEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.PlayEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.PlayCompleted" /> event or <see cref="T:Azure.Communication.CallAutomation.PlayFailed" /> event.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PlaySource">
            <summary> The PlaySource. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlaySource.PlaySourceCacheId">
            <summary> Defines the identifier to be used for caching related media. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.PlayToAllOptions">
            <summary>
            Options to be used in the PlayToAll operation.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayToAllOptions.PlaySources">
            <summary>
            PlaySource objects representing the sources to play.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayToAllOptions.Loop">
            <summary>
            The option to play the provided audio source in loop when set to true.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayToAllOptions.InterruptCallMediaOperation">
            <summary>
            If set play can barge into other existing queued-up/currently-processing requests.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayToAllOptions.OperationContext">
            <summary>
            The Operation Context.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.PlayToAllOptions.OperationCallbackUri">
            <summary>
            The callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayToAllOptions.#ctor(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.PlaySource})">
            <summary>
            Creates a new PlayToAllOptions object.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.PlayToAllOptions.#ctor(Azure.Communication.CallAutomation.PlaySource)">
            <summary>
            Creates a new PlayToAllOptions object.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecognizeResultType">
            <summary>
            Determines the sub-type of the recognize result.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeResultType.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.RecognizeResultType" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeResultType.CollectTonesResult">
            <summary> CollectTonesResult. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeResultType.DtmfResult">
            <summary> DtmfResult. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeResultType.ChoiceResult">
            <summary> ChoiceResult. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecognizeResultType.SpeechResult">
            <summary> SpeechResult. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeResultType.op_Equality(Azure.Communication.CallAutomation.RecognizeResultType,Azure.Communication.CallAutomation.RecognizeResultType)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecognizeResultType" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeResultType.op_Inequality(Azure.Communication.CallAutomation.RecognizeResultType,Azure.Communication.CallAutomation.RecognizeResultType)">
            <summary> Determines if two <see cref="T:Azure.Communication.CallAutomation.RecognizeResultType" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeResultType.op_Implicit(System.String)~Azure.Communication.CallAutomation.RecognizeResultType">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CallAutomation.RecognizeResultType" />. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeResultType.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeResultType.Equals(Azure.Communication.CallAutomation.RecognizeResultType)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeResultType.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecognizeResultType.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RecordingStorage">
            <summary>
            Recording Storage base
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorage.#ctor(Azure.Communication.CallAutomation.RecordingStorageKind)">
            <summary>
            Recording storage
            </summary>
            <param name="recordingStorageKind"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RecordingStorage.RecordingStorageKind">
            <summary>
            Recording storage Kind
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorage.CreateAzureBlobContainerRecordingStorage(System.Uri)">
            <summary> Creates AzureBlobContainer Storage for Recording. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RecordingStorage.CreateAzureCommunicationsRecordingStorage">
            <summary> Creates AzureCommunications Storage for Recording. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RedirectCallOptions">
            <summary>
            The redirect call operation options.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RedirectCallOptions.#ctor(System.String,Azure.Communication.CallAutomation.CallInvite)">
            <summary>
            Creates a new RedirectCallOptions object.
            </summary>
            <param name="incomingCallContext"></param>
            <param name="callInvite"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RedirectCallOptions.IncomingCallContext">
            <summary>
            The context associated with the call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RedirectCallOptions.CallInvite">
            <summary>
            Call invitee information.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RejectCallOptions">
            <summary>
            The reject call operation options.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RejectCallOptions.#ctor(System.String)">
            <summary>
            Creates a new RejectCallOptions object.
            </summary>
            <param name="incomingCallContext"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RejectCallOptions.IncomingCallContext">
            <summary>
            The context associated with the call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RejectCallOptions.CallRejectReason">
            <summary>
            The reason for rejecting call.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RemoveParticipantOptions">
            <summary>
            Options for the Remove Participants Request.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantOptions.#ctor(Azure.Communication.CommunicationIdentifier)">
            <summary>
            Creates a new RemoveParticipantsOptions object.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantOptions.ParticipantToRemove">
            <summary>
            The list of identity of the participant to be removed from the call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantOptions.OperationContext">
            <summary>
            The operation context.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantOptions.OperationCallbackUri">
            <summary>
            The callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.RemoveParticipantResult">
            <summary>RemoveParticipantResult Result.</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.RemoveParticipantResult.OperationContext">
            <summary>The operation context provided by client.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantResult.WaitForEventProcessor(System.Threading.CancellationToken)">
            <summary>
            This is blocking call. Wait for <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantSucceeded" /> event or <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantFailed" /> event.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.RemoveParticipantResult.WaitForEventProcessorAsync(System.Threading.CancellationToken)">
            <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantSucceeded" /> event or <see cref="T:Azure.Communication.CallAutomation.RemoveParticipantFailed" /> event.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.SendDtmfTonesOptions">
            <summary>
            The SendDtmfTonesOptions operation options.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SendDtmfTonesOptions.#ctor(System.Collections.Generic.IEnumerable{Azure.Communication.CallAutomation.DtmfTone},Azure.Communication.CommunicationIdentifier)">
            <summary>
            Creates a new SendDtmfTonesOptions object.
            </summary>
            <param name="tones"> A list of Tones to be sent. </param>
            <param name="targetParticipant"> The target communication identifier. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesOptions.Tones">
            <summary>
            A list of Tones to be sent.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesOptions.TargetParticipant">
            <summary> The target communication identifier. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesOptions.OperationContext">
            <summary>
            The operationContext for this add participants call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SendDtmfTonesOptions.OperationCallbackUri">
            <summary>
            The callback URI to override the main callback URI.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ServerCallLocator">
            <summary> The server call locator. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ServerCallLocator.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Azure.Communication.CallAutomation.ServerCallLocator" />.
            </summary>
            <param name="id">The server call id.</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when the <paramref name="id" /> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown when the <paramref name="id" /> is empty.
            </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ServerCallLocator.ToString">
            <summary>Returns a string that represents the current object.</summary><returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ServerCallLocator.GetHashCode">
            <summary>Serves as the default hash function.</summary><returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ServerCallLocator.Equals(Azure.Communication.CallAutomation.CallLocator)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.SsmlSource">
            <summary> The SsmlSource. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.SsmlSource.#ctor(System.String)">
            <summary> Initializes a new instance of SsmlSourceInternal. </summary>
            <param name="ssmlText"> Ssml string for the cognitive service to be played. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="ssmlText" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SsmlSource.SsmlText">
            <summary> Ssml string for the cognitive service to be played. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.SsmlSource.CustomVoiceEndpointId">
            <summary> Endpoint where the custom voice was deployed. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StartDialogOptions">
            <summary>
            The Dialog Options.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartDialogOptions.#ctor(Azure.Communication.CallAutomation.BaseDialog)">
            <summary>
            Creates a new instance of the DialogOptions.
            </summary>
            <param name="dialog"></param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartDialogOptions.#ctor(System.String,Azure.Communication.CallAutomation.BaseDialog)">
            <summary>
            Creates a new instance of the DialogOptions.
            </summary>
            <param name="dialogId"></param>
            <param name="dialog"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartDialogOptions.DialogId">
            <summary> Dialog Id</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartDialogOptions.Dialog">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartDialogOptions.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StartHoldMusicOptions">
            <summary>
            Options for the Start Hold Music Request.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartHoldMusicOptions.#ctor(Azure.Communication.CommunicationIdentifier,Azure.Communication.CallAutomation.PlaySource)">
            <summary>
            Creates a new StartHoldMusicOptions object.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartHoldMusicOptions.TargetParticipant">
            <summary>
            The participant that is going to be put on hold.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartHoldMusicOptions.PlaySourceInfo">
            <summary>
            Prompt to play while on hold.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartHoldMusicOptions.Loop">
            <summary>
            If the prompt will be looped or not.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartHoldMusicOptions.OperationContext">
            <summary>
            The operation context to correlate the request to the response event.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StartRecognizingCallMediaResult">
            <summary>The result from start recognizing result.</summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartRecognizingCallMediaResult.WaitForEventProcessor(System.Threading.CancellationToken)">
            <summary>
            This is blocking call. Wait for <see cref="T:Azure.Communication.CallAutomation.StartRecognizingEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.StartRecognizingEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.RecognizeCompleted" /> event or <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" /> event.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartRecognizingCallMediaResult.WaitForEventProcessorAsync(System.Threading.CancellationToken)">
            <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.StartRecognizingEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.CallAutomationEventProcessor" />.
            </summary>
            <param name="cancellationToken">Cancellation Token can be used to set timeout or cancel this WaitForEventProcessor.</param>
            <returns>Returns <see cref="T:Azure.Communication.CallAutomation.StartRecognizingEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.RecognizeCompleted" /> event or <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" /> event.</returns>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StartRecordingOptions">
            <summary>
            Options for the Start Recording operation.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StartRecordingOptions.#ctor(Azure.Communication.CallAutomation.CallLocator)">
            <summary>
            Parameters for the Start Recording operation.
            </summary>
            <param name="callLocator"> . </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartRecordingOptions.CallLocator">
            <summary>
            The callLocator.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartRecordingOptions.RecordingStateCallbackUri">
            <summary>
            The callLocator.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartRecordingOptions.RecordingChannel">
            <summary>
            The recording channel.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartRecordingOptions.RecordingContent">
            <summary>
            The recording content.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartRecordingOptions.RecordingFormat">
            <summary>
            The recording format.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartRecordingOptions.PauseOnStart">
            <summary>
            The pause on start option.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartRecordingOptions.RecordingStorage">
            <summary>
            The external storage option.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartRecordingOptions.AudioChannelParticipantOrdering">
            <summary>
            The sequential order in which audio channels are assigned to participants in the unmixed recording.
            When 'recordingChannelType' is set to 'unmixed' and `audioChannelParticipantOrdering is not specified,
            the audio channel to participant mapping will be automatically assigned based on the order in which participant
            first audio was detected.  Channel to participant mapping details can be found in the metadata of the recording.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartRecordingOptions.ChannelAffinity">
            <summary>
            The channel affinity of call recording
            When 'recordingChannelType' is set to 'unmixed', if channelAffinity is not specified, 'channel' will be automatically assigned.
            Channel-Participant mapping details can be found in the metadata of the recording.
            ///
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StartTranscriptionOptions">
            <summary>
            Options for the Start transcription Request.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartTranscriptionOptions.Locale">
            <summary> Defines Locale for the transcription e,g en-US. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StartTranscriptionOptions.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StopHoldMusicOptions">
            <summary>
            Options for the Stop Hold Music Request.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StopHoldMusicOptions.#ctor(Azure.Communication.CommunicationIdentifier)">
            <summary>
            Creates a new StopHoldMusicOptions object.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StopHoldMusicOptions.TargetParticipant">
            <summary>
            The participant that is currently on hold.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StopHoldMusicOptions.OperationContext">
            <summary>
            The operation context.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StopTranscriptionOptions">
            <summary>
            Options for the stop transcription Request.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.StopTranscriptionOptions.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AudioData">
            <summary>
            Streaming Audio.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioData.Data">
            <summary>
            The audio data in base64 string.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioData.Timestamp">
            <summary>
            The timestamp of thwn the media was sourced.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioData.Participant">
            <summary>
            Participant ID
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioData.IsSilent">
            <summary>
            Indicates if the received audio buffer contains only silence.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AudioDataInternal">
            <summary>
            Streaming Audio.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioDataInternal.Data">
            <summary>
            The audio data in base64 string.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioDataInternal.Timestamp">
            <summary>
            The timestamp of thwn the media was sourced.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioDataInternal.ParticipantRawId">
            <summary>
            Participant ID.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioDataInternal.Silent">
            <summary>
            Indicates if the received audio buffer contains only silence.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.AudioMetadata">
            <summary>
            Metadata for Audio Streaming.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioMetadata.MediaSubscriptionId">
            <summary>
            Subscription Id.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioMetadata.Encoding">
            <summary>
            The Encoding.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioMetadata.SampleRate">
            <summary>
            Sample Rate.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioMetadata.Channels">
            <summary>
            Channels.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.AudioMetadata.Length">
            <summary>
            Length.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StreamingData">
            <summary>
            Base class for Streaming Data
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.StreamingDataParser">
            <summary>
            A generic parser for different packages, such as Media(Audio) or Transcription, received as
            part of streaming over websocket
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StreamingDataParser.Parse(System.BinaryData)">
            <summary>
            Parsing a MediaStreaming package from BinaryData.
            </summary>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StreamingDataParser.Parse(System.Byte[])">
            <summary>
            Parsing a MediaStreaming package from a byte array.
            </summary>
            <param name="receivedBytes">a UTF8 byte array.</param>
            <returns></returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.StreamingDataParser.Parse(System.String)">
            <summary>
            Parse the incoming package.
            </summary>
            <param name="stringJson"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Azure.Communication.CallAutomation.ResultStatus">
            <summary>
            The status of the result of transcription
            </summary>
        </member>
        <member name="F:Azure.Communication.CallAutomation.ResultStatus.Intermediate">
            <summary>
             Intermediate result
            </summary>
        </member>
        <member name="F:Azure.Communication.CallAutomation.ResultStatus.Final">
            <summary>
             Final result
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TextFormat">
            <summary>
            The format of transcription text
            </summary>
        </member>
        <member name="F:Azure.Communication.CallAutomation.TextFormat.Display">
            <summary>
             Formatted recognize text with punctuations
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionData">
            <summary>
            Streaming Transcription.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionData.Text">
            <summary>
            The display form of the recognized word
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionData.Format">
            <summary>
            The format of text
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionData.Confidence">
            <summary>
            Confidence of recognition of the whole phrase, from 0.0 (no confidence) to 1.0 (full confidence)
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionData.Offset">
            <summary>
            The position of this payload
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionData.Duration">
            <summary>
            Duration in ticks. 1 tick = 100 nanoseconds.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionData.Words">
            <summary>
            The result for each word of the phrase
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionData.Participant">
            <summary>
            The identified speaker based on participant raw ID
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionData.ResultStatus">
            <summary>
            Status of the result of transcription
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionDataInternal">
            <summary>
            Streaming Transcription.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionDataInternal.Text">
            <summary>
            The display form of the recognized word
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionDataInternal.Format">
            <summary>
            The format of text
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionDataInternal.Confidence">
            <summary>
            Confidence of recognition of the whole phrase, from 0.0 (no confidence) to 1.0 (full confidence)
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionDataInternal.Offset">
            <summary>
            The position of this payload
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionDataInternal.Duration">
            <summary>
            Duration in ticks. 1 tick = 100 nanoseconds.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionDataInternal.Words">
            <summary>
            The result for each word of the phrase
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionDataInternal.ParticipantRawID">
            <summary>
            The identified speaker based on participant raw ID
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionDataInternal.ResultStatus">
            <summary>
            Status of the result of transcription
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionMetadata">
            <summary>
            Metadata for Transcription Streaming.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionMetadata.TranscriptionSubscriptionId">
            <summary>
            Transcription Subscription Id.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionMetadata.Locale">
            <summary>
            The target locale in which the translated text needs to be
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionMetadata.CallConnectionId">
            <summary>
            call connection Id.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionMetadata.CorrelationId">
            <summary>
            correlation Id.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.WordData">
            <summary>
            The result for each word of the phrase
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.WordData.Text">
            <summary>
            Text in the phrase.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.WordData.Offset">
            <summary>
            The word's position within the phrase.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.WordData.Duration">
            <summary>
            Duration in ticks. 1 tick = 100 nanoseconds.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TextSource">
            <summary> The TextSource. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TextSource.#ctor(System.String)">
            <summary> Initializes a new instance of TextSource. </summary>
            <param name="text"> Text for the cognitive service to be played. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TextSource.#ctor(System.String,System.String)">
            <summary> Initializes a new instance of TextSource. </summary>
            <param name="text"> Text for the cognitive service to be played. </param>
            <param name="voiceName"> The voiceName of the audio. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TextSource.#ctor(System.String,System.String,Azure.Communication.CallAutomation.VoiceKind)">
            <summary> Initializes a new instance of TextSource. </summary>
            <param name="text"> Text for the cognitive service to be played. </param>
            <param name="sourceLocale"> The culture info string of the voice. </param>
            <param name="voiceKind"> The Voice Kind of the voice. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="text" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TextSource.Text">
            <summary> Text for the cognitive service to be played. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TextSource.SourceLocale">
            <summary> Source language locale to be played. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TextSource.VoiceKind">
            <summary> Voice type. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TextSource.VoiceName">
            <summary> Voice name to be played. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TextSource.CustomVoiceEndpointId">
            <summary> Endpoint where the custom voice was deployed. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TranscriptionOptions">
            <summary> Options of live transcription. </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TranscriptionOptions.#ctor(System.Uri,Azure.Communication.CallAutomation.TranscriptionTransport,System.String,System.Boolean)">
            <summary> Initializes a new instance of TranscriptionOptions. </summary>
            <param name="transportUri"> Transport URL for live transcription. </param>
            <param name="transportType"> The type of transport to be used for live transcription, eg. Websocket. </param>
            <param name="locale"> Defines the locale for the data e.g en-CA, en-AU. </param>
            <param name="startTranscription"> Determines if the transcription should be started immediately after call is answered or not. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="transportUri" /> or <paramref name="locale" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionOptions.TransportUrl">
            <summary> Transport URL for live transcription. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionOptions.TranscriptionTransport">
            <summary> The type of transport to be used for live transcription, eg. Websocket. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionOptions.Locale">
            <summary> Defines the locale for the data e.g en-CA, en-AU. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TranscriptionOptions.StartTranscription">
            <summary> Determines if the transcription should be started immediately after call is answered or not. </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.TransferToParticipantOptions">
            <summary>
            The transfer call to participant operation options.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TransferToParticipantOptions.#ctor(Azure.Communication.PhoneNumberIdentifier)">
            <summary>
            Creates a new TransferToParticipantOptions object.
            </summary>
            <param name="targetPhoneNumberIdentity"> The target to transfer the call to. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TransferToParticipantOptions.#ctor(Azure.Communication.CommunicationUserIdentifier)">
            <summary>
            Creates a new TransferToParticipantOptions object.
            </summary>
            <param name="targetIdentity"> The target to transfer the call to. </param>
        </member>
        <member name="M:Azure.Communication.CallAutomation.TransferToParticipantOptions.#ctor(Azure.Communication.MicrosoftTeamsUserIdentifier)">
            <summary>
            Creates a new TransferToParticipantOptions object.
            </summary>
            <param name="targetIdentity"> The target to transfer the call to. </param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferToParticipantOptions.Target">
            <summary>
            The target callee.
            </summary>
            <value></value>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferToParticipantOptions.OperationContext">
            <summary>
            The operationContext for this transfer call.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferToParticipantOptions.CustomCallingContext">
            <summary>
            The Custom Context which contains SIP and voip headers
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferToParticipantOptions.Transferee">
            <summary>
            The callee that being transferred
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferToParticipantOptions.OperationCallbackUri">
            <summary>
            The callback URI that overrides the default callback URI set by CreateCall/AnswerCall for this operation.
            This setup is per-action. If this is not set, the default callback URI set by CreateCall/AnswerCall will be used.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.TransferToParticipantOptions.SourceCallerIdNumber">
            <summary>
            The phone number that will be used as the transferor(Contoso) caller id when transfering a call a pstn target.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.UnholdOptions">
            <summary>
            Options for the Hold Request.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnholdOptions.#ctor(Azure.Communication.CommunicationIdentifier)">
            <summary>
            Creates a new UnholdOptions object.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UnholdOptions.TargetParticipant">
            <summary>
            The participant that is currently on hold.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UnholdOptions.OperationContext">
            <summary>
            The operation context.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.UnmuteParticipantOptions">
            <summary>
            Options for the Unmute Participant Request.
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UnmuteParticipantOptions.#ctor(Azure.Communication.CommunicationIdentifier)">
            <summary>
            Creates a new UnmuteParticipantOptions object.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UnmuteParticipantOptions.TargetParticipant">
            <summary>
            The identity of participants to be unmuted from the call.
            Only ACS Users are currently supported.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UnmuteParticipantOptions.OperationContext">
            <summary>
            The operation context.
            </summary>
        </member>
        <member name="T:Azure.Communication.CallAutomation.UpdateDialogOptions">
            <summary>
            Update Dialog Options bag
            </summary>
        </member>
        <member name="M:Azure.Communication.CallAutomation.UpdateDialogOptions.#ctor(System.String,Azure.Communication.CallAutomation.DialogUpdateBase)">
            <summary>
            Creates a new instance of the UpdateDialogOptions.
            </summary>
            <param name="dialogId"></param>
            <param name="dialog"></param>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UpdateDialogOptions.DialogId">
            <summary> Dialog Id</summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UpdateDialogOptions.Dialog">
            <summary> Determines the type of the dialog. </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.UpdateDialogOptions.OperationContext">
            <summary> The value to identify context of the operation. </summary>
        </member>
        <member name="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.#ctor(Azure.Core.TokenCredential,System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy" /> using provided token credential and scope to authenticate for.
            </summary>
            <param name="credential">The token credential to use for authentication.</param>
            <param name="scope">The scope to be included in acquired tokens.</param>
            <param name="acsEndpoint">acs endpoint</param>
        </member>
        <member name="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.#ctor(Azure.Core.TokenCredential,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new instance of <see cref="T:Azure.Core.Pipeline.BearerTokenAuthenticationPolicy" /> using provided token credential and scopes to authenticate for.
            </summary>
            <param name="credential">The token credential to use for authentication.</param>
            <param name="scopes">Scopes to be included in acquired tokens.</param>
            <exception cref="T:System.ArgumentNullException">When <paramref name="credential" /> or <paramref name="scopes" /> is null.</exception>
        </member>
        <member name="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})">
            <summary>
            Applies the policy to the <paramref name="message" />. Implementers are expected to mutate <see cref="P:Azure.Core.HttpMessage.Request" /> before calling <see cref="M:Azure.Core.Pipeline.HttpPipelinePolicy.ProcessNextAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> and observe the <see cref="P:Azure.Core.HttpMessage.Response" /> changes after.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param><param name="pipeline">The set of <see cref="T:Azure.Core.Pipeline.HttpPipelinePolicy" /> to execute after current one.</param><returns>The <see cref="T:System.Threading.Tasks.ValueTask" /> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})">
            <summary>
            Applies the policy to the <paramref name="message" />. Implementers are expected to mutate <see cref="P:Azure.Core.HttpMessage.Request" /> before calling <see cref="M:Azure.Core.Pipeline.HttpPipelinePolicy.ProcessNextAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> and observe the <see cref="P:Azure.Core.HttpMessage.Response" /> changes after.
            </summary><param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param><param name="pipeline">The set of <see cref="T:Azure.Core.Pipeline.HttpPipelinePolicy" /> to execute after current one.</param>
        </member>
        <member name="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.AuthorizeRequestAsync(Azure.Core.HttpMessage)">
            <summary>
            Executes before <see cref="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> or
            <see cref="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> is called.
            Implementers of this method are expected to call <see cref="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequest(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" /> or <see cref="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequestAsync(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" />
            if authorization is required for requests not related to handling a challenge response.
            </summary>
            <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param>
            <returns>The <see cref="T:System.Threading.Tasks.ValueTask" /> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.AuthorizeRequest(Azure.Core.HttpMessage)">
            <summary>
            Executes before <see cref="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.ProcessAsync(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> or
            <see cref="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.Process(Azure.Core.HttpMessage,System.ReadOnlyMemory{Azure.Core.Pipeline.HttpPipelinePolicy})" /> is called.
            Implementers of this method are expected to call <see cref="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequest(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" /> or <see cref="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequestAsync(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)" />
            if authorization is required for requests not related to handling a challenge response.
            </summary>
            <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> this policy would be applied to.</param>
        </member>
        <member name="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.AuthorizeRequestOnChallengeAsync(Azure.Core.HttpMessage)">
            <summary>
            Executed in the event a 401 response with a WWW-Authenticate authentication challenge header is received after the initial request.
            </summary>
            <remarks>Service client libraries may override this to handle service specific authentication challenges.</remarks>
            <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> to be authenticated.</param>
            <returns>A boolean indicating whether the request was successfully authenticated and should be sent to the transport.</returns>
        </member>
        <member name="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.AuthorizeRequestOnChallenge(Azure.Core.HttpMessage)">
            <summary>
            Executed in the event a 401 response with a WWW-Authenticate authentication challenge header is received after the initial request.
            </summary>
            <remarks>Service client libraries may override this to handle service specific authentication challenges.</remarks>
            <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> to be authenticated.</param>
            <returns>A boolean indicating whether the request was successfully authenticated and should be sent to the transport.</returns>
        </member>
        <member name="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequestAsync(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)">
            <summary>
            Sets the Authorization header on the <see cref="T:Azure.Core.Request" /> by calling GetToken, or from cache, if possible.
            </summary>
            <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> with the <see cref="T:Azure.Core.Request" /> to be authorized.</param>
            <param name="context">The <see cref="T:Azure.Core.TokenRequestContext" /> used to authorize the <see cref="T:Azure.Core.Request" />.</param>
        </member>
        <member name="M:Azure.Communication.Pipeline.CustomBearerTokenAuthenticationPolicy.AuthenticateAndAuthorizeRequest(Azure.Core.HttpMessage,Azure.Core.TokenRequestContext)">
            <summary>
            Sets the Authorization header on the <see cref="T:Azure.Core.Request" /> by calling GetToken, or from cache, if possible.
            </summary>
            <param name="message">The <see cref="T:Azure.Core.HttpMessage" /> with the <see cref="T:Azure.Core.Request" /> to be authorized.</param>
            <param name="context">The <see cref="T:Azure.Core.TokenRequestContext" /> used to authorize the <see cref="T:Azure.Core.Request" />.</param>
        </member>
        <member name="T:Azure.Communication.CommunicationCloudEnvironmentModel">
            <summary> The cloud that the identifier belongs to. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationCloudEnvironmentModel.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CommunicationCloudEnvironmentModel" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CommunicationCloudEnvironmentModel.Public">
            <summary> public. </summary>
        </member>
        <member name="P:Azure.Communication.CommunicationCloudEnvironmentModel.Dod">
            <summary> dod. </summary>
        </member>
        <member name="P:Azure.Communication.CommunicationCloudEnvironmentModel.Gcch">
            <summary> gcch. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationCloudEnvironmentModel.op_Equality(Azure.Communication.CommunicationCloudEnvironmentModel,Azure.Communication.CommunicationCloudEnvironmentModel)">
            <summary> Determines if two <see cref="T:Azure.Communication.CommunicationCloudEnvironmentModel" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationCloudEnvironmentModel.op_Inequality(Azure.Communication.CommunicationCloudEnvironmentModel,Azure.Communication.CommunicationCloudEnvironmentModel)">
            <summary> Determines if two <see cref="T:Azure.Communication.CommunicationCloudEnvironmentModel" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationCloudEnvironmentModel.op_Implicit(System.String)~Azure.Communication.CommunicationCloudEnvironmentModel">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CommunicationCloudEnvironmentModel" />. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationCloudEnvironmentModel.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CommunicationCloudEnvironmentModel.Equals(Azure.Communication.CommunicationCloudEnvironmentModel)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CommunicationCloudEnvironmentModel.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CommunicationCloudEnvironmentModel.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CommunicationIdentifierModel">
            <summary> Identifies a participant in Azure Communication services. A participant is, for example, a phone number or an Azure communication user. This model is polymorphic: Apart from kind and rawId, at most one further property may be set which must match the kind enum value. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationIdentifierModel.#ctor">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CommunicationIdentifierModel" />. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationIdentifierModel.#ctor(System.Nullable{Azure.Communication.CommunicationIdentifierModelKind},System.String,Azure.Communication.CommunicationUserIdentifierModel,Azure.Communication.PhoneNumberIdentifierModel,Azure.Communication.MicrosoftTeamsUserIdentifierModel,Azure.Communication.MicrosoftTeamsAppIdentifierModel)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CommunicationIdentifierModel" />. </summary>
            <param name="kind"> The identifier kind. Only required in responses. </param>
            <param name="rawId"> Raw Id of the identifier. Optional in requests, required in responses. </param>
            <param name="communicationUser"> The communication user. </param>
            <param name="phoneNumber"> The phone number. </param>
            <param name="microsoftTeamsUser"> The Microsoft Teams user. </param>
            <param name="microsoftTeamsApp"> The Microsoft Teams application. </param>
        </member>
        <member name="P:Azure.Communication.CommunicationIdentifierModel.Kind">
            <summary> The identifier kind. Only required in responses. </summary>
        </member>
        <member name="P:Azure.Communication.CommunicationIdentifierModel.RawId">
            <summary> Raw Id of the identifier. Optional in requests, required in responses. </summary>
        </member>
        <member name="P:Azure.Communication.CommunicationIdentifierModel.CommunicationUser">
            <summary> The communication user. </summary>
        </member>
        <member name="P:Azure.Communication.CommunicationIdentifierModel.PhoneNumber">
            <summary> The phone number. </summary>
        </member>
        <member name="P:Azure.Communication.CommunicationIdentifierModel.MicrosoftTeamsUser">
            <summary> The Microsoft Teams user. </summary>
        </member>
        <member name="P:Azure.Communication.CommunicationIdentifierModel.MicrosoftTeamsApp">
            <summary> The Microsoft Teams application. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationIdentifierModel.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CommunicationIdentifierModel.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.CommunicationIdentifierModelKind">
            <summary> The identifier kind, for example 'communicationUser' or 'phoneNumber'. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationIdentifierModelKind.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CommunicationIdentifierModelKind" />. </summary>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CommunicationIdentifierModelKind.Unknown">
            <summary> unknown. </summary>
        </member>
        <member name="P:Azure.Communication.CommunicationIdentifierModelKind.CommunicationUser">
            <summary> communicationUser. </summary>
        </member>
        <member name="P:Azure.Communication.CommunicationIdentifierModelKind.PhoneNumber">
            <summary> phoneNumber. </summary>
        </member>
        <member name="P:Azure.Communication.CommunicationIdentifierModelKind.MicrosoftTeamsUser">
            <summary> microsoftTeamsUser. </summary>
        </member>
        <member name="P:Azure.Communication.CommunicationIdentifierModelKind.MicrosoftTeamsApp">
            <summary> microsoftTeamsApp. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationIdentifierModelKind.op_Equality(Azure.Communication.CommunicationIdentifierModelKind,Azure.Communication.CommunicationIdentifierModelKind)">
            <summary> Determines if two <see cref="T:Azure.Communication.CommunicationIdentifierModelKind" /> values are the same. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationIdentifierModelKind.op_Inequality(Azure.Communication.CommunicationIdentifierModelKind,Azure.Communication.CommunicationIdentifierModelKind)">
            <summary> Determines if two <see cref="T:Azure.Communication.CommunicationIdentifierModelKind" /> values are not the same. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationIdentifierModelKind.op_Implicit(System.String)~Azure.Communication.CommunicationIdentifierModelKind">
            <summary> Converts a string to a <see cref="T:Azure.Communication.CommunicationIdentifierModelKind" />. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationIdentifierModelKind.Equals(System.Object)">
            <summary>Indicates whether this instance and a specified object are equal.</summary><param name="obj">The object to compare with the current instance.</param><returns><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CommunicationIdentifierModelKind.Equals(Azure.Communication.CommunicationIdentifierModelKind)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary><param name="other">An object to compare with this object.</param><returns><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Azure.Communication.CommunicationIdentifierModelKind.GetHashCode">
            <summary>Returns the hash code for this instance.</summary><returns>A 32-bit signed integer that is the hash code for this instance.</returns>
        </member>
        <member name="M:Azure.Communication.CommunicationIdentifierModelKind.ToString">
            <summary>Returns the fully qualified type name of this instance.</summary><returns>The fully qualified type name.</returns>
        </member>
        <member name="T:Azure.Communication.CommunicationUserIdentifierModel">
            <summary> A user that got created with an Azure Communication Services resource. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationUserIdentifierModel.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.CommunicationUserIdentifierModel" />. </summary>
            <param name="id"> The Id of the communication user. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="id" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.CommunicationUserIdentifierModel.Id">
            <summary> The Id of the communication user. </summary>
        </member>
        <member name="M:Azure.Communication.CommunicationUserIdentifierModel.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.CommunicationUserIdentifierModel.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.MicrosoftTeamsAppIdentifierModel">
            <summary> A Microsoft Teams application. </summary>
        </member>
        <member name="M:Azure.Communication.MicrosoftTeamsAppIdentifierModel.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.MicrosoftTeamsAppIdentifierModel" />. </summary>
            <param name="appId"> The Id of the Microsoft Teams application. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="appId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.MicrosoftTeamsAppIdentifierModel.#ctor(System.String,System.Nullable{Azure.Communication.CommunicationCloudEnvironmentModel})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.MicrosoftTeamsAppIdentifierModel" />. </summary>
            <param name="appId"> The Id of the Microsoft Teams application. </param>
            <param name="cloud"> The cloud that the Microsoft Teams application belongs to. By default 'public' if missing. </param>
        </member>
        <member name="P:Azure.Communication.MicrosoftTeamsAppIdentifierModel.AppId">
            <summary> The Id of the Microsoft Teams application. </summary>
        </member>
        <member name="P:Azure.Communication.MicrosoftTeamsAppIdentifierModel.Cloud">
            <summary> The cloud that the Microsoft Teams application belongs to. By default 'public' if missing. </summary>
        </member>
        <member name="M:Azure.Communication.MicrosoftTeamsAppIdentifierModel.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.MicrosoftTeamsAppIdentifierModel.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.MicrosoftTeamsUserIdentifierModel">
            <summary> A Microsoft Teams user. </summary>
        </member>
        <member name="M:Azure.Communication.MicrosoftTeamsUserIdentifierModel.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.MicrosoftTeamsUserIdentifierModel" />. </summary>
            <param name="userId"> The Id of the Microsoft Teams user. If not anonymous, this is the AAD object Id of the user. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="userId" /> is null. </exception>
        </member>
        <member name="M:Azure.Communication.MicrosoftTeamsUserIdentifierModel.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{Azure.Communication.CommunicationCloudEnvironmentModel})">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.MicrosoftTeamsUserIdentifierModel" />. </summary>
            <param name="userId"> The Id of the Microsoft Teams user. If not anonymous, this is the AAD object Id of the user. </param>
            <param name="isAnonymous"> True if the Microsoft Teams user is anonymous. By default false if missing. </param>
            <param name="cloud"> The cloud that the Microsoft Teams user belongs to. By default 'public' if missing. </param>
        </member>
        <member name="P:Azure.Communication.MicrosoftTeamsUserIdentifierModel.UserId">
            <summary> The Id of the Microsoft Teams user. If not anonymous, this is the AAD object Id of the user. </summary>
        </member>
        <member name="P:Azure.Communication.MicrosoftTeamsUserIdentifierModel.IsAnonymous">
            <summary> True if the Microsoft Teams user is anonymous. By default false if missing. </summary>
        </member>
        <member name="P:Azure.Communication.MicrosoftTeamsUserIdentifierModel.Cloud">
            <summary> The cloud that the Microsoft Teams user belongs to. By default 'public' if missing. </summary>
        </member>
        <member name="M:Azure.Communication.MicrosoftTeamsUserIdentifierModel.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.MicrosoftTeamsUserIdentifierModel.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Communication.PhoneNumberIdentifierModel">
            <summary> A phone number. </summary>
        </member>
        <member name="M:Azure.Communication.PhoneNumberIdentifierModel.#ctor(System.String)">
            <summary> Initializes a new instance of <see cref="T:Azure.Communication.PhoneNumberIdentifierModel" />. </summary>
            <param name="value"> The phone number in E.164 format. </param>
            <exception cref="T:System.ArgumentNullException"> <paramref name="value" /> is null. </exception>
        </member>
        <member name="P:Azure.Communication.PhoneNumberIdentifierModel.Value">
            <summary> The phone number in E.164 format. </summary>
        </member>
        <member name="M:Azure.Communication.PhoneNumberIdentifierModel.FromResponse(Azure.Response)">
            <summary> Deserializes the model from a raw response. </summary>
            <param name="response"> The response to deserialize the model from. </param>
        </member>
        <member name="M:Azure.Communication.PhoneNumberIdentifierModel.ToRequestContent">
            <summary> Convert into a <see cref="T:Azure.Core.RequestContent" />. </summary>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T" /> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1" />, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity" /> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1" />.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1" /> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> amount of data was written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" />.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count" /> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1" /> to write to that is at least the requested length (specified by <paramref name="sizeHint" />).
            If no <paramref name="sizeHint" /> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint" /> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1" />.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(Azure.Core.ClientOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="options">The customer provided client options object.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients; use default (null)
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.ClientDiagnostics.#ctor(System.String,System.String,Azure.Core.DiagnosticsOptions,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> class.
            </summary>
            <param name="optionsNamespace">Namespace of the client class, such as Azure.Storage or Azure.AppConfiguration.</param>
            <param name="providerNamespace">Azure Resource Provider namespace of the Azure service SDK is primarily used for.</param>
            <param name="diagnosticsOptions">The customer provided client diagnostics options.</param>
            <param name="suppressNestedClientActivities">Flag controlling if <see cref="T:System.Diagnostics.Activity" />
             created by this <see cref="T:Azure.Core.Pipeline.ClientDiagnostics" /> for client method calls should be suppressed when called
             by other Azure SDK client methods.  It's recommended to set it to true for new clients, use default (null) for old clients
             for backward compatibility reasons, or set it to false to explicitly disable suppression for specific cases.
             The default value could change in the future, the flag should be only set to false if suppression for the client
             should never be enabled.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.AddLink(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds a link to the scope. This must be called before <see cref="M:Azure.Core.Pipeline.DiagnosticScope.Start" /> has been called for the DiagnosticScope.
            </summary>
            <param name="traceparent">The traceparent for the link.</param>
            <param name="tracestate">The tracestate for the link.</param>
            <param name="attributes">Optional attributes to associate with the link.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.SetTraceContext(System.String,System.String)">
            <summary>
            Sets the trace context for the current scope.
            </summary>
            <param name="traceparent">The trace parent to set for the current scope.</param>
            <param name="tracestate">The trace state to set for the current scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.Exception)">
            <summary>
            Marks the scope as failed.
            </summary>
            <param name="exception">The exception to associate with the failed scope.</param>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScope.Failed(System.String)">
            <summary>
            Marks the scope as failed with low-cardinality error.type attribute.
            </summary>
            <param name="errorCode">Error code to associate with the failed scope.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            Until Activity Source is no longer considered experimental.
            </summary>
        </member>
        <member name="M:Azure.Core.Pipeline.DiagnosticScopeFactory.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates diagnostic scope factory.
            </summary>
            <param name="clientNamespace">The namespace which is used as a prefix for all ActivitySources created by the factory and the name of DiagnosticSource (when used).</param>
            <param name="resourceProviderNamespace">Azure resource provider namespace.</param>
            <param name="isActivityEnabled">Flag indicating if distributed tracing is enabled.</param>
            <param name="suppressNestedClientActivities">Flag indicating if nested Azure SDK activities describing public API calls should be suppressed.</param>
            <param name="isStable">Whether instrumentation is considered stable. When false, experimental feature flag controls if tracing is enabled.</param>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1" /> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1" /> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator" /> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.CancellationHelper.ShouldWrapInOperationCanceledException(System.Exception,System.Threading.CancellationToken)">
            <summary>Determines whether to wrap an <see cref="T:System.Exception" /> in a cancellation exception.</summary>
            <param name="exception">The exception.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> that may have triggered the exception.</param>
            <returns>true if the exception should be wrapped; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Core.CancellationHelper.CreateOperationCanceledException(System.Exception,System.Threading.CancellationToken,System.String)">
            <summary>Creates a cancellation exception.</summary>
            <param name="innerException">The inner exception to wrap. May be null.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> that triggered the cancellation.</param>
            <param name="message">The custom message to use.</param>
            <returns>The cancellation exception.</returns>
        </member>
        <member name="M:Azure.Core.CancellationHelper.ThrowIfCancellationRequested(System.Threading.CancellationToken)">
            <summary>Throws a cancellation exception if cancellation has been requested via <paramref name="cancellationToken" />.</summary>
            <param name="cancellationToken">The token to check for a cancellation request.</param>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Usage">
            <summary>
            Gets or sets a coma separated list of additional model usage modes. Allowed values: model, error, intput, output.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenModelAttribute.Formats">
            <summary>
            Gets or sets a coma separated list of additional model serialization formats.
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.PropertyName">
            <summary>
            Gets or sets the property name which these hooks should apply to
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.SerializationPath">
            <summary>
            Gets or sets the serialization path of the property in the JSON
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.SerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(Utf8JsonWriter writer);
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.DeserializationValueHook">
            <summary>
            Gets or sets the method name to use when deserializing the property value from the JSON
            private static void DeserializationHook(JsonProperty property, ref TypeOfTheProperty propertyValue); // if the property is required
            private static void DeserializationHook(JsonProperty property, ref Optional&lt;TypeOfTheProperty&gt; propertyValue); // if the property is optional
            </summary>
        </member>
        <member name="P:Azure.Core.CodeGenSerializationAttribute.BicepSerializationValueHook">
            <summary>
            Gets or sets the method name to use when serializing the property value (property name excluded)
            The signature of the serialization hook method must be or compatible with when invoking:
            private void SerializeHook(StringBuilder builder);
            </summary>
        </member>
        <member name="T:Azure.Core.AppContextSwitchHelper">
            <summary>
            Helper for interacting with AppConfig settings and their related Environment variable settings.
            </summary>
        </member>
        <member name="M:Azure.Core.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Determines if either an AppContext switch or its corresponding Environment Variable is set
            </summary>
            <param name="appContexSwitchName">Name of the AppContext switch.</param>
            <param name="environmentVariableName">Name of the Environment variable.</param>
            <returns>If the AppContext switch has been set, returns the value of the switch.
            If the AppContext switch has not been set, returns the value of the environment variable.
            False if neither is set.
            </returns>
        </member>
        <member name="T:Azure.Core.AsyncLockWithValue`1">
            <summary>
            Primitive that combines async lock and value cache
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.GetLockOrValueAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Method that either returns cached value or acquire a lock.
            If one caller has acquired a lock, other callers will be waiting for the lock to be released.
            If value is set, lock is released and all waiters get that value.
            If value isn't set, the next waiter in the queue will get the lock.
            </summary>
            <param name="async"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.HasValue">
            <summary>
            Returns true if lock contains the cached value. Otherwise false.
            </summary>
        </member>
        <member name="P:Azure.Core.AsyncLockWithValue`1.LockOrValue.Value">
            <summary>
            Returns cached value if it was set when lock has been created. Throws exception otherwise.
            </summary>
            <exception cref="T:System.InvalidOperationException">Value isn't set.</exception>
        </member>
        <member name="M:Azure.Core.AsyncLockWithValue`1.LockOrValue.SetValue(`0)">
            <summary>
            Set value to the cache and to all the waiters.
            </summary>
            <param name="value"></param>
            <exception cref="T:System.InvalidOperationException">Value is set already.</exception>
        </member>
        <member name="T:Azure.Core.FixedDelayWithNoJitterStrategy">
            <summary>
            A delay strategy that uses a fixed delay with no jitter applied. This is used by data plane LROs.
            </summary>
        </member>
        <member name="T:Azure.Core.OperationInternal">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternal.Succeeded(Azure.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal.#ctor(Azure.Core.IOperation,Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy"> The delay strategy to use. Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="T:Azure.Core.IOperation">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
        </member>
        <member name="M:Azure.Core.IOperation.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />
            don't need to be updated. Operation-specific properties, such as "<c>CreateOn</c>" or "<c>LastModified</c>",
            must be manually updated by the operation implementing this method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&gt; IOperation.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState.Failure(response.GetRawResponse());<br />
                return OperationState.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState.Success(Azure.Response)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationState.Success(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. If left <c>null</c>,
            a default exception is created based on the <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.RawResponse">
            <summary>
            The last HTTP response received from the server. Its update already handled in calls to "<c>UpdateStatus</c>" and
            "<c>WaitForCompletionAsync</c>", but custom methods not supported by this class, such as "<c>CancelOperation</c>",
            must update it as well.
            <example>Usage example:
            <code>
              public Response GetRawResponse() =&gt; _operationInternal.RawResponse;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternalBase.HasCompleted">
            <summary>
            Returns <c>true</c> if the long-running operation has completed.
            <example>Usage example:
            <code>
              public bool HasCompleted =&gt; _operationInternal.HasCompleted;
            </code>
            </example>
            </summary>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&gt; UpdateStatusAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.UpdateStatusAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get the latest status of the long-running operation, handling diagnostic scope creation for distributed
            tracing. The default scope name can be changed with the "<c>operationTypeName</c>" parameter passed to the constructor.
            <example>Usage example:
            <code>
              public Response UpdateStatus(CancellationToken cancellationToken) =&gt; _operationInternal.UpdateStatus(cancellationToken);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The HTTP response received from the server.</returns>
            <remarks>
            After a successful run, this method will update <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> and might update <see cref="P:Azure.Core.OperationInternalBase.HasCompleted" />.
            </remarks>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponseAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server. <strong></strong></param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.  The maximum of the retry after value and the fallback strategy
            is then used as the wait interval.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternalBase.WaitForCompletionResponse(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.OperationInternal`1">
            <summary>
            A helper class used to build long-running operation instances. In order to use this helper:
            <list type="number">
              <item>Make sure your LRO implements the <see cref="T:Azure.Core.IOperation`1" /> interface.</item>
              <item>Add a private <see cref="T:Azure.Core.OperationInternal`1" /> field to your LRO, and instantiate it during construction.</item>
              <item>Delegate method calls to the <see cref="T:Azure.Core.OperationInternal`1" /> implementations.</item>
            </list>
            Supported members:
            <list type="bullet">
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.HasValue" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.HasCompleted" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternal`1.Value" /></description>
              </item>
              <item>
                <description><see cref="P:Azure.Core.OperationInternalBase.RawResponse" />, used for <see cref="M:Azure.Operation.GetRawResponse" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)" /></description>
              </item>
              <item>
                <description><see cref="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)" /></description>
              </item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Succeeded(Azure.Response,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final successful state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="value">The final result of the long-running operation.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.Failed(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal" /> class in a final failed state.
            </summary>
            <param name="rawResponse">The final value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />.</param>
            <param name="operationFailedException">The exception that will be thrown by <c>UpdateStatusAsync</c>.</param>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.#ctor(Azure.Core.IOperation{`0},Azure.Core.Pipeline.ClientDiagnostics,Azure.Response,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Azure.Core.DelayStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Core.OperationInternal`1" /> class.
            </summary>
            <param name="operation">The long-running operation making use of this class. Passing "<c>this</c>" is expected.</param>
            <param name="clientDiagnostics">Used for diagnostic scope and exception creation. This is expected to be the instance created during the construction of your main client.</param>
            <param name="rawResponse">
                The initial value of <see cref="P:Azure.Core.OperationInternalBase.RawResponse" />. Usually, long-running operation objects can be instantiated in two ways:
                <list type="bullet">
                    <item>
                        When calling a client's "<c>Start&lt;OperationName&gt;</c>" method, a service call is made to start the operation, and an <see cref="T:Azure.Operation`1" /> instance is returned.
                        In this case, the response received from this service call can be passed here.
                    </item>
                    <item>
                        When a user instantiates an <see cref="T:Azure.Operation`1" /> directly using a public constructor, there's no previous service call. In this case, passing <c>null</c> is expected.
                    </item>
                </list>
            </param>
            <param name="operationTypeName">
                The type name of the long-running operation making use of this class. Used when creating diagnostic scopes. If left <c>null</c>, the type name will be inferred based on the
                parameter <paramref name="operation" />.
            </param>
            <param name="scopeAttributes">The attributes to use during diagnostic scope creation.</param>
            <param name="fallbackStrategy">The delay strategy when Retry-After header is not present.  When it is present, the longer of the two delays will be used.
                Default is <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />.</param>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.HasValue">
            <summary>
            Returns <c>true</c> if the long-running operation completed successfully and has produced a final result.
            <example>Usage example:
            <code>
              public bool HasValue =&gt; _operationInternal.HasValue;
            </code>
            </example>
            </summary>
        </member>
        <member name="P:Azure.Core.OperationInternal`1.Value">
            <summary>
            The final result of the long-running operation.
            <example>Usage example:
            <code>
              public T Value =&gt; _operationInternal.Value;
            </code>
            </example>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the operation has not completed yet.</exception>
            <exception cref="T:Azure.RequestFailedException">Thrown when the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatusAsync(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the parameter <paramref name="pollingInterval" />, but it can change based on information returned
            from the server. After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed. In this case, the maximum value between the <paramref name="pollingInterval" />
            parameter and the retry-after header is chosen as the wait interval. Headers supported are: "Retry-After", "retry-after-ms",
            and "x-ms-retry-after-ms".
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(TimeSpan pollingInterval, CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(pollingInterval, cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes.
            After each service call, a retry-after header may be returned to communicate that there is no reason to poll
            for status change until the specified time has passed.
            Headers supported are: "Retry-After", "retry-after-ms", and "x-ms-retry-after-ms",
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="M:Azure.Core.OperationInternal`1.WaitForCompletion(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls <see cref="M:Azure.Core.OperationInternalBase.UpdateStatus(System.Threading.CancellationToken)" /> until the long-running operation completes. The interval
            between calls is defined by the <see cref="T:Azure.Core.FixedDelayWithNoJitterStrategy" />, which takes into account any retry-after header that is returned
            from the server.
            <example>Usage example:
            <code>
              public async ValueTask&lt;Response&lt;T&gt;&gt; WaitForCompletionAsync(CancellationToken cancellationToken) =&gt;
                await _operationInternal.WaitForCompletionAsync(cancellationToken).ConfigureAwait(false);
            </code>
            </example>
            </summary>
            <param name="pollingInterval">The interval between status requests to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>The last HTTP response received from the server, including the final result of the long-running operation.</returns>
            <exception cref="T:Azure.RequestFailedException">Thrown if there's been any issues during the connection, or if the operation has completed with failures.</exception>
        </member>
        <member name="T:Azure.Core.IOperation`1">
            <summary>
            An interface used by <see cref="T:Azure.Core.OperationInternal`1" /> for making service calls and updating state. It's expected that
            your long-running operation classes implement this interface.
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.IOperation`1.UpdateStateAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Calls the service and updates the state of the long-running operation. Properties directly handled by the
            <see cref="T:Azure.Core.OperationInternal`1" /> class, such as <see cref="P:Azure.Core.OperationInternalBase.RawResponse" /> or
            <see cref="P:Azure.Core.OperationInternal`1.Value" />, don't need to be updated. Operation-specific properties, such
            as "<c>CreateOn</c>" or "<c>LastModified</c>", must be manually updated by the operation implementing this
            method.
            <example>Usage example:
            <code>
              async ValueTask&lt;OperationState&lt;T&gt;&gt; IOperation&lt;T&gt;.UpdateStateAsync(bool async, CancellationToken cancellationToken)<br />
              {<br />
                Response&lt;R&gt; response = async ? &lt;async service call&gt; : &lt;sync service call&gt;;<br />
                if (&lt;operation succeeded&gt;) return OperationState&lt;T&gt;.Success(response.GetRawResponse(), &lt;parse response&gt;);<br />
                if (&lt;operation failed&gt;) return OperationState&lt;T&gt;.Failure(response.GetRawResponse());<br />
                return OperationState&lt;T&gt;.Pending(response.GetRawResponse());<br />
              }
            </code>
            </example>
            </summary>
            <param name="async"><c>true</c> if the call should be executed asynchronously. Otherwise, <c>false</c>.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> controlling the request lifetime.</param>
            <returns>
            A structure indicating the current operation state. The <see cref="T:Azure.Core.OperationState`1" /> structure must be instantiated by one of
            its static methods:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </returns>
        </member>
        <member name="T:Azure.Core.OperationState`1">
            <summary>
            A helper structure passed to <see cref="T:Azure.Core.OperationInternal`1" /> to indicate the current operation state. This structure must be
            instantiated by one of its static methods, depending on the operation state:
            <list type="bullet">
              <item>Use <see cref="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)" /> when the operation has completed successfully.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)" /> when the operation has completed with failures.</item>
              <item>Use <see cref="M:Azure.Core.OperationState`1.Pending(Azure.Response)" /> when the operation has not completed yet.</item>
            </list>
            </summary>
            <typeparam name="T">The final result of the long-running operation. Must match the type used in <see cref="T:Azure.Operation`1" />.</typeparam>
        </member>
        <member name="M:Azure.Core.OperationState`1.Success(Azure.Response,`0)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed successfully.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="value">The final result of the long-running operation.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> or <paramref name="value" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Failure(Azure.Response,Azure.RequestFailedException)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has completed with failures.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <param name="operationFailedException">
            The exception to throw from <c>UpdateStatus</c> because of the operation failure. The same exception will be thrown when
            <see cref="P:Azure.Core.OperationInternal`1.Value" /> is called. If left <c>null</c>, a default exception is created based on the
            <paramref name="rawResponse" /> parameter.
            </param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="M:Azure.Core.OperationState`1.Pending(Azure.Response)">
            <summary>
            Instantiates an <see cref="T:Azure.Core.OperationState`1" /> indicating the operation has not completed yet.
            </summary>
            <param name="rawResponse">The HTTP response obtained during the status update.</param>
            <returns>A new <see cref="T:Azure.Core.OperationState`1" /> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="rawResponse" /> is <c>null</c>.</exception>
        </member>
        <member name="T:Azure.Core.OperationPoller">
            <summary>
            Implementation of LRO polling logic.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Id">
            <summary>
            Gets an ID representing the operation that can be used to poll for
            the status of the long-running operation.
            There are cases that operation id is not available, we return "NOT_SET" for unavailable operation id.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.Value">
            <summary>
            Final result of the long-running operation.
            </summary><remarks>
            This property can be accessed only after the operation completes successfully (HasValue is true).
            </remarks>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasCompleted">
            <summary>
            Returns true if the long-running operation completed.
            </summary>
        </member>
        <member name="P:Azure.Core.ProtocolOperation`1.HasValue">
            <summary>
            Returns true if the long-running operation completed successfully and has produced final result (accessible by Value property).
            </summary>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.GetRawResponse">
            <summary>
            The last HTTP response received from the server.
            </summary><remarks>
            The last response returned from the server during the lifecycle of this instance.
            An instance of <see cref="T:Azure.Operation`1" /> sends requests to a server in UpdateStatusAsync, UpdateStatus, and other methods.
            Responses from these requests can be accessed using GetRawResponse.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatus(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the server to get updated status of the long-running operation.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the service call.</param><returns>The HTTP response received from the server.</returns><remarks>
            This operation will update the value returned from GetRawResponse and might update HasCompleted.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="M:Azure.Core.ProtocolOperation`1.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Periodically calls the server till the long-running operation completes.
            </summary><param name="pollingInterval">
            The interval between status requests to the server.
            The interval can change based on information returned from the server.
            For example, the server might communicate to the client that there is not reason to poll for status change sooner than some time.
            </param><param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> used for the periodical service calls.</param><returns>The last HTTP response received from the server.</returns><remarks>
            This method will periodically call UpdateStatusAsync till HasCompleted is true, then return the final result of the operation.
            </remarks>
        </member>
        <member name="T:Azure.Core.SequentialDelayStrategy">
            <summary>
            A delay strategy that uses a fixed sequence of delays with no jitter applied. This is used by management LROs.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute">
            <summary>
            Indicates that the specified method requires the ability to generate new code at runtime,
            for example through <see cref="N:System.Reflection" />.
            </summary>
            <remarks>
            This allows tools to understand which methods are unsafe to call when compiling ahead of time.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute" /> class
            with the specified message.
            </summary>
            <param name="message">
            A message that contains information about the usage of dynamic code.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.Message">
            <summary>
            Gets a message that contains information about the usage of dynamic code.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.Url">
            <summary>
            Gets or sets an optional URL that contains more information about the method,
            why it requires dynamic code, and what options a consumer has to deal with it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute">
            <summary>
            Indicates that the specified method requires dynamic access to code that is not referenced
            statically, for example through <see cref="N:System.Reflection" />.
            </summary>
            <remarks>
            This allows tools to understand which methods are unsafe to call when removing unreferenced
            code from an application.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute" /> class
            with the specified message.
            </summary>
            <param name="message">
            A message that contains information about the usage of unreferenced code.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.Message">
            <summary>
            Gets a message that contains information about the usage of unreferenced code.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.Url">
            <summary>
            Gets or sets an optional URL that contains more information about the method,
            why it requires unreferenced code, and what options a consumer has to deal with it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
            <summary>
            Suppresses reporting of a specific rule violation, allowing multiple suppressions on a
            single code artifact.
            </summary>
            <remarks>
            <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" /> is different than
            <see cref="T:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute" /> in that it doesn't have a
            <see cref="T:System.Diagnostics.ConditionalAttribute" />. So it is always preserved in the compiled assembly.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" />
            class, specifying the category of the tool and the identifier for an analysis rule.
            </summary>
            <param name="category">The category for the attribute.</param>
            <param name="checkId">The identifier of the analysis rule the attribute applies to.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category">
            <summary>
            Gets the category identifying the classification of the attribute.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category" /> property describes the tool or tool analysis category
            for which a message suppression attribute applies.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId">
            <summary>
            Gets the identifier of the analysis tool rule to be suppressed.
            </summary>
            <remarks>
            Concatenated together, the <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category" /> and <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId" />
            properties form a unique check identifier.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Scope">
            <summary>
            Gets or sets the scope of the code that is relevant for the attribute.
            </summary>
            <remarks>
            The Scope property is an optional argument that specifies the metadata scope for which
            the attribute is relevant.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target">
            <summary>
            Gets or sets a fully qualified path that represents the target of the attribute.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target" /> property is an optional argument identifying the analysis target
            of the attribute. An example value is "System.IO.Stream.ctor():System.Void".
            Because it is fully qualified, it can be long, particularly for targets such as parameters.
            The analysis tool user interface should be capable of automatically formatting the parameter.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId">
            <summary>
            Gets or sets an optional argument expanding on exclusion criteria.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId" /> property is an optional argument that specifies additional
            exclusion where the literal metadata target is not sufficiently precise. For example,
            the <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" /> cannot be applied within a method,
            and it may be desirable to suppress a violation against a statement in the method that will
            give a rule violation, but not against all statements in the method.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Justification">
            <summary>
            Gets or sets the justification for suppressing the code analysis message.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute">
            <summary>
            States a dependency that one member has on another.
            </summary>
            <remarks>
            This can be used to inform tooling of a dependency that is otherwise not evident purely from
            metadata and IL, for example a member relied on via reflection.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on the same type as the consumer.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on a <see cref="T:System.Type" />.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
            <param name="type">The <see cref="T:System.Type" /> containing <paramref name="memberSignature" />.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified signature of a member on a type in an assembly.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
            <param name="typeName">The full name of the type containing the specified member.</param>
            <param name="assemblyName">The assembly name of the type containing the specified member.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified types of members on a <see cref="T:System.Type" />.
            </summary>
            <param name="memberTypes">The types of members depended on.</param>
            <param name="type">The <see cref="T:System.Type" /> containing the specified members.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute" /> class
            with the specified types of members on a type in an assembly.
            </summary>
            <param name="memberTypes">The types of members depended on.</param>
            <param name="typeName">The full name of the type containing the specified members.</param>
            <param name="assemblyName">The assembly name of the type containing the specified members.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature">
            <summary>
            Gets the signature of the member depended on.
            </summary>
            <remarks>
            Either <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature" /> must be a valid string or <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes" />
            must not equal <see cref="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None" />, but not both.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes">
            <summary>
            Gets the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" /> which specifies the type
            of members depended on.
            </summary>
            <remarks>
            Either <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature" /> must be a valid string or <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes" />
            must not equal <see cref="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None" />, but not both.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type">
            <summary>
            Gets the <see cref="T:System.Type" /> containing the specified member.
            </summary>
            <remarks>
            If neither <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type" /> nor <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> are specified,
            the type of the consumer is assumed.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName">
            <summary>
            Gets the full name of the type containing the specified member.
            </summary>
            <remarks>
            If neither <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type" /> nor <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> are specified,
            the type of the consumer is assumed.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.AssemblyName">
            <summary>
            Gets the assembly name of the specified type.
            </summary>
            <remarks>
            <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.AssemblyName" /> is only valid when <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName" /> is specified.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Condition">
            <summary>
            Gets or sets the condition in which the dependency is applicable, e.g. "DEBUG".
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute">
             <summary>
             Indicates that certain members on a specified <see cref="T:System.Type" /> are accessed dynamically,
             for example through <see cref="N:System.Reflection" />.
             </summary>
             <remarks>
             This allows tools to understand which members are being accessed during the execution
             of a program.
            
             This attribute is valid on members whose type is <see cref="T:System.Type" /> or <see cref="T:System.String" />.
            
             When this attribute is applied to a location of type <see cref="T:System.String" />, the assumption is
             that the string represents a fully qualified type name.
            
             When this attribute is applied to a class, interface, or struct, the members specified
             can be accessed dynamically on <see cref="T:System.Type" /> instances returned from calling
             <see cref="M:System.Object.GetType" /> on instances of that class, interface, or struct.
            
             If the attribute is applied to a method it's treated as a special case and it implies
             the attribute should be applied to the "this" parameter of the method. As such the attribute
             should only be used on instance methods of types assignable to System.Type (or string, but no methods
             will use it there).
             </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute" /> class
            with the specified member types.
            </summary>
            <param name="memberTypes">The types of members dynamically accessed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute.MemberTypes">
            <summary>
            Gets the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" /> which specifies the type
            of members dynamically accessed.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes">
             <summary>
             Specifies the types of members that are dynamically accessed.
            
             This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a
             bitwise combination of its member values.
             </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None">
            <summary>
            Specifies no members.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor">
            <summary>
            Specifies the default, parameterless public constructor.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors">
            <summary>
            Specifies all public constructors.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicConstructors">
            <summary>
            Specifies all non-public constructors.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicMethods">
            <summary>
            Specifies all public methods.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicMethods">
            <summary>
            Specifies all non-public methods.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields">
            <summary>
            Specifies all public fields.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicFields">
            <summary>
            Specifies all non-public fields.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicNestedTypes">
            <summary>
            Specifies all public nested types.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicNestedTypes">
            <summary>
            Specifies all non-public nested types.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties">
            <summary>
            Specifies all public properties.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicProperties">
            <summary>
            Specifies all non-public properties.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicEvents">
            <summary>
            Specifies all public events.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicEvents">
            <summary>
            Specifies all non-public events.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.Interfaces">
            <summary>
            Specifies all interfaces implemented by the type.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All">
            <summary>
            Specifies all members.
            </summary>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
            <summary>Gets an enumerable collection that contains the keys in the read-only dictionary.</summary><returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:Azure.Communication.CallAutomation.ChangeTrackingDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
            <summary>Gets an enumerable collection that contains the values in the read-only dictionary.</summary><returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ChangeTrackingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Communication.CallAutomation.ChangeTrackingList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary><returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Azure.Core.Pipeline.TaskExtensions.Enumerator`1.System#Collections#IEnumerator#Current">
            <summary>Gets the element in the collection at the current position of the enumerator.</summary><returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
    </members>
</doc>
